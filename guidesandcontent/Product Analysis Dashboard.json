{"version":11,"variables":[{"key":"ProductPage","type":"query","input":"fetch logs \n| filter k8s.namespace.name == \"hipstershop\" and k8s.container.name == \"frontend\"| parse content, \"JSON:jsonContent\"\n| fields \n  path = jsonContent[http.req.path],\n  status = jsonContent[http.resp.status]\n| filter status==200\n| fields path\n| filter startsWith(path, \"/product/\")","multiple":false},{"key":"SessionID","type":"query","input":"fetch logs \n| filter k8s.namespace.name == \"hipstershop\" and k8s.container.name == \"frontend\"\n| parse content, \"JSON:jsonContent\"\n| fields \n  path = jsonContent[http.req.path],\n  status = jsonContent[http.resp.status],\n  sessionID = jsonContent[session]\n| filter status==200\n| fields sessionID\n| filter isNotNull(sessionID) \n| filterOut endsWith(sessionID, \"probe\")","multiple":false}],"tiles":{"0":{"type":"data","title":"","query":"fetch logs \n| filter k8s.namespace.name == \"hipstershop\" and k8s.container.name == \"frontend\"\n| parse content, \"JSON:jsonContent\"\n| fields timestamp, \n  method = jsonContent[http.req.method],\n  path = jsonContent[http.req.path],\n  bytes = jsonContent[http.resp.bytes],\n  status = jsonContent[http.resp.status],\n  response_time = jsonContent[http.resp.took_ms],\n  message = jsonContent[message],\n  sessionID = jsonContent[session],\n  loglevel = jsonContent[severity]\n| filter status==200\n| filter startsWith(path, $ProductPage)\n| summarize count = count(),by: {bin(timestamp, 1m), path}\n\n//| sort count desc\n","visualization":"areaChart","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","seriesOverrides":[{"seriesId":["/product/6E92ZMYYFZ","count"],"override":{"color":"#b3007d"}}]},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[["log.source"]]}}},"1":{"type":"data","title":"SessionID by activity","query":"fetch logs \n| filter k8s.namespace.name == \"hipstershop\" and k8s.container.name == \"frontend\"\n| parse content, \"JSON:jsonContent\"\n| fields timestamp, \n  method = jsonContent[http.req.method],\n  path = jsonContent[http.req.path],\n  bytes = jsonContent[http.resp.bytes],\n  status = jsonContent[http.resp.status],\n  response_time = jsonContent[http.resp.took_ms],\n  message = jsonContent[message],\n  sessionID = jsonContent[session],\n  loglevel = jsonContent[severity]\n| filter status==200 and contains(path, \"/product\")\n| summarize count = count(),by: {bin(timestamp, 1m), $SessionID}","visualization":"areaChart","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]}}}},"layouts":{"0":{"x":0,"y":0,"w":24,"h":6},"1":{"x":0,"y":6,"w":24,"h":7}}}