{"version":11,"variables":[{"key":"VulnerabilityId","type":"query","input":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| fields timestamp, id=vulnerability.display_id\n| summarize ids=splitString(concat(\"ANY, \",substring(toString(collectDistinct(id)),from:1,to:-1)),\", \"), \nby:{timestamp=bin(timestamp,30m)}\n| sort timestamp, direction:\"descending\"\n| limit 1\n| fields ids | sort ids","multiple":false},{"key":"ScanGBLimit","type":"csv","input":"1000,3000,5000,10000,-1","multiple":false},{"key":"CVE","type":"query","input":"fetch events, from:now()-30m\n| filter event.level==\"ENTITY\"\n| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n| filterOut isNull(vulnerability.references.cve)\n| summarize zones=collectDistinct(splitString(concat(\"ANY,\",substring(toString(toArray(vulnerability.references.cve)),from:1,to:-1)),\",\"))","multiple":false},{"key":"ManagementZone","type":"query","input":"fetch events\n| filter event.kind == \"SECURITY_EVENT\"\n| filter event.category == \"VULNERABILITY_MANAGEMENT\"\n| filter event.provider == \"Dynatrace\"\n| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"   \n| filter event.level == \"ENTITY\" \n| summarize takeLast(vulnerability.id), by: {affected_entity.management_zones.names}\n| fields values = affected_entity.management_zones.names \n| fields values = arrayRemoveNulls(array(\"ANY\", values))","multiple":false}],"tiles":{"12":{"title":"","type":"markdown","content":"![](https://dt-cdn.net/images/appsec-logo-with-bg-and-rounded-corners-200-8253a2bc6e.png)\n### Dynatrace AppSec"},"14":{"title":"","type":"markdown","content":"# Third-party vulnerability exposure report\n\nTrack and report your organization's exposure to a specific third-party vulnerability.\n\n#### Use this template to answer the following security questions:\n\n* Is your organization exposed to a specific vulnerability?\n* What areas of your environment are at risk?\n* How the exposure has evolved over time?\n\n*Note: Dashboard contents are calculated and displayed according to set [variable values](https://www.dynatrace.com/support/help/observe-and-explore/dashboards-new/get-started/dashboards-use#dashboard-variable-set).*"},"15":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"VULNERABILITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entities.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n// extract the latest snapshot data\n| sort timestamp, direction:\"descending\"\n| summarize {\nvulnerability.display_id=takeFirst(vulnerability.display_id),\n`External id`=takeFirst(vulnerability.external_id),\n`CVE`=takeFirst(vulnerability.references.cve),\nType=takeFirst(vulnerability.type),\nStack=takeFirst(vulnerability.stack),\n`CWE`=takeFirst(vulnerability.references.cwe),\n`OWASP`=takeFirst(vulnerability.references.owasp)\n}","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[["Description"]]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]}},"visualization":"table"},"16":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n// end of filter for the latest snapshot\n| summarize {\nOpen=countIf(vulnerability.resolution.status==\"OPEN\" AND vulnerability.mute.status==\"NOT_MUTED\"),\nResolved=countIf(vulnerability.resolution.status==\"RESOLVED\" AND vulnerability.mute.status==\"NOT_MUTED\"),\nMuted=countIf(vulnerability.mute.status==\"MUTED\")\n}\n| fields `Status`=if(Open==0 AND Resolved==0 AND Muted>0,concat(\"‚ö´\",\"Muted\"), \n             else:if(Open==0 AND Resolved>0,concat(\"‚úÖ\",\"Resolved\"), \n             else:\"Open\"))","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]},"singleValueSettings":{"showLabel":true,"suffix":"","recordField":"Status","autoscale":true}},"visualization":"singleValue"},"17":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n// end of filter for the latest snapshot\n| summarize\n`Davis Security Score`=round(takeMax(vulnerability.risk.score),decimals:1)\n| fields \n`Davis Security Level`=if(`Davis Security Score`>9,\"CRITICAL\",else:if(`Davis Security Score`>7,\"HIGH\",else:if(`Davis Security Score`>4,\"MEDIUM\",else:\"LOW\"))),\n`Davis Security Score`\n| fields\n`Davis Security Level`,\n`Davis Security Score`=concat(`Davis Security Level`,\" (\",round(`Davis Security Score`,decimals:2),\")\")\n| fields `Davis Security Score`=if(`Davis Security Level`==\"CRITICAL\",concat(\"üö®\",\" \",`Davis Security Score`),else:if(`Davis Security Level`==\"HIGH\",concat(\"üö®\",\" \",`Davis Security Score`),else:`Davis Security Score`))","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]},"singleValueSettings":{"showLabel":true,"suffix":"","recordField":"Davis Security Score","autoscale":true}},"visualization":"singleValue"},"30":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n// end of filter for the latest snapshot\n| summarize\n`# Internet exposure`=countIf(vulnerability.davis_assessment.exposure_status==\"PUBLIC_NETWORK\")\n| fields `Internet exposure`=if(`# Internet exposure`>0,concat(\"‚ùó\",\"Public\"),else:\"Not exposed\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]}},"visualization":"singleValue"},"31":{"type":"data","title":"CVSSv3 base score (NVD)","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"VULNERABILITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entities.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n// extract the latest snapshot data\n| sort timestamp, direction:\"descending\"\n| summarize\n`CVSS Score`=takeFirst(vulnerability.cvss.base_score)\n| fields `CVSSv3 base score (NVD)`=round(`CVSS Score`, decimals:1)","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":false,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]}},"visualization":"singleValue"},"32":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n// end of filter for the latest snapshot\n| summarize \n`# Vulnerable function usages` = countIf(vulnerability.davis_assessment.vulnerable_function_status == \"IN_USE\"),\n`# Not-available` = countIf(vulnerability.davis_assessment.vulnerable_function_status == \"NOT_AVAILABLE\")\n| fields `Function usage`=if(`# Vulnerable function usages`>0,concat(\"‚ùó\",\"In use\"),else:if(`# Not-available`>0,\"No Data\",else:\"Not in use\"))","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[],"firstVisibleRowIndex":0},"singleValueSettings":{"showLabel":true,"suffix":"","autoscale":true}},"visualization":"singleValue"},"34":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n// end of filter for the latest snapshot\n| summarize\n`Exploit count`=countIf(vulnerability.davis_assessment.exploit_status==\"AVAILABLE\")\n| fields `Exploit`=if(`Exploit count`>0,concat(\"‚ùó\",\"Exists\"),else:\"No data\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"singleValueSettings":{"showLabel":true,"suffix":"","autoscale":true}},"visualization":"singleValue"},"37":{"title":"","type":"markdown","content":"## üí• Exposure summary\n--- \nYour environment's exposure to the selected vulnerability, the affected or related entities, and the risk score."},"53":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n// end of filter for the latest snapshot\n| summarize\n`Total affected entities`=arraySize(collectDistinct(affected_entity.id))","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"singleValueSettings":{"showLabel":true,"suffix":"","autoscale":true},"tableSettings":{"displayMode":"edit","lineWrapIds":[],"firstVisibleRowIndex":0}},"visualization":"singleValue"},"55":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n// end of filter for the latest snapshot\n| summarize \n`# Reachable data assets`=countIf(vulnerability.davis_assessment.data_asset_status==\"REACHABLE\")\n| fields `Data assets`=if(`# Reachable data assets`>0,concat(\"‚ùó\",\"Reachable\"),else:\"Unreachable\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]}},"visualization":"singleValue"},"68":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| sort timestamp, direction:\"descending\"\n| limit 1\n| fields\n`Latest analyzed data`=formatTimestamp(timestamp, format:\"YYYY-MM-dd\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"singleValueSettings":{"showLabel":false,"suffix":"","autoscale":true},"tableSettings":{"displayMode":"edit","lineWrapIds":[]}},"visualization":"singleValue"},"69":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| fieldsAdd change_date=toTimestamp(vulnerability.resolution.change_date)\n| sort change_date, direction:\"descending\"\n| limit 1\n| fields `Latest status change`=formatTimestamp(change_date, format:\"YYYY-MM-dd\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"singleValueSettings":{"showLabel":false,"suffix":"","autoscale":true},"tableSettings":{"displayMode":"edit","lineWrapIds":[]}},"visualization":"singleValue"},"70":{"title":"","type":"markdown","content":"### Environment"},"72":{"title":"","type":"markdown","content":"### Risk"},"73":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"VULNERABILITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entities.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| sort timestamp, direction:\"descending\"\n| summarize\nName=takeFirst(concat(vulnerability.display_id,\" \", vulnerability.title))","visualization":"singleValue","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]}}},"74":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"VULNERABILITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entities.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| sort timestamp, direction:\"descending\"\n| summarize\nCVEs=substring(toString(toArray(takeFirst(vulnerability.references.cve))), from:1,to:-1)","visualization":"singleValue","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]}}},"75":{"title":"","type":"markdown","content":"### Vulnerability"},"76":{"type":"data","title":"Technology","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"VULNERABILITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entities.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| sort timestamp, direction:\"descending\"\n| summarize\nTechnology=takeFirst(vulnerability.technology)","visualization":"singleValue","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":false,"label":"","autoscale":true},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]}}},"77":{"type":"data","title":"Components","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n// end of filter for the latest snapshot\n| filter isNotNull(affected_entity.vulnerable_component.id)\n| summarize\nComponents=collectDistinct(affected_entity.vulnerable_component.short_name)\n| fields Components=substring(toString(Components), from:1,to:-1)","visualization":"singleValue","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":false,"label":"","autoscale":true},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]}}},"78":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n// end of filter for the latest snapshot\n| summarize\n`Affected entity types`=collectDistinct(affected_entity.type)\n| fields `Entity type`=substring(toString(`Affected entity types`),from:1,to:-1)\n| fields `Entity type`=if(`Entity type`==\"PROCESS_GROUP\",\"Process group\",else:\"Host\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]}},"visualization":"singleValue"},"79":{"type":"data","title":"Entities by status","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| sort timestamp, direction:\"descending\"\n| summarize\n{\nvulnerability.resolution.status=takeFirst(vulnerability.resolution.status),\nvulnerability.mute.status=takeFirst(vulnerability.mute.status)\n}, by: {timestamp=bin(timestamp,1h), affected_entity.id}\n| sort timestamp, direction:\"descending\"\n| summarize {\nAffected=countIf(vulnerability.resolution.status==\"OPEN\" AND vulnerability.mute.status==\"NOT_MUTED\"),\nResolved=countIf(vulnerability.resolution.status==\"RESOLVED\" AND vulnerability.mute.status==\"NOT_MUTED\"),\nMuted=countIf(vulnerability.mute.status==\"MUTED\")\n},\nby: {timestamp}\n| sort timestamp, direction:\"descending\"","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","legend":{"hidden":false,"position":"auto"},"leftYAxisSettings":{"label":"","min":0},"seriesOverrides":[{"seriesId":"Muted","override":{"color":"#5D687E"}},{"seriesId":"Resolved","override":{"color":"#009E8C"}},{"seriesId":"Open","override":{"color":{"Default":"var(--dt-colors-charts-categorical-color-12-default, #d50b34)","Hover":"var(--dt-colors-charts-categorical-color-12-hover, #b30024)","Active":"var(--dt-colors-charts-categorical-color-12-active, #7e071d)","DefaultTransparent":"var(--dt-colors-charts-categorical-color-12-default-transparent, #c5000ccc)","HoverTransparent":"var(--dt-colors-charts-categorical-color-12-hover-transparent, #83000fcc)","ActiveTransparent":"var(--dt-colors-charts-categorical-color-12-active-transparent, #140000cc)"}}}],"colorPalette":"fireplace"},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[["Affected entities"]],"firstVisibleRowIndex":0},"singleValueSettings":{"showLabel":true,"suffix":"","recordField":"Affected Entities","autoscale":true}},"visualization":"areaChart"},"80":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n// end of filter for the latest snapshot\n| summarize entities=collectDistinct(related_entities.applications.ids)\n| expand entities\n| summarize entities=arraySize(arrayRemoveNulls(collectDistinct(entities)))\n| fields `Related applications`=if(entities>0, entities,  else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[["Related services"]]}},"visualization":"singleValue"},"81":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n// end of filter for the latest snapshot\n| summarize entities=collectDistinct(related_entities.databases.ids)\n| expand entities\n| summarize entities=arraySize(arrayRemoveNulls(collectDistinct(entities)))\n| fields `Related databases`=if(entities>0, entities,  else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]}},"visualization":"singleValue"},"82":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n// end of filter for the latest snapshot\n| summarize entities=collectDistinct(related_entities.services.ids)\n| expand entities\n| summarize entities=arraySize(arrayRemoveNulls(collectDistinct(entities)))\n| fields `Related services`=if(entities>0, entities,  else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[["Related services"]]}},"visualization":"singleValue"},"83":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n// end of filter for the latest snapshot\n| summarize `Functions in use`=collectDistinct(affected_entity.vulnerable_functions)\n| expand `Functions in use`\n| summarize `Functions in use`=collectDistinct(`Functions in use`)\n| fields `Functions in use`=arraySize(arrayRemoveNulls(`Functions in use`))\n| fields `Functions in use`=if(`Functions in use`>0,`Functions in use`,else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]}},"visualization":"singleValue"},"84":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n// end of filter for the latest snapshot\n| summarize `Software components`=arrayRemoveNulls(collectDistinct(affected_entity.vulnerable_component.id))\n| fields `Software components`=arraySize(`Software components`)\n| fields `Software components`=if(`Software components`>0,`Software components`,else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]}},"visualization":"singleValue"},"85":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n// end of filter for the latest snapshot\n| summarize\n`Affected processes`=replaceString(substring(toString(arrayDistinct(arrayRemoveNulls(collectArray(affected_entity.affected_processes.ids)))),from:2,to:-2),\"[\",\"\")\n| fields \n`Affected processes`= arrayDistinct(splitString(toString(replaceString(toString(`Affected processes`),\"], \",\",\")),\",\"))\n| fields \n`Affected processes`=if(not(in(\"\",`Affected processes`)),arraySize(`Affected processes`), else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[],"firstVisibleRowIndex":0}},"visualization":"singleValue"},"86":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n// end of filter for the latest snapshot\n| summarize\naffected_entity.type=takeAny(affected_entity.type),\nby: {affected_entity.id}\n| summarize \n`Affected process groups`=countIf(affected_entity.type==\"PROCESS_GROUP\")\n| fields `Affected process groups`=if(`Affected process groups`>0,`Affected process groups`,else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[],"firstVisibleRowIndex":0}},"visualization":"singleValue"},"87":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n// end of filter for the latest snapshot\n| summarize\naffected_entity.type=takeAny(affected_entity.type),\nby: {affected_entity.id}\n| summarize \n`Affected hosts`=countIf(affected_entity.type==\"HOST\")\n| fields `Affected hosts`=if(`Affected hosts`>0,`Affected hosts`,else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[],"firstVisibleRowIndex":0}},"visualization":"singleValue"},"88":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n// end of filter for the latest snapshot\n| summarize entities=collectDistinct(related_entities.hosts.ids)\n| expand entities\n| summarize entities=arraySize(arrayRemoveNulls(collectDistinct(entities)))\n| fields `Related hosts`=if(entities>0, entities,  else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[],"firstVisibleRowIndex":0}},"visualization":"singleValue"},"89":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n// end of filter for the latest snapshot\n| summarize entities=collectDistinct(related_entities.kubernetes_workloads.ids)\n| expand entities\n| summarize entities=arraySize(arrayRemoveNulls(collectDistinct(entities)))\n| fields `Related Kubernetes workloads`=if(entities>0, entities,  else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[],"firstVisibleRowIndex":0}},"visualization":"singleValue"},"90":{"title":"","type":"markdown","content":"## üìà Risk analysis\n--- \nIn-depth examination of risk assessment and impact of the vulnerability on corresponding affected entities."},"91":{"title":"","type":"markdown","content":"<br/><br/>"},"92":{"title":"","type":"markdown","content":"## üîç Vulnerability details\n--- \nVulnerability information and the related vulnerable components."},"93":{"title":"","type":"markdown","content":"## üéØ Environment analysis\n--- \nIn-depth examination of your environment in the context of the selected vulnerability; includes a list of the most affected entities and the responsible teams."},"95":{"type":"data","title":"Entities count by assessment","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| sort timestamp, direction:\"descending\"\n| summarize \n{\nvulnerability.exposure_status=takeFirst(vulnerability.davis_assessment.exposure_status),\nvulnerability.vulnerable_function_status=takeFirst(vulnerability.davis_assessment.vulnerable_function_status),\nvulnerability.data_asset_status=takeFirst(vulnerability.davis_assessment.data_asset_status)\n}, by: {timestamp=bin(timestamp,1h), affected_entity.id}\n| summarize\n{\n`Internet exposure`=countIf(vulnerability.exposure_status==\"PUBLIC_NETWORK\"),\n`Function in use`=countIf(vulnerability.vulnerable_function_status==\"IN_USE\"),\n`Reachable data assets`=countIf(vulnerability.data_asset_status==\"REACHABLE\")\n},\nby: {timestamp}\n| sort timestamp, direction:\"descending\"","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[],"firstVisibleRowIndex":0},"singleValueSettings":{"showLabel":true,"suffix":"","autoscale":true}},"visualization":"areaChart"},"96":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| sort timestamp, direction:\"descending\"\n| summarize \n{\nvulnerability.vulnerable_function_status=takeFirst(vulnerability.davis_assessment.vulnerable_function_status)\n}, by: {timestamp=bin(timestamp,1h), affected_entity.id}\n| summarize\n{\n`Function in use`=countIf(vulnerability.vulnerable_function_status==\"IN_USE\")\n},\nby: {timestamp}\n| sort timestamp, direction:\"descending\"\n| summarize start = takeLast(`Function in use`), end = takeFirst(`Function in use`)\n| fields delta=end-start\n| fields `Function usage delta`=if(delta>0,concat(delta,\"‚ÜóÔ∏è\"),else:if(delta<0,concat(delta,\"‚ÜòÔ∏è\"),else:delta))","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[],"firstVisibleRowIndex":0},"singleValueSettings":{"showLabel":true,"suffix":"","autoscale":true}},"visualization":"singleValue"},"97":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n// end of filter for the latest snapshot\n| summarize \n{\n`Function in use`=countIf(vulnerability.davis_assessment.vulnerable_function_status==\"IN_USE\")\n}, by: {affected_entity.id}\n| summarize\n{\n`Function in use`=countIf(`Function in use`>0)\n}\n| fields `With function in use`=if(`Function in use`>0,`Function in use`,else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[],"firstVisibleRowIndex":0},"singleValueSettings":{"showLabel":true,"suffix":"","autoscale":true}},"visualization":"singleValue"},"98":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| sort timestamp, direction:\"descending\"\n| summarize \n{\nvulnerability.exposure_status=takeFirst(vulnerability.davis_assessment.exposure_status)\n}, by: {timestamp=bin(timestamp,1h), affected_entity.id}\n| summarize\n{\n`Internet exposure`=countIf(vulnerability.exposure_status==\"PUBLIC_NETWORK\")\n},\nby: {timestamp}\n| sort timestamp, direction:\"descending\"\n| summarize \nstart = takeLast(`Internet exposure`), \nend = takeFirst(`Internet exposure`)\n| fields delta=end-start\n| fields `Internet exposure delta`=if(delta>0,concat(delta,\"‚ÜóÔ∏è\"),else:if(delta<0,concat(delta,\"‚ÜòÔ∏è\"),else:delta))","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[],"firstVisibleRowIndex":0},"singleValueSettings":{"showLabel":true,"suffix":"","autoscale":true}},"visualization":"singleValue"},"99":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n// end of filter for the latest snapshot\n| summarize \n{\n`Internet exposure`=countIf(vulnerability.davis_assessment.exposure_status==\"PUBLIC_NETWORK\")\n}, by: {affected_entity.id}\n| summarize\n{\n`Internet exposure`=countIf(`Internet exposure`>0)\n}\n| fields `With internet exposure`=if(`Internet exposure`>0,`Internet exposure`,else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]}},"visualization":"singleValue"},"102":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| sort timestamp, direction:\"descending\"\n| summarize \n{\nvulnerability.data_asset_status=takeFirst(vulnerability.davis_assessment.data_asset_status)\n}, by: {timestamp=bin(timestamp,1h), affected_entity.id}\n| summarize\n{\n`Reachable data assets`=countIf(vulnerability.data_asset_status==\"REACHABLE\")\n},\nby: {timestamp}\n| sort timestamp, direction:\"descending\"\n| summarize \nstart = takeLast(`Reachable data assets`), \nend = takeFirst(`Reachable data assets`)\n| fields delta=end-start\n| fields `Data assets exposure delta`=if(delta>0,concat(delta,\"‚ÜóÔ∏è\"),else:if(delta<0,concat(delta,\"‚ÜòÔ∏è\"),else:delta))","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[],"firstVisibleRowIndex":0},"singleValueSettings":{"showLabel":true,"suffix":"","autoscale":true}},"visualization":"singleValue"},"103":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n// end of filter for the latest snapshot\n| summarize \n{\n`Reachable data assets`=countIf(vulnerability.davis_assessment.data_asset_status==\"REACHABLE\")\n}, by: {affected_entity.id}\n| summarize\n{\n`Reachable data assets`=countIf(`Reachable data assets`>0)\n}\n| fields `Can reach data assets`=if(`Reachable data assets`>0,`Reachable data assets`,else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]}},"visualization":"singleValue"},"104":{"type":"data","title":"Entities by exposure status","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| sort timestamp, direction:\"descending\"\n| summarize\n{\nstatus=takeFirst(vulnerability.resolution.status),\nmuted=takeFirst(vulnerability.mute.status)\n},\nby: {affected_entity.id, timestamp=bin(timestamp,1h)}\n| summarize {\nAffected=countIf(status==\"OPEN\" AND muted==\"NOT_MUTED\"),\nResolved=countIf(status==\"RESOLVED\" AND muted==\"NOT_MUTED\"),\nMuted=countIf(muted==\"MUTED\")\n},\nby: {timestamp}","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","legend":{"hidden":false,"position":"auto"},"leftYAxisSettings":{"label":"","min":0},"seriesOverrides":[{"seriesId":"Muted","override":{"color":"#5D687E"}},{"seriesId":"Resolved","override":{"color":"#009E8C"}},{"seriesId":"Open","override":{"color":{"Default":"var(--dt-colors-charts-categorical-color-12-default, #d50b34)","Hover":"var(--dt-colors-charts-categorical-color-12-hover, #b30024)","Active":"var(--dt-colors-charts-categorical-color-12-active, #7e071d)","DefaultTransparent":"var(--dt-colors-charts-categorical-color-12-default-transparent, #c5000ccc)","HoverTransparent":"var(--dt-colors-charts-categorical-color-12-hover-transparent, #83000fcc)","ActiveTransparent":"var(--dt-colors-charts-categorical-color-12-active-transparent, #140000cc)"}}}],"colorPalette":"fireplace"},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[["Affected entities"]],"firstVisibleRowIndex":0},"singleValueSettings":{"showLabel":true,"suffix":"","recordField":"Affected Entities","autoscale":true}},"visualization":"areaChart"},"105":{"title":"","type":"markdown","content":"### Software components"},"106":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| sort timestamp, direction:\"descending\"\n| summarize \n{\naffected_entity.vulnerable_component.id=takeFirst(affected_entity.vulnerable_component.id),\nvulnerability.davis_assessment.vulnerable_function_status=takeFirst(vulnerability.davis_assessment.vulnerable_function_status)\n},\nby: {timestamp=bin(timestamp, 1h), affected_entity.id, vulnerability.display_id}\n| summarize \nComponents=countIf(isNotNull(affected_entity.vulnerable_component.id)),\nby: {timestamp, affected_entity.vulnerable_component.id}\n| summarize \nComponents=countIf(Components>0),\nby:{timestamp}\n| sort timestamp, direction:\"descending\"\n| summarize \nstart=takeLast(Components), \nend=takeFirst(Components)\n| fields delta=end-start\n| fields `Components delta`=if(delta>0,concat(delta,\"‚ÜóÔ∏è\"),else:if(delta<0,concat(delta,\"‚ÜòÔ∏è\"),else:delta))","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","legend":{"hidden":true,"position":"bottom"},"leftYAxisSettings":{"label":"","min":0,"scale":"linear"}},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]},"singleValueSettings":{"showLabel":true,"suffix":"","recordField":"Affected Entities","autoscale":true}},"visualization":"singleValue"},"107":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n// end of filter for the latest snapshot\n| summarize \nComponents=countIf(isNotNull(affected_entity.vulnerable_component.id)),\nby: {affected_entity.vulnerable_component.id}\n| summarize \n`Software components`=countIf(Components>0)\n| fields `Software components`=if(`Software components`>0,`Software components`,else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]}},"visualization":"singleValue"},"108":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| sort timestamp, direction:\"descending\"\n| summarize \n{\naffected_entity.vulnerable_component.id=takeFirst(affected_entity.vulnerable_component.id),\nvulnerability.vulnerable_function_status=takeFirst(vulnerability.davis_assessment.vulnerable_function_status)\n},\nby: {timestamp=bin(timestamp, 1h), affected_entity.id, vulnerability.display_id}\n| summarize \nComponents=countIf(vulnerability.vulnerable_function_status==\"IN_USE\" AND isNotNull(affected_entity.vulnerable_component.id)),\nby: {timestamp, affected_entity.vulnerable_component.id}\n| summarize \nComponents=countIf(Components>0),\nby:{timestamp}\n| sort timestamp, direction:\"descending\"\n| summarize \nstart=takeLast(Components), \nend=takeFirst(Components)\n| fields delta=end-start\n| fields `Function usage delta`=if(delta>0,concat(delta,\"‚ÜóÔ∏è\"),else:if(delta<0,concat(delta,\"‚ÜòÔ∏è\"),else:delta))","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]}},"visualization":"singleValue"},"109":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n// end of filter for the latest snapshot\n| summarize \nComponents=countIf(vulnerability.davis_assessment.vulnerable_function_status==\"IN_USE\" AND isNotNull(affected_entity.vulnerable_component.id)),\nby: {affected_entity.vulnerable_component.id}\n| summarize \n`with function usage`=countIf(Components>0)\n| fields `with function usage`=if(`with function usage`>0,`with function usage`,else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]}},"visualization":"singleValue"},"110":{"type":"data","title":"Vulnerable components","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n// end of filter for the latest snapshot\n| filter isNotNull(affected_entity.vulnerable_component.id)\n//add ownership information\n| lookup [\nfetch dt.entity.process_group\n| fieldsAdd tags\n], sourceField:dt.entity.process_group, lookupField:id\n| fieldsRename Tags=lookup.tags\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fieldsAdd Team=if(isNotNull(Team),Team,else:\"-\")\n| fieldsRemove lookup.id, lookup.entity.name, Tags\n// end of adding ownership info\n| summarize\n`# Affected entities`=arraySize(collectDistinct(affected_entity.id)),\n`Component name`=takeFirst(affected_entity.vulnerable_component.name),\n`# Function usages` = countIf(vulnerability.davis_assessment.vulnerable_function_status == \"IN_USE\"),\n`# Function not in use` = countIf(vulnerability.davis_assessment.vulnerable_function_status == \"NOT_IN_USE\"),\n`Teams`=takeFirst(Team),\nby: {affected_entity.vulnerable_component.id, alias:`Component id`}\n| summarize\n`Component name`=takeFirst(`Component name`),\n`# Affected entities`=takeFirst(`# Affected entities`),\n`# Function usages`=takeFirst(`# Function usages`),\n`# Function not in use`=takeFirst(`# Function not in use`),\n`Teams`=collectDistinct(`Teams`),\nby: {`Component id`}\n| fields\ndt.entity.software_component=`Component id`,\n`Component name`,\n`Dev team`=Teams,\n`Affected entities`=`# Affected entities`,\n`Function usage`=if(`# Function usages`>0,concat(\"‚ùó\",\"In use\"),else:if(`# Function not in use`>0,\"Not in use\",else:\"No data\"))\n| sort `Function usage`, direction:\"descending\", `Affected entities`, direction:\"descending\"","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[["Affected process ids"]],"firstVisibleRowIndex":0},"singleValueSettings":{"showLabel":true,"suffix":"","recordField":"Affected Entities","autoscale":true}},"visualization":"table"},"111":{"type":"data","title":"Software component count by vulnerable function usage","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| filter isNotNull(affected_entity.vulnerable_component.id)\n| sort timestamp, direction:\"descending\"\n| summarize \n{\naffected_entity.vulnerable_component.id=takeFirst(affected_entity.vulnerable_component.id),\nvulnerability.vulnerable_function_status=takeFirst(vulnerability.davis_assessment.vulnerable_function_status)\n},\nby: {timestamp=bin(timestamp, 1h), affected_entity.id, vulnerability.display_id}\n| summarize \n`In use`=countIf(vulnerability.vulnerable_function_status==\"IN_USE\" AND isNotNull(affected_entity.vulnerable_component.id)),\n`Not in use`=countIf(vulnerability.vulnerable_function_status==\"NOT_IN_USE\" AND isNotNull(affected_entity.vulnerable_component.id)),\n`No data`=countIf(vulnerability.vulnerable_function_status==\"NOT_AVAILABLE\" AND isNotNull(affected_entity.vulnerable_component.id)),\nby: {timestamp, affected_entity.vulnerable_component.id}\n| summarize \n{`In use`=countIf(`In use`>0),\n`Not in use`=countIf(`In use`==0 AND `Not in use`>0),\n`No data`=countIf(`In use`==0 AND `Not in use`==0 AND `No data`>0)},\nby:{timestamp}\n| sort timestamp, direction:\"descending\"","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","legend":{"hidden":false,"position":"auto"},"leftYAxisSettings":{"label":"","min":0},"seriesOverrides":[{"seriesId":["No data"],"override":{"color":{"Default":"var(--dt-colors-charts-categorical-themed-blue-steel-color-04-default, #5d687e)","Hover":"var(--dt-colors-charts-categorical-themed-blue-steel-color-04-hover, #4a5164)","Active":"var(--dt-colors-charts-categorical-themed-blue-steel-color-04-active, #363d49)","DefaultTransparent":"var(--dt-colors-charts-categorical-themed-blue-steel-color-04-default-transparent, #384560cc)","HoverTransparent":"var(--dt-colors-charts-categorical-themed-blue-steel-color-04-hover-transparent, #1f293fcc)","ActiveTransparent":"var(--dt-colors-charts-categorical-themed-blue-steel-color-04-active-transparent, #070f1ecc)"}}},{"seriesId":["Not in use"],"override":{"color":{"Default":"var(--dt-colors-charts-categorical-color-09-default, #0d9c29)","Hover":"var(--dt-colors-charts-categorical-color-09-hover, #0a7b20)","Active":"var(--dt-colors-charts-categorical-color-09-active, #075f19)","DefaultTransparent":"var(--dt-colors-charts-categorical-color-09-default-transparent, #008500cc)","HoverTransparent":"var(--dt-colors-charts-categorical-color-09-hover-transparent, #005905cc)","ActiveTransparent":"var(--dt-colors-charts-categorical-color-09-active-transparent, #003112cc)"}}},{"seriesId":["In use"],"override":{"color":{"Default":"var(--dt-colors-charts-categorical-color-12-default, #d50b34)","Hover":"var(--dt-colors-charts-categorical-color-12-hover, #b30024)","Active":"var(--dt-colors-charts-categorical-color-12-active, #7e071d)","DefaultTransparent":"var(--dt-colors-charts-categorical-color-12-default-transparent, #c5000ccc)","HoverTransparent":"var(--dt-colors-charts-categorical-color-12-hover-transparent, #83000fcc)","ActiveTransparent":"var(--dt-colors-charts-categorical-color-12-active-transparent, #140000cc)"}}}]},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[["Affected entities"]],"firstVisibleRowIndex":0},"singleValueSettings":{"showLabel":true,"suffix":"","recordField":"Affected Entities","autoscale":true}},"visualization":"areaChart"},"113":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| sort timestamp, direction:\"descending\"\n| summarize\n`Status`=takeFirst(vulnerability.resolution.status),\n`Muted`=takeFirst(vulnerability.mute.status==\"MUTED\"),\nby: {affected_entity.id, bin(timestamp,1h),alias:timestamp}\n| summarize\n`Open`=countIf(Status==\"OPEN\" AND Muted==FALSE),\n`Resolved`=countIf(Status!=\"OPEN\" AND Muted==FALSE),\n`Muted`=countIf(Muted==TRUE),\nby: {timestamp}\n| sort timestamp, direction:\"descending\"\n| summarize start = takeLast(Open), end = takeFirst(Open)\n| fields delta=end-start\n| fields `Open delta`=if(delta>0,concat(delta,\"‚ÜóÔ∏è\"),else:if(delta<0,concat(delta,\"‚ÜòÔ∏è\"),else:delta))","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]},"singleValueSettings":{"showLabel":true,"suffix":"","autoscale":true}},"visualization":"singleValue"},"114":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n// end of filter for the latest snapshot\n| summarize\n`Status`=takeFirst(vulnerability.resolution.status),\n`Muted`=takeFirst(vulnerability.mute.status==\"MUTED\"),\nby: {affected_entity.id}\n| summarize\n`Muted`=countIf(Muted==TRUE),\n`Resolved`=countIf(Status!=\"OPEN\" AND Muted==FALSE),\n`Open`=countIf(Status==\"OPEN\" AND Muted==FALSE)\n| fields Open=if(Open>0,Open,else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]},"singleValueSettings":{"showLabel":true,"suffix":"","autoscale":true}},"visualization":"singleValue"},"115":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| sort timestamp, direction:\"descending\"\n| summarize\n`Status`=takeFirst(vulnerability.resolution.status),\n`Muted`=takeFirst(vulnerability.mute.status==\"MUTED\"),\nby: {affected_entity.id, bin(timestamp,1h),alias:timestamp}\n| summarize\n`Open`=countIf(Status==\"OPEN\" AND Muted==FALSE),\n`Resolved`=countIf(Status!=\"OPEN\" AND Muted==FALSE),\n`Muted`=countIf(Muted==TRUE),\nby: {timestamp}\n| sort timestamp, direction:\"descending\"\n| summarize start = takeLast(Resolved), end = takeFirst(Resolved)\n| fields delta=end-start\n| fields `Resolved delta`=if(delta>0,concat(delta,\"‚ÜóÔ∏è\"),else:if(delta<0,concat(delta,\"‚ÜòÔ∏è\"),else:delta))","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]},"singleValueSettings":{"showLabel":true,"suffix":"","autoscale":true}},"visualization":"singleValue"},"116":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n// end of filter for the latest snapshot\n| summarize\n`Status`=takeFirst(vulnerability.resolution.status),\n`Muted`=takeFirst(vulnerability.mute.status==\"MUTED\"),\nby: {affected_entity.id}\n| summarize\n`Muted`=countIf(Muted==TRUE),\n`Resolved`=countIf(Status!=\"OPEN\" AND Muted==FALSE),\n`Open`=countIf(Status==\"OPEN\" AND Muted==FALSE)\n| fields Resolved=if(Resolved>0,Resolved,else:\"-\")\n","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]}},"visualization":"singleValue"},"117":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| sort timestamp, direction:\"descending\"\n| summarize\n`Status`=takeFirst(vulnerability.resolution.status),\n`Muted`=takeFirst(vulnerability.mute.status==\"MUTED\"),\nby: {affected_entity.id, bin(timestamp,1h),alias:timestamp}\n| summarize\n`Open`=countIf(Status==\"OPEN\" AND Muted==FALSE),\n`Resolved`=countIf(Status!=\"OPEN\" AND Muted==FALSE),\n`Muted`=countIf(Muted==TRUE),\nby: {timestamp}\n| sort timestamp, direction:\"descending\"\n| summarize start = takeLast(Muted), end = takeFirst(Muted)\n| fields delta=end-start\n| fields `Muted delta`=if(delta>0,concat(delta,\"‚ÜóÔ∏è\"),else:if(delta<0,concat(delta,\"‚ÜòÔ∏è\"),else:delta))","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]},"singleValueSettings":{"showLabel":true,"suffix":"","autoscale":true}},"visualization":"singleValue"},"118":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n// end of filter for the latest snapshot\n| summarize\n`Status`=takeFirst(vulnerability.resolution.status),\n`Muted`=takeFirst(vulnerability.mute.status==\"MUTED\"),\nby: {affected_entity.id}\n| summarize\n`Muted`=countIf(Muted==TRUE),\n`Resolved`=countIf(Status!=\"OPEN\" AND Muted==FALSE),\n`Open`=countIf(Status==\"OPEN\" AND Muted==FALSE)\n| fields Muted=if(Muted>0,Muted,else:\"-\")\n","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[],"firstVisibleRowIndex":0},"singleValueSettings":{"showLabel":true,"suffix":"","autoscale":true}},"visualization":"singleValue"},"119":{"title":"","type":"markdown","content":"### Affected entities"},"120":{"type":"data","title":"Top 10 affected entities (by function usage, internet exposure,  data assests)","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n// end of filter for the latest snapshot\n| summarize\n`Last status`=takeFirst(vulnerability.resolution.change_date),\n`Status`=takeFirst(vulnerability.resolution.status),\n`Muted`=takeFirst(vulnerability.mute.status==\"MUTED\"),\n`Name`=takeFirst(affected_entity.name),\n`Type`=takeFirst(affected_entity.type),\n`Internet exposure`=takeFirst(vulnerability.davis_assessment.exposure_status),\n`Function usage`=takeFirst(vulnerability.davis_assessment.vulnerable_function_status),\n`Reachable data assets`=takeFirst(vulnerability.davis_assessment.data_asset_status),\n`# Related databases`=takeFirst(related_entities.databases.count),\n`Exploit`=takeFirst(vulnerability.davis_assessment.exploit_status),\ndt.entity.process_group=takeFirst(dt.entity.process_group),\ndt.entity.host=takeFirst(dt.entity.host),\ndt.entity.kubernetes_node=takeFirst(dt.entity.kubernetes_node),\nby: {affected_entity.id}\n| fields\naffected_entity.id,\nName=Name,\nType=Type,\nStatus=if(Status==\"RESOLVED\",concat(\"‚úÖ\",\"Resolved\"),else:if(Muted, concat(\"‚ö´\",\" Muted(\",Status,\")\"), else:Status)),\n`Status date`=toTimestamp(`Last status`),\n`Function usage`=if(`Function usage`==\"IN_USE\",concat(\"‚ùó\",\"In use\"),else:if(`Function usage`==\"NOT_IN_USE\",\"Not in use\", else:\"No data\")),\nf=if(`Function usage`==\"IN_USE\",10,else:0),\n`Internet exposure`=if(`Internet exposure`==\"PUBLIC_NETWORK\",concat(\"‚ùó\",\"Public\"),else:\"Not exposed\"),\ni=if(`Internet exposure`==\"PUBLIC_NETWORK\",5,else:0),\n`# Reachable data assets`=`# Related databases`,\nr=if(`# Related databases`>0,1,else:0),\n`Data assets`=if(`Reachable data assets`==\"REACHABLE\",concat(\"‚ùó\",\" Reachable\"), else:\"Unreachable\"),\n`Exploit`=if(`Exploit`,concat(\"‚ùó\",\"Exists\"),else:\"None\"),\ne=if(`Exploit`,3,else:0),\ndt.entity.process_group=dt.entity.process_group,\ndt.entity.host=dt.entity.host,\ndt.entity.kubernetes_node=dt.entity.kubernetes_node\n| fieldsAdd\norder=f+i+r+e\n| sort order, direction:\"descending\", `# Reachable data assets`, direction:\"descending\"\n| fieldsRemove affected_entity.id, `# Reachable data assets`, f,i,r,e, order\n| limit 10\n//add ownership information\n| lookup [\nfetch dt.entity.process_group\n| fieldsAdd tags\n], sourceField:dt.entity.process_group, lookupField:id\n| fieldsRename Tags=lookup.tags\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fieldsAdd Team\n| fieldsRemove lookup.id, lookup.entity.name, Tags\n| fields \ndt.source_entity=if(isNotNull(dt.entity.process_group),dt.entity.process_group, else:if(isNotNull(dt.entity.host), dt.entity.host, else:dt.entity.kubernetes_node)),\nName, Type, Status, `Status date`,\n`Dev team`=if(isNotNull(Team),Team, else:\"-\"), `Function usage`, `Internet exposure`, `Data assets`, Exploit","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[["Affected process ids"],["Related services"],["Affected entity name"],["lookup.tags"],["Tags"]],"firstVisibleRowIndex":0},"singleValueSettings":{"showLabel":true,"suffix":"","recordField":"Affected Entities","autoscale":true}},"visualization":"table"},"122":{"type":"data","title":"Entities with internet exposure","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| summarize\n`Internet exposure`=countIf(vulnerability.exposure_status==\"PUBLIC_EXPOSURE\"),\nby: {timestamp, affected_entity.id}\n| summarize\n`Exposed`=countIf(`Internet exposure`>0),\nby: {timestamp}\n| sort timestamp, direction:\"descending\"\n| summarize\n`Exposed`=takeFirst(`Exposed`),\nby: {bin(timestamp, 1h),alias:timestamp}\n| sort timestamp, direction:\"descending\"","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","legend":{"hidden":false,"position":"auto"},"leftYAxisSettings":{"label":"","min":0},"seriesOverrides":[{"seriesId":"Total affected entities","override":{"color":{"Default":"var(--dt-colors-charts-categorical-themed-blue-steel-color-05-default, #638ecf)","Hover":"var(--dt-colors-charts-categorical-themed-blue-steel-color-05-hover, #4e72a6)","Active":"var(--dt-colors-charts-categorical-themed-blue-steel-color-05-active, #3b567d)"}}},{"seriesId":"Exposted entities","override":{"color":"#b3007d"}}]},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[["Affected entities"]],"firstVisibleRowIndex":0},"singleValueSettings":{"showLabel":true,"suffix":"","recordField":"Affected Entities","autoscale":true}},"visualization":"areaChart"},"123":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| summarize \n`Internet exposure`=countIf(vulnerability.davis_assessment.exposure_status==\"PUBLIC_EXPOSURE\"),\nby: {timestamp, affected_entity.id}\n| summarize\n`Exposed`=countIf(`Internet exposure`>0),\nby: {timestamp}\n| sort timestamp, direction:\"descending\"\n| summarize\n`Exposed`=takeFirst(`Exposed`),\nby: {bin(timestamp, 1h),alias:timestamp}\n| sort timestamp, direction:\"descending\"\n| summarize \nstart=takeLast(`Exposed`), \nend=takeFirst(`Exposed`)\n| fields delta=end-start\n| fields `Exposure delta`=if(delta>0,concat(delta,\"‚ÜóÔ∏è\"),else:if(delta<0,concat(delta,\"‚ÜòÔ∏è\"),else:delta))","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]}},"visualization":"singleValue"},"124":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n// end of filter for the latest snapshot\n| summarize\n{\n`Internet exposure`=countIf(vulnerability.davis_assessment.exposure_status==\"PUBLIC_EXPOSURE\")\n},\nby: {affected_entity.id}\n| summarize\n`Internet-exposed`=countIf(`Internet exposure`>0)\n| fields `Internet-exposed`=if(`Internet-exposed`>0,`Internet-exposed`,else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]}},"visualization":"singleValue"},"125":{"title":"","type":"markdown","content":"### Related infrastructure"},"126":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| sort timestamp, direction:\"descending\"\n| summarize entities=takeFirst(related_entities.applications.ids), \nby:{timestamp=bin(timestamp, 1h), affected_entity.id, vulnerability.id}\n| summarize entities=collectDistinct(entities), by:{timestamp}\n| expand entities\n| summarize entities=arraySize(arrayRemoveNulls(collectDistinct(entities))), by:{timestamp}\n| sort timestamp, direction:\"descending\"","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","legend":{"hidden":true}},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[["Related databases"]]}},"visualization":"areaChart"},"127":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| sort timestamp, direction:\"descending\"\n| summarize entities=takeFirst(related_entities.applications.ids), \nby:{timestamp=bin(timestamp, 1h), affected_entity.id, vulnerability.id}\n| summarize entities=collectDistinct(entities), by:{timestamp}\n| expand entities\n| summarize entities=arraySize(arrayRemoveNulls(collectDistinct(entities))), by:{timestamp}\n| sort timestamp, direction:\"descending\"\n| summarize \nstart=takeLast(entities), \nend=takeFirst(entities)\n| fields delta=end-start\n| fields `Applications delta`=if(delta>0,concat(delta,\"‚ÜóÔ∏è\"),else:if(delta<0,concat(delta,\"‚ÜòÔ∏è\"),else:delta))","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","legend":{"hidden":true,"position":"bottom"},"leftYAxisSettings":{"label":"","min":0,"scale":"linear"}},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]},"singleValueSettings":{"showLabel":true,"suffix":"","recordField":"Affected Entities","autoscale":true}},"visualization":"singleValue"},"128":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n// end of filter for the latest snapshot\n| summarize entities=collectDistinct(related_entities.applications.ids)\n| expand entities\n| summarize entities=arraySize(arrayRemoveNulls(collectDistinct(entities)))\n| fields `Related applications`=if(entities>0, entities,  else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[["Related services"]]}},"visualization":"singleValue"},"129":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| sort timestamp, direction:\"descending\"\n| summarize entities=takeFirst(related_entities.databases.ids), \nby:{timestamp=bin(timestamp, 1h), affected_entity.id, vulnerability.id}\n| summarize entities=collectDistinct(entities), by:{timestamp}\n| expand entities\n| summarize entities=arraySize(arrayRemoveNulls(collectDistinct(entities))), by:{timestamp}\n| sort timestamp, direction:\"descending\"","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","legend":{"hidden":true}},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[["Related databases"]]}},"visualization":"areaChart"},"130":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| sort timestamp, direction:\"descending\"\n| summarize entities=takeFirst(related_entities.databases.ids), \nby:{timestamp=bin(timestamp, 1h), affected_entity.id, vulnerability.id}\n| summarize entities=collectDistinct(entities), by:{timestamp}\n| expand entities\n| summarize entities=arraySize(arrayRemoveNulls(collectDistinct(entities))), by:{timestamp}\n| sort timestamp, direction:\"descending\"\n| summarize \nstart=takeLast(entities), \nend=takeFirst(entities)\n| fields delta=end-start\n| fields `Databases delta`=if(delta>0,concat(delta,\"‚ÜóÔ∏è\"),else:if(delta<0,concat(delta,\"‚ÜòÔ∏è\"),else:delta))","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","legend":{"hidden":true,"position":"bottom"},"leftYAxisSettings":{"label":"","min":0,"scale":"linear"}},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]},"singleValueSettings":{"showLabel":true,"suffix":"","recordField":"Affected Entities","autoscale":true}},"visualization":"singleValue"},"131":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n// end of filter for the latest snapshot\n| summarize entities=collectDistinct(related_entities.databases.ids)\n| expand entities\n| summarize entities=arraySize(arrayRemoveNulls(collectDistinct(entities)))\n| fields `Related databases`=if(entities>0, entities,  else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]}},"visualization":"singleValue"},"132":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| sort timestamp, direction:\"descending\"\n| summarize entities=takeFirst(related_entities.services.ids), \nby:{timestamp=bin(timestamp, 1h), affected_entity.id, vulnerability.id}\n| summarize entities=collectDistinct(entities), by:{timestamp}\n| expand entities\n| summarize entities=arraySize(arrayRemoveNulls(collectDistinct(entities))), by:{timestamp}\n| sort timestamp, direction:\"descending\"","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","legend":{"hidden":true}},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[["Related services"]]}},"visualization":"areaChart"},"133":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| sort timestamp, direction:\"descending\"\n| summarize entities=takeFirst(related_entities.services.ids), \nby:{timestamp=bin(timestamp, 1h), affected_entity.id, vulnerability.id}\n| summarize entities=collectDistinct(entities), by:{timestamp}\n| expand entities\n| summarize entities=arraySize(arrayRemoveNulls(collectDistinct(entities))), by:{timestamp}\n| sort timestamp, direction:\"descending\"\n| summarize \nstart=takeLast(entities), \nend=takeFirst(entities)\n| fields delta=end-start\n| fields `Services delta`=if(delta>0,concat(delta,\"‚ÜóÔ∏è\"),else:if(delta<0,concat(delta,\"‚ÜòÔ∏è\"),else:delta))","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","legend":{"hidden":true,"position":"bottom"},"leftYAxisSettings":{"label":"","min":0,"scale":"linear"}},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]},"singleValueSettings":{"showLabel":true,"suffix":"","recordField":"Affected Entities","autoscale":true}},"visualization":"singleValue"},"134":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n// end of filter for the latest snapshot\n| summarize entities=collectDistinct(related_entities.services.ids)\n| expand entities\n| summarize entities=arraySize(arrayRemoveNulls(collectDistinct(entities)))\n| fields `Related services`=if(entities>0, entities,  else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[["Related services"]]}},"visualization":"singleValue"},"135":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| sort timestamp, direction:\"descending\"\n| summarize entities=takeFirst(related_entities.hosts.ids), \nby:{timestamp=bin(timestamp, 1h), affected_entity.id, vulnerability.id}\n| summarize entities=collectDistinct(entities), by:{timestamp}\n| expand entities\n| summarize entities=arraySize(arrayRemoveNulls(collectDistinct(entities))), by:{timestamp}\n| sort timestamp, direction:\"descending\"","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","legend":{"hidden":true}},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[["Related processes"]]}},"visualization":"areaChart"},"136":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| sort timestamp, direction:\"descending\"\n| summarize entities=takeFirst(related_entities.kubernetes_workloads.ids), \nby:{timestamp=bin(timestamp, 1h), affected_entity.id, vulnerability.id}\n| summarize entities=collectDistinct(entities), by:{timestamp}\n| expand entities\n| summarize entities=arraySize(arrayRemoveNulls(collectDistinct(entities))), by:{timestamp}\n| sort timestamp, direction:\"descending\"\n| summarize \nstart=takeLast(entities), \nend=takeFirst(entities)\n| fields delta=end-start\n| fields `Workloads delta`=if(delta>0,concat(delta,\"‚ÜóÔ∏è\"),else:if(delta<0,concat(delta,\"‚ÜòÔ∏è\"),else:delta))","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","legend":{"hidden":true,"position":"bottom"},"leftYAxisSettings":{"label":"","min":0,"scale":"linear"}},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]},"singleValueSettings":{"showLabel":true,"suffix":"","recordField":"Affected Entities","autoscale":true}},"visualization":"singleValue"},"137":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n// end of filter for the latest snapshot\n| summarize entities=collectDistinct(related_entities.hosts.ids)\n| expand entities\n| summarize entities=arraySize(arrayRemoveNulls(collectDistinct(entities)))\n| fields `Related hosts`=if(entities>0, entities,  else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[],"firstVisibleRowIndex":0}},"visualization":"singleValue"},"138":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| sort timestamp, direction:\"descending\"\n| summarize entities=takeFirst(related_entities.kubernetes_workloads.ids), \nby:{timestamp=bin(timestamp, 1h), affected_entity.id, vulnerability.id}\n| summarize entities=collectDistinct(entities), by:{timestamp}\n| expand entities\n| summarize entities=arraySize(arrayRemoveNulls(collectDistinct(entities))), by:{timestamp}\n| sort timestamp, direction:\"descending\"","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","legend":{"hidden":true}},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[["Related hosts"]]}},"visualization":"areaChart"},"139":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| sort timestamp, direction:\"descending\"\n| summarize entities=takeFirst(related_entities.kubernetes_clusters.ids), \nby:{timestamp=bin(timestamp, 1h), affected_entity.id, vulnerability.id}\n| summarize entities=collectDistinct(entities), by:{timestamp}\n| expand entities\n| summarize entities=arraySize(arrayRemoveNulls(collectDistinct(entities))), by:{timestamp}\n| sort timestamp, direction:\"descending\"\n| summarize \nstart=takeLast(entities), \nend=takeFirst(entities)\n| fields delta=end-start\n| fields `Clusters delta`=if(delta>0,concat(delta,\"‚ÜóÔ∏è\"),else:if(delta<0,concat(delta,\"‚ÜòÔ∏è\"),else:delta))","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","legend":{"hidden":true,"position":"bottom"},"leftYAxisSettings":{"label":"","min":0,"scale":"linear"}},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]},"singleValueSettings":{"showLabel":true,"suffix":"","recordField":"Affected Entities","autoscale":true}},"visualization":"singleValue"},"140":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n// end of filter for the latest snapshot\n| summarize entities=collectDistinct(related_entities.kubernetes_workloads.ids)\n| expand entities\n| summarize entities=arraySize(arrayRemoveNulls(collectDistinct(entities)))\n| fields `Related Kubernetes workloads`=if(entities>0, entities,  else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[],"firstVisibleRowIndex":0}},"visualization":"singleValue"},"141":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| sort timestamp, direction:\"descending\"\n| summarize entities=takeFirst(related_entities.kubernetes_clusters.ids), \nby:{timestamp=bin(timestamp, 1h), affected_entity.id, vulnerability.id}\n| summarize entities=collectDistinct(entities), by:{timestamp}\n| expand entities\n| summarize entities=arraySize(arrayRemoveNulls(collectDistinct(entities))), by:{timestamp}\n| sort timestamp, direction:\"descending\"","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","legend":{"hidden":true}},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[["Related Kubernetes workloads"]]}},"visualization":"areaChart"},"142":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| sort timestamp, direction:\"descending\"\n| summarize entities=takeFirst(related_entities.hosts.ids), \nby:{timestamp=bin(timestamp, 1h), affected_entity.id, vulnerability.id}\n| summarize entities=collectDistinct(entities), by:{timestamp}\n| expand entities\n| summarize entities=arraySize(arrayRemoveNulls(collectDistinct(entities))), by:{timestamp}\n| sort timestamp, direction:\"descending\"\n| summarize \nstart=takeLast(entities), \nend=takeFirst(entities)\n| fields delta=end-start\n| fields `Hosts delta`=if(delta>0,concat(delta,\"‚ÜóÔ∏è\"),else:if(delta<0,concat(delta,\"‚ÜòÔ∏è\"),else:delta))","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","legend":{"hidden":true,"position":"bottom"},"leftYAxisSettings":{"label":"","min":0,"scale":"linear"}},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]},"singleValueSettings":{"showLabel":true,"suffix":"","recordField":"Affected Entities","autoscale":true}},"visualization":"singleValue"},"143":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n// end of filter for the latest snapshot\n| summarize entities=collectDistinct(related_entities.kubernetes_clusters.ids)\n| expand entities\n| summarize entities=arraySize(arrayRemoveNulls(collectDistinct(entities)))\n| fields `Related Kubernetes clusters`=if(entities>0, entities,  else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[],"firstVisibleRowIndex":0}},"visualization":"singleValue"},"144":{"title":"","type":"markdown","content":"### Vulnerable functions"},"145":{"type":"data","title":"Function count by usage status","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| sort timestamp, direction:\"descending\"\n| summarize `Functions in use`=takeFirst(affected_entity.vulnerable_functions),\nby: {timestamp=bin(timestamp,1h), affected_entity.id, vulnerability.id}\n| summarize `Functions in use`=collectDistinct(`Functions in use`),\nby: {timestamp}\n| expand `Functions in use`\n| summarize `Functions in use`=collectDistinct(`Functions in use`),\nby: {timestamp}\n| fields timestamp, `Functions in use`=arraySize(arrayRemoveNulls(`Functions in use`))\n| sort timestamp, direction:\"descending\"","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","legend":{"hidden":false,"position":"auto"},"leftYAxisSettings":{"label":"","min":0,"scale":"linear","max":null}},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]},"singleValueSettings":{"showLabel":true,"suffix":"","recordField":"Affected Entities","autoscale":true}},"visualization":"areaChart"},"146":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| summarize `Functions in use`=collectDistinct(affected_entity.vulnerable_functions),\nby: {timestamp}\n| expand `Functions in use`\n| summarize `Functions in use`=collectDistinct(`Functions in use`),\nby: {timestamp}\n| fields timestamp, `Functions in use`=arraySize(arrayRemoveNulls(`Functions in use`))\n| sort timestamp, direction:\"descending\"\n| summarize `Functions in use`=takeFirst(`Functions in use`),\nby:{{timestamp=bin(timestamp,1h)}}\n| sort timestamp, direction:\"descending\"\n| summarize \nstart=takeLast(`Functions in use`), \nend=takeFirst(`Functions in use`)\n| fields delta=end-start\n| fields `Function delta`=if(delta>0,concat(delta,\"‚ÜóÔ∏è\"),else:if(delta<0,concat(delta,\"‚ÜòÔ∏è\"),else:delta))","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]}},"visualization":"singleValue"},"147":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n// end of filter for the latest snapshot\n| summarize `Functions in use`=collectDistinct(affected_entity.vulnerable_functions)\n| expand `Functions in use`\n| summarize `Functions in use`=collectDistinct(`Functions in use`)\n| fields `Functions in use`=arraySize(arrayRemoveNulls(`Functions in use`))\n| fields `Functions in use`=if(`Functions in use`>0,`Functions in use`,else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]}},"visualization":"singleValue"},"148":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n// first summarize on the entity level\n| sort timestamp, direction:\"descending\"\n| summarize \n{\nvulnerability.vulnerable_function_status=takeFirst(vulnerability.davis_assessment.vulnerable_function_status)\n},\nby: {timestamp=bin(timestamp, 1h), affected_entity.id, vulnerability.display_id}\n| summarize \n`Function in use`=countIf(vulnerability.vulnerable_function_status == \"IN_USE\"), \nby: {timestamp, affected_entity.id}\n| summarize \n`With functions in use`=countIf(`Function in use`>0),\nby: {timestamp}\n| sort timestamp, direction:\"descending\"\n| summarize \nstart=takeLast(`With functions in use`), \nend=takeFirst(`With functions in use`)\n| fields delta=end-start\n| fields `Entities delta`=if(delta>0,concat(delta,\"‚ÜóÔ∏è\"),else:if(delta<0,concat(delta,\"‚ÜòÔ∏è\"),else:delta))","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]}},"visualization":"singleValue"},"149":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n// end of filter for the latest snapshot\n// first summarize on the entity level\n| summarize\n`# Function usages`=countIf(vulnerability.davis_assessment.vulnerable_function_status==\"IN_USE\"),\n`# Function not in use`=countIf(vulnerability.davis_assessment.vulnerable_function_status==\"NOT_IN_USE\"),\nby: {affected_entity.id}\n// now count the entities\n| summarize\n`Entities with function in use`=countIf(`# Function usages`>0)\n| fields `Entities with function in use`=if(`Entities with function in use`>0,`Entities with function in use`,else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]}},"visualization":"singleValue"},"150":{"type":"data","title":"Top 5 entities with function in use","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n// end of filter for the latest snapshot\n// first extract the latest snapshot data per each pair (affected entity,security problem)\n| filter vulnerability.davis_assessment.vulnerable_function_status==\"IN_USE\"\n| summarize\n`Affected entity name`=takeFirst(affected_entity.name),\n`Internet exposure`=takeFirst(vulnerability.davis_assessment.exposure_status),\n`Reachable data assets`=takeFirst(vulnerability.davis_assessment.data_assets_status),\ndt.entity.process_group=takeFirst(dt.entity.process_group),\ndt.entity.host=takeFirst(dt.entity.process_group),\ndt.entity.kubernetes_node=takeFirst(dt.entity.process_group),\nby: {affected_entity.id}\n| fields \n`Affected entity name`, \ndt.entity.process_group, \n`Internet exposure`=if(`Internet exposure`==\"PUBLIC_NETWORK\",concat(\"‚ùó\",\"Public exposure\"),else:\"Not exposed\"),\n`Reachable data assets`=if(arraySize(toArray(`Reachable data assets`))>0,concat(\"‚ùó\",\"Reachable\"), else:\"Unreachable\")\n| sort `Internet exposure`, `Reachable data assets`, direction:\"descending\"\n//add ownership information\n| lookup [\nfetch dt.entity.process_group\n| fieldsAdd tags\n], sourceField:dt.entity.process_group, lookupField:id\n| fieldsRename Tags=lookup.tags\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fieldsAdd Team\n| fieldsRemove lookup.id, lookup.entity.name, Tags\n| fields \ndt.entity.process_group,\n`Affected entity name`,\n`Dev team`=if(isNotNull(Team),Team,else:\"-\"),\n`Internet exposure`,\n`Reachable databases`=`Reachable data assets`\n| sort `Internet exposure`, direction:\"descending\", `Reachable databases`, direction:\"descending\"","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[["Affected entity name"]]},"tableSettings":{"displayMode":"edit","lineWrapIds":[["Affected process ids"],["# Affected processes"]],"firstVisibleRowIndex":0},"singleValueSettings":{"showLabel":true,"suffix":"","recordField":"Affected Entities","autoscale":true}},"visualization":"table"},"151":{"title":"","type":"markdown","content":"## üìÉ Code analysis\n--- \nInsights into the usage of vulnerable components and functions. "},"152":{"type":"data","title":"Functions","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n// end of filter for the latest snapshot\n| summarize Functions=collectDistinct(affected_entity.vulnerable_functions.names)\n| expand Functions\n| summarize Functions=arrayRemoveNulls(collectDistinct(Functions))\n| fields Functions=if(arraySize(Functions)>0,Functions,else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":false,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]}},"visualization":"singleValue"},"153":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entity.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n// end of filter for the latest snapshot\n| summarize\n`Affected entities`=arraySize(collectDistinct(affected_entity.id))","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false,"alignment":"start"},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"singleValueSettings":{"showLabel":true,"suffix":"","autoscale":true},"tableSettings":{"displayMode":"edit","lineWrapIds":[],"firstVisibleRowIndex":0}},"visualization":"singleValue"},"154":{"type":"data","title":"Description","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"VULNERABILITY\"\n| filter (\"ANY\"==$VulnerabilityId OR $VulnerabilityId==vulnerability.display_id)  \nAND (\"ANY\"==$ManagementZone OR in($ManagementZone,affected_entities.management_zones.names))\nAND (\"ANY\"==$CVE OR in($CVE,vulnerability.references.cve))\n// extract the latest snapshot data\n| sort timestamp, direction:\"descending\"\n| summarize {\nDescription=takeFirst(vulnerability.description)\n}","visualization":"table","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute"}},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"rowDensity":"condensed","enableLineWrap":true,"enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[["Description"]]}}}},"layouts":{"12":{"x":18,"y":0,"w":5,"h":6},"14":{"x":5,"y":0,"w":13,"h":6},"15":{"x":1,"y":36,"w":22,"h":2},"16":{"x":1,"y":17,"w":4,"h":2},"17":{"x":1,"y":9,"w":15,"h":3},"30":{"x":5,"y":12,"w":4,"h":2},"31":{"x":1,"y":34,"w":5,"h":2},"32":{"x":1,"y":12,"w":4,"h":2},"34":{"x":13,"y":12,"w":3,"h":2},"37":{"x":0,"y":6,"w":24,"h":2},"53":{"x":1,"y":45,"w":7,"h":2},"55":{"x":9,"y":12,"w":4,"h":2},"68":{"x":1,"y":2,"w":4,"h":2},"69":{"x":1,"y":4,"w":4,"h":2},"70":{"x":17,"y":8,"w":6,"h":1},"72":{"x":1,"y":8,"w":16,"h":1},"73":{"x":1,"y":15,"w":15,"h":2},"74":{"x":5,"y":17,"w":11,"h":2},"75":{"x":1,"y":14,"w":15,"h":1},"76":{"x":6,"y":34,"w":5,"h":2},"77":{"x":11,"y":34,"w":6,"h":2},"78":{"x":8,"y":45,"w":15,"h":2},"79":{"x":1,"y":19,"w":15,"h":4},"80":{"x":17,"y":9,"w":6,"h":2},"81":{"x":20,"y":11,"w":3,"h":2},"82":{"x":17,"y":11,"w":3,"h":2},"83":{"x":20,"y":13,"w":3,"h":2},"84":{"x":17,"y":13,"w":3,"h":2},"85":{"x":17,"y":15,"w":6,"h":2},"86":{"x":17,"y":17,"w":6,"h":2},"87":{"x":20,"y":19,"w":3,"h":2},"88":{"x":17,"y":19,"w":3,"h":2},"89":{"x":17,"y":21,"w":6,"h":2},"90":{"x":0,"y":24,"w":24,"h":2},"91":{"x":1,"y":23,"w":22,"h":1},"92":{"x":0,"y":32,"w":24,"h":2},"93":{"x":0,"y":42,"w":24,"h":2},"95":{"x":8,"y":26,"w":15,"h":6},"96":{"x":5,"y":26,"w":3,"h":2},"97":{"x":1,"y":26,"w":4,"h":2},"98":{"x":5,"y":28,"w":3,"h":2},"99":{"x":1,"y":28,"w":4,"h":2},"102":{"x":5,"y":30,"w":3,"h":2},"103":{"x":1,"y":30,"w":4,"h":2},"104":{"x":8,"y":47,"w":15,"h":6},"105":{"x":1,"y":78,"w":22,"h":1},"106":{"x":5,"y":79,"w":3,"h":2},"107":{"x":1,"y":79,"w":4,"h":2},"108":{"x":5,"y":81,"w":3,"h":2},"109":{"x":1,"y":81,"w":4,"h":2},"110":{"x":1,"y":83,"w":22,"h":5},"111":{"x":8,"y":79,"w":15,"h":4},"113":{"x":5,"y":47,"w":3,"h":2},"114":{"x":1,"y":47,"w":4,"h":2},"115":{"x":5,"y":49,"w":3,"h":2},"116":{"x":1,"y":49,"w":4,"h":2},"117":{"x":5,"y":51,"w":3,"h":2},"118":{"x":1,"y":51,"w":4,"h":2},"119":{"x":1,"y":44,"w":22,"h":1},"120":{"x":1,"y":55,"w":22,"h":8},"122":{"x":8,"y":53,"w":15,"h":2},"123":{"x":5,"y":53,"w":3,"h":2},"124":{"x":1,"y":53,"w":4,"h":2},"125":{"x":1,"y":63,"w":22,"h":1},"126":{"x":8,"y":64,"w":15,"h":2},"127":{"x":5,"y":64,"w":3,"h":2},"128":{"x":1,"y":64,"w":4,"h":2},"129":{"x":8,"y":66,"w":15,"h":2},"130":{"x":5,"y":66,"w":3,"h":2},"131":{"x":1,"y":66,"w":4,"h":2},"132":{"x":8,"y":68,"w":15,"h":2},"133":{"x":5,"y":68,"w":3,"h":2},"134":{"x":1,"y":68,"w":4,"h":2},"135":{"x":8,"y":70,"w":15,"h":2},"136":{"x":5,"y":72,"w":3,"h":2},"137":{"x":1,"y":70,"w":4,"h":2},"138":{"x":8,"y":72,"w":15,"h":2},"139":{"x":5,"y":74,"w":3,"h":2},"140":{"x":1,"y":72,"w":4,"h":2},"141":{"x":8,"y":74,"w":15,"h":2},"142":{"x":5,"y":70,"w":3,"h":2},"143":{"x":1,"y":74,"w":4,"h":2},"144":{"x":1,"y":88,"w":22,"h":1},"145":{"x":8,"y":89,"w":15,"h":4},"146":{"x":5,"y":89,"w":3,"h":2},"147":{"x":1,"y":89,"w":4,"h":2},"148":{"x":5,"y":91,"w":3,"h":2},"149":{"x":1,"y":91,"w":4,"h":2},"150":{"x":1,"y":93,"w":22,"h":7},"151":{"x":0,"y":76,"w":24,"h":2},"152":{"x":17,"y":34,"w":6,"h":2},"153":{"x":1,"y":0,"w":4,"h":2},"154":{"x":1,"y":38,"w":22,"h":4}}}