{"version":"5","defaultTimeframe":{"from":"now-15m","to":"now","details":{"from":{"type":"expression","normalized":"now-15m","date":"2023-08-07T08:12:13.404Z"},"to":{"type":"expression","normalized":"now","date":"2023-08-07T08:27:13.404Z"}}},"sections":[{"id":"f5c299cf-ff30-45e9-9ad0-23954bce88b3","type":"dql","showTitle":false,"state":{"input":{"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"VULNERABILITY\"               \n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n// extract the latest snapshot data\n| sort timestamp, direction:\"descending\"\n| summarize\nName=takeFirst(concat(vulnerability.display_id,\" \", vulnerability.title))","timeframe":{"from":"now-15m","to":"now","details":{"from":{"type":"expression","normalized":"now-15m","date":"2023-07-13T15:13:23.504Z"},"to":{"type":"expression","normalized":"now","date":"2023-07-13T15:28:23.504Z"}}}},"state":"success","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute"}},"singleValue":{"showLabel":false,"label":"","autoscale":false,"sparklineSettings":{"showSparkline":false,"color":{"Default":"var(--dt-colors-charts-categorical-color-07-default, #004c52)","Hover":"var(--dt-colors-charts-categorical-color-07-hover, #003e42)","Active":"var(--dt-colors-charts-categorical-color-07-active, #002b2e)","DefaultTransparent":"var(--dt-colors-charts-categorical-color-07-default-transparent, #000c0dcc)","HoverTransparent":"var(--dt-colors-charts-categorical-color-07-hover-transparent, #000c)","ActiveTransparent":"var(--dt-colors-charts-categorical-color-07-active-transparent, #000c)"},"variant":"line","record":"none","showTicks":false}},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"firstVisibleRowIndex":0,"columnWidths":{},"lineWrapIds":[],"enableLineWrap":false}},"result":{"code":200,"value":{"records":[{"Name":"S-123 XML External Entity (XXE) Injection"}],"metadata":{"grail":{"canonicalQuery":"fetch events\n| filter event.provider == \"Dynatrace\"\n| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level == \"VULNERABILITY\"\n| filter vulnerability.display_id == \"S-123\"\n| sort timestamp, direction:\"descending\"\n| summarize takeFirst(concat(vulnerability.display_id, \" \", vulnerability.title)), alias:Name","timezone":"America/New_York","query":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"VULNERABILITY\"               \n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n// extract the latest snapshot data\n| sort timestamp, direction:\"descending\"\n| summarize\nName=takeFirst(concat(vulnerability.display_id,\" \", vulnerability.title))","scannedRecords":2318,"dqlVersion":"V1_0","scannedBytes":291640,"analysisTimeframe":{"start":"2023-08-08T00:41:47.600Z","end":"2023-08-08T00:56:47.600Z"},"locale":"","executionTimeMilliseconds":123,"notifications":[],"queryId":"4d297aff-9ee1-4225-9adc-3e8ebe50372f","sampled":false}},"types":[{"mappings":{"Name":{"type":"string"}},"indexRange":[0,0]}]},"notifications":[],"dateTime":"2023-08-08T00:56:47.599Z","input":{"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"VULNERABILITY\"               \n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n// extract the latest snapshot data\n| sort timestamp, direction:\"descending\"\n| summarize\nName=takeFirst(concat(vulnerability.display_id,\" \", vulnerability.title))","timeframe":{"from":"now-15m","to":"now","details":{"from":{"type":"expression","normalized":"now-15m","date":"2023-07-13T15:13:23.504Z"},"to":{"type":"expression","normalized":"now","date":"2023-07-13T15:28:23.504Z"}}}}},"visualization":"singleValue"},"davisAnalysis":{"analyzerComponentState":{"resultState":{}}},"showInput":false,"height":112,"davisAnalytics":{"analyzerComponentState":{"resultState":{}}}},{"hasContent":true,"id":"857bfd0a-9ad0-44fa-bcb5-0be7c997e203","markdown":"# Third-party vulnerability exposure report\n\nList and analyze organizational exposure to a third-party vulnerability.\n\n#### Use this template to answer the following security questions:\n\n* What are the vulnerable libraries/components involved?\n* What areas of my organization are affected by the vulnerability?\n* Where should I focus next?\n\n#### Applied vulnerability filter:\n`security_problem.display_id==\"S-123\" `\n\n*Note: Each widget is pre-filtered with the threat filter context. Press **Rerun sections** to refresh all the widgets at once.*","showTitle":false,"type":"markdown"},{"id":"839a613c-128b-4da1-b617-0b712bb97b13","type":"markdown","markdown":"## 💥 Exposure summary\n--- \nYour environment's exposure to the selected vulnerability, the affected or related entities, and the risk score."},{"height":118,"id":"a134d10e-7910-4ab0-a306-2bede2ab9426","showInput":false,"showSettings":false,"showTitle":true,"title":"Vulnerability summary","type":"dql","state":{"input":{"timeframe":{"from":"now-15m","to":"now","details":{"from":{"type":"expression","normalized":"now-15m","date":"2023-07-13T15:13:23.504Z"},"to":{"type":"expression","normalized":"now","date":"2023-07-13T15:28:23.504Z"}}},"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"               \n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n// filter for the latest snapshot per entity\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.kind == \"SECURITY_EVENT\" \n| filter event.category == \"VULNERABILITY_MANAGEMENT\" \n| filter event.provider == \"Dynatrace\" \n| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\" \n| filter event.level==\"ENTITY\"  \n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n| summarize\nMuted=takeFirst(vulnerability.mute.status),\nStatus=takeFirst(vulnerability.resolution.status),\n`Last status`=takeMax(toTimestamp(vulnerability.parent.resolution.change_date)),\n`Last entity status`=takeMax(toTimestamp(vulnerability.resolution.change_date)),\n`Last mute status`=takeMax(toTimestamp(vulnerability.parent.mute.change_date)),\n`Last entity mute status`=takeMax(toTimestamp(vulnerability.mute.change_date)),\n`Davis Security Score`=round(takeFirst(vulnerability.risk.score),decimals:1),\n`Davis Security Level`=takeFirst(vulnerability.risk.level),\n`CVSSv3 base`=takeFirst(vulnerability.cvss.base_score),\n`First seen`=takeMin(toTimestamp(vulnerability.first_seen)),\n`Last seen`=takeFirst(timestamp)\n| fields\n`Davis Security Level`,\n`Davis Security Score`,\n`CVSSv3 base`,\nStatus=if(Status==\"OPEN\",concat(\"🔴 \",Status)),\n`Mute status`=if(Muted==\"MUTED\",concat(\"⚫\",\" Muted\"),else:\"Not muted\"),\n`Status change`=if(arrayMax(array(`Last entity status`,`Last status`,`Last mute status`,`Last entity mute status`)) > now()-1d,arrayMax(array(`Last entity status`,`Last status`,`Last mute status`,`Last entity mute status`)),\n                else:concat(toLong((now()-arrayMax(array(`Last entity status`,`Last status`,`Last mute status`,`Last entity mute status`)))/1d),\" days ago\")),\n`First seen`=concat(toLong((now()-`First seen`)/1d),\" days ago\"),\n`Last seen`=concat(toLong((now()-`Last seen`)/1m),\" minutes ago\")"},"visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"table":{"displayMode":"edit","firstVisibleRowIndex":0,"lineWrapIds":[],"enableLineWrap":true}},"showConsole":true,"state":"success","visualization":"table","result":{"code":200,"input":{"timeframe":{"from":"now-15m","to":"now","details":{"from":{"type":"expression","normalized":"now-15m","date":"2023-07-13T15:13:23.504Z"},"to":{"type":"expression","normalized":"now","date":"2023-07-13T15:28:23.504Z"}}},"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"               \n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n// filter for the latest snapshot per entity\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.kind == \"SECURITY_EVENT\" \n| filter event.category == \"VULNERABILITY_MANAGEMENT\" \n| filter event.provider == \"Dynatrace\" \n| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\" \n| filter event.level==\"ENTITY\"  \n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n| summarize\nMuted=takeFirst(vulnerability.mute.status),\nStatus=takeFirst(vulnerability.resolution.status),\n`Last status`=takeMax(toTimestamp(vulnerability.parent.resolution.change_date)),\n`Last entity status`=takeMax(toTimestamp(vulnerability.resolution.change_date)),\n`Last mute status`=takeMax(toTimestamp(vulnerability.parent.mute.change_date)),\n`Last entity mute status`=takeMax(toTimestamp(vulnerability.mute.change_date)),\n`Davis Security Score`=round(takeFirst(vulnerability.risk.score),decimals:1),\n`Davis Security Level`=takeFirst(vulnerability.risk.level),\n`CVSSv3 base`=takeFirst(vulnerability.cvss.base_score),\n`First seen`=takeMin(toTimestamp(vulnerability.first_seen)),\n`Last seen`=takeFirst(timestamp)\n| fields\n`Davis Security Level`,\n`Davis Security Score`,\n`CVSSv3 base`,\nStatus=if(Status==\"OPEN\",concat(\"🔴 \",Status)),\n`Mute status`=if(Muted==\"MUTED\",concat(\"⚫\",\" Muted\"),else:\"Not muted\"),\n`Status change`=if(arrayMax(array(`Last entity status`,`Last status`,`Last mute status`,`Last entity mute status`)) > now()-1d,arrayMax(array(`Last entity status`,`Last status`,`Last mute status`,`Last entity mute status`)),\n                else:concat(toLong((now()-arrayMax(array(`Last entity status`,`Last status`,`Last mute status`,`Last entity mute status`)))/1d),\" days ago\")),\n`First seen`=concat(toLong((now()-`First seen`)/1d),\" days ago\"),\n`Last seen`=concat(toLong((now()-`Last seen`)/1m),\" minutes ago\")"},"dateTime":"2023-08-08T00:56:47.604Z","value":{"records":[{"Davis Security Level":"HIGH","Davis Security Score":8.3,"CVSSv3 base":8.300000190734863,"Status":"🔴 OPEN","Mute status":"Not muted","Status change":"4 days ago","First seen":"4 days ago","Last seen":"12 minutes ago"}],"metadata":{"grail":{"canonicalQuery":"fetch events\n| filter event.provider == \"Dynatrace\"\n| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level == \"ENTITY\"\n| filter vulnerability.display_id == \"S-123\"\n| fieldsAdd \"match\", alias:matcher\n| lookup \n\t[\n\t\tfetch events\n\t\t| filter event.kind == \"SECURITY_EVENT\"\n\t\t| filter event.category == \"VULNERABILITY_MANAGEMENT\"\n\t\t| filter event.provider == \"Dynatrace\"\n\t\t| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n\t\t| filter event.level == \"ENTITY\"\n\t\t| filter vulnerability.display_id == \"S-123\"\n\t\t| fields {timestamp, alias:maxTimestamp}, {\"match\", alias:matcher}\n\t\t| limit 1\n\t], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp == maxTimestamp\n| summarize {takeFirst(vulnerability.mute.status), alias:Muted}, {takeFirst(vulnerability.resolution.status), alias:Status}, {takeMax(toTimestamp(vulnerability.parent.resolution.change_date)), alias:`Last status`}, {takeMax(toTimestamp(vulnerability.resolution.change_date)), alias:`Last entity status`}, {takeMax(toTimestamp(vulnerability.parent.mute.change_date)), alias:`Last mute status`}, {takeMax(toTimestamp(vulnerability.mute.change_date)), alias:`Last entity mute status`}, {round(takeFirst(vulnerability.risk.score), decimals:1), alias:`Davis Security Score`}, {takeFirst(vulnerability.risk.level), alias:`Davis Security Level`}, {takeFirst(vulnerability.cvss.base_score), alias:`CVSSv3 base`}, {takeMin(toTimestamp(vulnerability.first_seen)), alias:`First seen`}, {takeFirst(timestamp), alias:`Last seen`}\n| fields `Davis Security Level`, `Davis Security Score`, `CVSSv3 base`, {if(Status == \"OPEN\", concat(\"🔴 \", Status)), alias:Status}, {if(Muted == \"MUTED\", concat(\"⚫\", \" Muted\"), else:\"Not muted\"), alias:`Mute status`}, {if(arrayMax(array(`Last entity status`, `Last status`, `Last mute status`, `Last entity mute status`)) > now() - 1d, arrayMax(array(`Last entity status`, `Last status`, `Last mute status`, `Last entity mute status`)), else:concat(toLong((now() - arrayMax(array(`Last entity status`, `Last status`, `Last mute status`, `Last entity mute status`))) / 1d), \" days ago\")), alias:`Status change`}, {concat(toLong((now() - `First seen`) / 1d), \" days ago\"), alias:`First seen`}, {concat(toLong((now() - `Last seen`) / 1m), \" minutes ago\"), alias:`Last seen`}","timezone":"America/New_York","query":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"               \n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n// filter for the latest snapshot per entity\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.kind == \"SECURITY_EVENT\" \n| filter event.category == \"VULNERABILITY_MANAGEMENT\" \n| filter event.provider == \"Dynatrace\" \n| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\" \n| filter event.level==\"ENTITY\"  \n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n| summarize\nMuted=takeFirst(vulnerability.mute.status),\nStatus=takeFirst(vulnerability.resolution.status),\n`Last status`=takeMax(toTimestamp(vulnerability.parent.resolution.change_date)),\n`Last entity status`=takeMax(toTimestamp(vulnerability.resolution.change_date)),\n`Last mute status`=takeMax(toTimestamp(vulnerability.parent.mute.change_date)),\n`Last entity mute status`=takeMax(toTimestamp(vulnerability.mute.change_date)),\n`Davis Security Score`=round(takeFirst(vulnerability.risk.score),decimals:1),\n`Davis Security Level`=takeFirst(vulnerability.risk.level),\n`CVSSv3 base`=takeFirst(vulnerability.cvss.base_score),\n`First seen`=takeMin(toTimestamp(vulnerability.first_seen)),\n`Last seen`=takeFirst(timestamp)\n| fields\n`Davis Security Level`,\n`Davis Security Score`,\n`CVSSv3 base`,\nStatus=if(Status==\"OPEN\",concat(\"🔴 \",Status)),\n`Mute status`=if(Muted==\"MUTED\",concat(\"⚫\",\" Muted\"),else:\"Not muted\"),\n`Status change`=if(arrayMax(array(`Last entity status`,`Last status`,`Last mute status`,`Last entity mute status`)) > now()-1d,arrayMax(array(`Last entity status`,`Last status`,`Last mute status`,`Last entity mute status`)),\n                else:concat(toLong((now()-arrayMax(array(`Last entity status`,`Last status`,`Last mute status`,`Last entity mute status`)))/1d),\" days ago\")),\n`First seen`=concat(toLong((now()-`First seen`)/1d),\" days ago\"),\n`Last seen`=concat(toLong((now()-`Last seen`)/1m),\" minutes ago\")","scannedRecords":4636,"dqlVersion":"V1_0","scannedBytes":587048,"analysisTimeframe":{"start":"2023-08-08T00:41:47.605Z","end":"2023-08-08T00:56:47.605Z"},"locale":"","executionTimeMilliseconds":268,"notifications":[],"queryId":"773b03e7-7555-455b-bd2c-4f8473e3703d","sampled":false}},"types":[{"mappings":{"Davis Security Level":{"type":"string"},"Davis Security Score":{"type":"double"},"CVSSv3 base":{"type":"double"},"Status":{"type":"string"},"Mute status":{"type":"string"},"Status change":{"type":"string"},"First seen":{"type":"string"},"Last seen":{"type":"string"}},"indexRange":[0,0]}]},"notifications":[]}},"davisAnalytics":{"analyzerComponentState":{"resultState":{}}},"davisAnalysis":{"analyzerComponentState":{"resultState":{}}}},{"height":161,"id":"64326fcc-3481-434f-8154-95cfa23fb55b","showInput":false,"showSettings":false,"showTitle":true,"title":"Affected entities count over last 3 days","type":"dql","state":{"input":{"timeframe":{"from":"now-3d","to":"now","details":{"from":{"type":"expression","normalized":"now-3d","date":"2023-07-17T12:23:22.546Z"},"to":{"type":"expression","normalized":"now","date":"2023-07-20T12:23:22.546Z"}}},"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n| summarize `Affected entities`=arraySize(collectDistinct(affected_entity.id)), by:{timestamp}\n| sort timestamp, direction:\"descending\"\n| summarize `Affected entities`=takeFirst(`Affected entities`), by:{timestamp=bin(timestamp, 1h)}\n| sort timestamp, direction:\"descending\""},"visualizationSettings":{"chartSettings":{"gapPolicy":"connect","legend":{"hidden":true}},"table":{"displayMode":"edit","firstVisibleRowIndex":0,"lineWrapIds":[],"enableLineWrap":false}},"showConsole":true,"state":"success","visualization":"areaChart","result":{"code":200,"input":{"timeframe":{"from":"now-3d","to":"now","details":{"from":{"type":"expression","normalized":"now-3d","date":"2023-07-17T12:23:22.546Z"},"to":{"type":"expression","normalized":"now","date":"2023-07-20T12:23:22.546Z"}}},"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n| summarize `Affected entities`=arraySize(collectDistinct(affected_entity.id)), by:{timestamp}\n| sort timestamp, direction:\"descending\"\n| summarize `Affected entities`=takeFirst(`Affected entities`), by:{timestamp=bin(timestamp, 1h)}\n| sort timestamp, direction:\"descending\""},"dateTime":"2023-08-08T00:56:47.608Z","value":{"records":[{"timestamp":"2023-08-07T20:00:00.000000000-04:00","Affected entities":"1"},{"timestamp":"2023-08-07T19:00:00.000000000-04:00","Affected entities":"1"},{"timestamp":"2023-08-07T18:00:00.000000000-04:00","Affected entities":"1"},{"timestamp":"2023-08-07T17:00:00.000000000-04:00","Affected entities":"1"},{"timestamp":"2023-08-07T16:00:00.000000000-04:00","Affected entities":"1"},{"timestamp":"2023-08-07T15:00:00.000000000-04:00","Affected entities":"1"},{"timestamp":"2023-08-07T14:00:00.000000000-04:00","Affected entities":"1"},{"timestamp":"2023-08-07T13:00:00.000000000-04:00","Affected entities":"1"},{"timestamp":"2023-08-07T12:00:00.000000000-04:00","Affected entities":"1"},{"timestamp":"2023-08-07T11:00:00.000000000-04:00","Affected entities":"1"},{"timestamp":"2023-08-07T10:00:00.000000000-04:00","Affected entities":"1"},{"timestamp":"2023-08-07T09:00:00.000000000-04:00","Affected entities":"1"},{"timestamp":"2023-08-07T08:00:00.000000000-04:00","Affected entities":"1"}],"metadata":{"grail":{"canonicalQuery":"fetch events\n| filter event.provider == \"Dynatrace\"\n| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level == \"ENTITY\"\n| filter vulnerability.display_id == \"S-123\"\n| summarize by:{timestamp}, arraySize(collectDistinct(affected_entity.id)), alias:`Affected entities`\n| sort timestamp, direction:\"descending\"\n| summarize by:{bin(timestamp, 1h), alias:timestamp}, takeFirst(`Affected entities`), alias:`Affected entities`\n| sort timestamp, direction:\"descending\"","timezone":"America/New_York","query":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n| summarize `Affected entities`=arraySize(collectDistinct(affected_entity.id)), by:{timestamp}\n| sort timestamp, direction:\"descending\"\n| summarize `Affected entities`=takeFirst(`Affected entities`), by:{timestamp=bin(timestamp, 1h)}\n| sort timestamp, direction:\"descending\"","scannedRecords":47860,"dqlVersion":"V1_0","scannedBytes":5289219,"analysisTimeframe":{"start":"2023-08-05T00:56:47.609Z","end":"2023-08-08T00:56:47.609Z"},"locale":"","executionTimeMilliseconds":96,"notifications":[],"queryId":"a2d7d6bd-45a4-4da8-b781-91f1f2d2f054","sampled":false}},"types":[{"mappings":{"timestamp":{"type":"timestamp"},"Affected entities":{"type":"long"}},"indexRange":[0,12]}]},"notifications":[]}},"davisAnalytics":{"analyzerComponentState":{"resultState":{}}},"davisAnalysis":{"analyzerComponentState":{"resultState":{}}}},{"height":105,"id":"13b5a131-6171-4565-8250-e4e97d04162c","showInput":false,"showSettings":false,"showTitle":true,"title":"Davis assessment summary for affected entities","type":"dql","state":{"input":{"timeframe":{"from":"now-15m","to":"now","details":{"from":{"type":"expression","normalized":"now-15m","date":"2023-07-13T15:13:23.504Z"},"to":{"type":"expression","normalized":"now","date":"2023-07-13T15:28:23.504Z"}}},"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"               \n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n// filter for the latest snapshot per entity\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.kind == \"SECURITY_EVENT\" \n| filter event.category == \"VULNERABILITY_MANAGEMENT\" \n| filter event.provider == \"Dynatrace\" \n| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\" \n| filter event.level==\"ENTITY\"  \n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n| summarize\n`Affected entities`=arraySize(collectArray(affected_entity.id)),\nTypes=collectDistinct(affected_entity.type),\n`Function in use`=countIf(vulnerability.davis_assessment.vulnerable_function_status==\"IN_USE\"),\n`Function not in use`=countIf(vulnerability.davis_assessment.vulnerable_function_status==\"NOT_IN_USE\"),\n`Function not available`=countIf(vulnerability.davis_assessment.vulnerable_function_status==\"NOT_AVAILABLE\"),\n`Internet exposure`=countIf(vulnerability.davis_assessment.exposure_status==\"PUBLIC_NETWORK\"),\n`Data assets in reach`=countIf(vulnerability.davis_assessment.data_assets_status)\n| fields\nTypes=substring(toString(Types),from:1,to:-1),\n`Affected entities`,\n`With internet exposure`=if(`Internet exposure`>0,concat(\"❗\",`Internet exposure`),else:0),\n`With data assets in reach`=if(`Data assets in reach`>0,concat(\"❗\",`Data assets in reach`),else:0),\n`With function in use`=if(`Function in use`>0,concat(\"❗\",`Function in use`),else:if(`Function not in use`>0,\"Not in use\",else:\"No data\"))"},"visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[],"firstVisibleRowIndex":0}},"showConsole":true,"state":"success","visualization":"table","result":{"code":200,"input":{"timeframe":{"from":"now-15m","to":"now","details":{"from":{"type":"expression","normalized":"now-15m","date":"2023-07-13T15:13:23.504Z"},"to":{"type":"expression","normalized":"now","date":"2023-07-13T15:28:23.504Z"}}},"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"               \n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n// filter for the latest snapshot per entity\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.kind == \"SECURITY_EVENT\" \n| filter event.category == \"VULNERABILITY_MANAGEMENT\" \n| filter event.provider == \"Dynatrace\" \n| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\" \n| filter event.level==\"ENTITY\"  \n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n| summarize\n`Affected entities`=arraySize(collectArray(affected_entity.id)),\nTypes=collectDistinct(affected_entity.type),\n`Function in use`=countIf(vulnerability.davis_assessment.vulnerable_function_status==\"IN_USE\"),\n`Function not in use`=countIf(vulnerability.davis_assessment.vulnerable_function_status==\"NOT_IN_USE\"),\n`Function not available`=countIf(vulnerability.davis_assessment.vulnerable_function_status==\"NOT_AVAILABLE\"),\n`Internet exposure`=countIf(vulnerability.davis_assessment.exposure_status==\"PUBLIC_NETWORK\"),\n`Data assets in reach`=countIf(vulnerability.davis_assessment.data_assets_status)\n| fields\nTypes=substring(toString(Types),from:1,to:-1),\n`Affected entities`,\n`With internet exposure`=if(`Internet exposure`>0,concat(\"❗\",`Internet exposure`),else:0),\n`With data assets in reach`=if(`Data assets in reach`>0,concat(\"❗\",`Data assets in reach`),else:0),\n`With function in use`=if(`Function in use`>0,concat(\"❗\",`Function in use`),else:if(`Function not in use`>0,\"Not in use\",else:\"No data\"))"},"dateTime":"2023-08-08T00:56:47.612Z","value":{"records":[{"Types":"PROCESS_GROUP","Affected entities":"1","With internet exposure":"❗1","With data assets in reach":"❗1","With function in use":"No data"}],"metadata":{"grail":{"canonicalQuery":"fetch events\n| filter event.provider == \"Dynatrace\"\n| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level == \"ENTITY\"\n| filter vulnerability.display_id == \"S-123\"\n| fieldsAdd \"match\", alias:matcher\n| lookup \n\t[\n\t\tfetch events\n\t\t| filter event.kind == \"SECURITY_EVENT\"\n\t\t| filter event.category == \"VULNERABILITY_MANAGEMENT\"\n\t\t| filter event.provider == \"Dynatrace\"\n\t\t| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n\t\t| filter event.level == \"ENTITY\"\n\t\t| filter vulnerability.display_id == \"S-123\"\n\t\t| fields {timestamp, alias:maxTimestamp}, {\"match\", alias:matcher}\n\t\t| limit 1\n\t], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp == maxTimestamp\n| summarize {arraySize(collectArray(affected_entity.id)), alias:`Affected entities`}, {collectDistinct(affected_entity.type), alias:Types}, {countIf(vulnerability.davis_assessment.vulnerable_function_status == \"IN_USE\"), alias:`Function in use`}, {countIf(vulnerability.davis_assessment.vulnerable_function_status == \"NOT_IN_USE\"), alias:`Function not in use`}, {countIf(vulnerability.davis_assessment.vulnerable_function_status == \"NOT_AVAILABLE\"), alias:`Function not available`}, {countIf(vulnerability.davis_assessment.exposure_status == \"PUBLIC_NETWORK\"), alias:`Internet exposure`}, {countIf(vulnerability.davis_assessment.data_assets_status), alias:`Data assets in reach`}\n| fields {substring(toString(Types), from:1, to:-1), alias:Types}, `Affected entities`, {if(`Internet exposure` > 0, concat(\"❗\", `Internet exposure`), else:0), alias:`With internet exposure`}, {if(`Data assets in reach` > 0, concat(\"❗\", `Data assets in reach`), else:0), alias:`With data assets in reach`}, {if(`Function in use` > 0, concat(\"❗\", `Function in use`), else:if(`Function not in use` > 0, \"Not in use\", else:\"No data\")), alias:`With function in use`}","timezone":"America/New_York","query":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"               \n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n// filter for the latest snapshot per entity\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.kind == \"SECURITY_EVENT\" \n| filter event.category == \"VULNERABILITY_MANAGEMENT\" \n| filter event.provider == \"Dynatrace\" \n| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\" \n| filter event.level==\"ENTITY\"  \n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n| summarize\n`Affected entities`=arraySize(collectArray(affected_entity.id)),\nTypes=collectDistinct(affected_entity.type),\n`Function in use`=countIf(vulnerability.davis_assessment.vulnerable_function_status==\"IN_USE\"),\n`Function not in use`=countIf(vulnerability.davis_assessment.vulnerable_function_status==\"NOT_IN_USE\"),\n`Function not available`=countIf(vulnerability.davis_assessment.vulnerable_function_status==\"NOT_AVAILABLE\"),\n`Internet exposure`=countIf(vulnerability.davis_assessment.exposure_status==\"PUBLIC_NETWORK\"),\n`Data assets in reach`=countIf(vulnerability.davis_assessment.data_assets_status)\n| fields\nTypes=substring(toString(Types),from:1,to:-1),\n`Affected entities`,\n`With internet exposure`=if(`Internet exposure`>0,concat(\"❗\",`Internet exposure`),else:0),\n`With data assets in reach`=if(`Data assets in reach`>0,concat(\"❗\",`Data assets in reach`),else:0),\n`With function in use`=if(`Function in use`>0,concat(\"❗\",`Function in use`),else:if(`Function not in use`>0,\"Not in use\",else:\"No data\"))","scannedRecords":4636,"dqlVersion":"V1_0","scannedBytes":587048,"analysisTimeframe":{"start":"2023-08-08T00:41:47.615Z","end":"2023-08-08T00:56:47.615Z"},"locale":"","executionTimeMilliseconds":130,"notifications":[],"queryId":"c6e32563-cd2c-4e17-8ad3-6b3002b02532","sampled":false}},"types":[{"mappings":{"Types":{"type":"string"},"Affected entities":{"type":"long"},"With internet exposure":{"type":"string"},"With data assets in reach":{"type":"string"},"With function in use":{"type":"string"}},"indexRange":[0,0]}]},"notifications":[]}},"davisAnalytics":{"analyzerComponentState":{"resultState":{}}},"davisAnalysis":{"analyzerComponentState":{"resultState":{}}},"drilldownPath":[]},{"id":"b921806b-52cc-45a2-8d6b-539df4b01a51","type":"dql","title":"Summary of related entities","showTitle":false,"state":{"input":{"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"               \n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n// filter for the latest snapshot per entity\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.kind == \"SECURITY_EVENT\" \n| filter event.category == \"VULNERABILITY_MANAGEMENT\" \n| filter event.provider == \"Dynatrace\" \n| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\" \n| filter event.level==\"ENTITY\"  \n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n| summarize\n`Related hosts`=replaceString(substring(toString(arrayDistinct(arrayRemoveNulls(collectArray(related_entities.hosts.ids)))),from:2,to:-2),\"[\",\"\"),\n`Related applications`=replaceString(substring(toString(arrayDistinct(arrayRemoveNulls(collectArray(related_entities.applications.ids)))),from:2,to:-2),\"[\",\"\"),\n`Related services`=replaceString(substring(toString(arrayDistinct(arrayRemoveNulls(collectArray(related_entities.services.ids)))),from:2,to:-2),\"[\",\"\"),\n`Related databases`=replaceString(substring(toString(arrayDistinct(arrayRemoveNulls(collectArray(related_entities.databases.ids)))),from:2,to:-2),\"[\",\"\"),\n`Related kubernetes workloads`=replaceString(substring(toString(arrayDistinct(arrayRemoveNulls(collectArray(related_entities.kubernetes_workloads.ids)))),from:2,to:-2),\"[\",\"\"),\n`Related kubernetes clusters`=replaceString(substring(toString(arrayDistinct(arrayRemoveNulls(collectArray(related_entities.kubernetes_clusters.ids)))),from:2,to:-2),\"[\",\"\")\n| fields \n`Related hosts`= arrayDistinct(splitString(toString(replaceString(toString(`Related hosts`),\"], \",\",\")),\",\")),\n`Related applications`= arrayDistinct(splitString(toString(replaceString(toString(`Related applications`),\"], \",\",\")),\",\")),\n`Related services`= arrayDistinct(splitString(toString(replaceString(toString(`Related services`),\"], \",\",\")),\",\")),\n`Related databases`= arrayDistinct(splitString(toString(replaceString(toString(`Related databases`),\"], \",\",\")),\",\")),\n`Related kubernetes workloads`= arrayDistinct(splitString(toString(replaceString(toString(`Related kubernetes workloads`),\"], \",\",\")),\",\")),\n`Related kubernetes clusters`= arrayDistinct(splitString(toString(replaceString(toString(`Related kubernetes clusters`),\"], \",\",\")),\",\"))\n| fields \n`Related hosts`=if(not(in(\"\",`Related hosts`)),arraySize(`Related hosts`), else:\"-\"),\n`Related applications`=if(not(in(\"\",`Related applications`)),arraySize(`Related applications`), else:\"-\"),\n`Related services`=if(not(in(\"\",`Related services`)),arraySize(`Related services`), else:\"-\"),\n`Related databases`=if(not(in(\"\",`Related databases`)),arraySize(`Related databases`), else:\"-\"),\n`Related kubernetes workloads`=if(not(in(\"\",`Related kubernetes workloads`)),arraySize(`Related kubernetes workloads`), else:\"-\"),\n`Related kubernetes clusters`=if(not(in(\"\",`Related kubernetes clusters`)),arraySize(`Related kubernetes clusters`), else:\"-\")","timeframe":{"from":"now-15m","to":"now","details":{"from":{"type":"expression","normalized":"now-15m","date":"2023-08-07T08:12:01.001Z"},"to":{"type":"expression","normalized":"now","date":"2023-08-07T08:27:01.001Z"}}}},"state":"success","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute"}},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"rowDensity":"condensed","enableLineWrap":true,"enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[],"firstVisibleRowIndex":0,"columnWidths":{}}},"result":{"code":200,"value":{"records":[{"Related hosts":"2","Related applications":"-","Related services":"2","Related databases":"-","Related kubernetes workloads":"1","Related kubernetes clusters":"1"}],"metadata":{"grail":{"canonicalQuery":"fetch events\n| filter event.provider == \"Dynatrace\"\n| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level == \"ENTITY\"\n| filter vulnerability.display_id == \"S-123\"\n| fieldsAdd \"match\", alias:matcher\n| lookup \n\t[\n\t\tfetch events\n\t\t| filter event.kind == \"SECURITY_EVENT\"\n\t\t| filter event.category == \"VULNERABILITY_MANAGEMENT\"\n\t\t| filter event.provider == \"Dynatrace\"\n\t\t| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n\t\t| filter event.level == \"ENTITY\"\n\t\t| filter vulnerability.display_id == \"S-123\"\n\t\t| fields {timestamp, alias:maxTimestamp}, {\"match\", alias:matcher}\n\t\t| limit 1\n\t], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp == maxTimestamp\n| summarize {replaceString(substring(toString(arrayDistinct(arrayRemoveNulls(collectArray(related_entities.hosts.ids)))), from:2, to:-2), \"[\", \"\"), alias:`Related hosts`}, {replaceString(substring(toString(arrayDistinct(arrayRemoveNulls(collectArray(related_entities.applications.ids)))), from:2, to:-2), \"[\", \"\"), alias:`Related applications`}, {replaceString(substring(toString(arrayDistinct(arrayRemoveNulls(collectArray(related_entities.services.ids)))), from:2, to:-2), \"[\", \"\"), alias:`Related services`}, {replaceString(substring(toString(arrayDistinct(arrayRemoveNulls(collectArray(related_entities.databases.ids)))), from:2, to:-2), \"[\", \"\"), alias:`Related databases`}, {replaceString(substring(toString(arrayDistinct(arrayRemoveNulls(collectArray(related_entities.kubernetes_workloads.ids)))), from:2, to:-2), \"[\", \"\"), alias:`Related kubernetes workloads`}, {replaceString(substring(toString(arrayDistinct(arrayRemoveNulls(collectArray(related_entities.kubernetes_clusters.ids)))), from:2, to:-2), \"[\", \"\"), alias:`Related kubernetes clusters`}\n| fields {arrayDistinct(splitString(toString(replaceString(toString(`Related hosts`), \"], \", \",\")), \",\")), alias:`Related hosts`}, {arrayDistinct(splitString(toString(replaceString(toString(`Related applications`), \"], \", \",\")), \",\")), alias:`Related applications`}, {arrayDistinct(splitString(toString(replaceString(toString(`Related services`), \"], \", \",\")), \",\")), alias:`Related services`}, {arrayDistinct(splitString(toString(replaceString(toString(`Related databases`), \"], \", \",\")), \",\")), alias:`Related databases`}, {arrayDistinct(splitString(toString(replaceString(toString(`Related kubernetes workloads`), \"], \", \",\")), \",\")), alias:`Related kubernetes workloads`}, {arrayDistinct(splitString(toString(replaceString(toString(`Related kubernetes clusters`), \"], \", \",\")), \",\")), alias:`Related kubernetes clusters`}\n| fields {if(NOT in(\"\", `Related hosts`), arraySize(`Related hosts`), else:\"-\"), alias:`Related hosts`}, {if(NOT in(\"\", `Related applications`), arraySize(`Related applications`), else:\"-\"), alias:`Related applications`}, {if(NOT in(\"\", `Related services`), arraySize(`Related services`), else:\"-\"), alias:`Related services`}, {if(NOT in(\"\", `Related databases`), arraySize(`Related databases`), else:\"-\"), alias:`Related databases`}, {if(NOT in(\"\", `Related kubernetes workloads`), arraySize(`Related kubernetes workloads`), else:\"-\"), alias:`Related kubernetes workloads`}, {if(NOT in(\"\", `Related kubernetes clusters`), arraySize(`Related kubernetes clusters`), else:\"-\"), alias:`Related kubernetes clusters`}","timezone":"America/New_York","query":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"               \n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n// filter for the latest snapshot per entity\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.kind == \"SECURITY_EVENT\" \n| filter event.category == \"VULNERABILITY_MANAGEMENT\" \n| filter event.provider == \"Dynatrace\" \n| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\" \n| filter event.level==\"ENTITY\"  \n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n| summarize\n`Related hosts`=replaceString(substring(toString(arrayDistinct(arrayRemoveNulls(collectArray(related_entities.hosts.ids)))),from:2,to:-2),\"[\",\"\"),\n`Related applications`=replaceString(substring(toString(arrayDistinct(arrayRemoveNulls(collectArray(related_entities.applications.ids)))),from:2,to:-2),\"[\",\"\"),\n`Related services`=replaceString(substring(toString(arrayDistinct(arrayRemoveNulls(collectArray(related_entities.services.ids)))),from:2,to:-2),\"[\",\"\"),\n`Related databases`=replaceString(substring(toString(arrayDistinct(arrayRemoveNulls(collectArray(related_entities.databases.ids)))),from:2,to:-2),\"[\",\"\"),\n`Related kubernetes workloads`=replaceString(substring(toString(arrayDistinct(arrayRemoveNulls(collectArray(related_entities.kubernetes_workloads.ids)))),from:2,to:-2),\"[\",\"\"),\n`Related kubernetes clusters`=replaceString(substring(toString(arrayDistinct(arrayRemoveNulls(collectArray(related_entities.kubernetes_clusters.ids)))),from:2,to:-2),\"[\",\"\")\n| fields \n`Related hosts`= arrayDistinct(splitString(toString(replaceString(toString(`Related hosts`),\"], \",\",\")),\",\")),\n`Related applications`= arrayDistinct(splitString(toString(replaceString(toString(`Related applications`),\"], \",\",\")),\",\")),\n`Related services`= arrayDistinct(splitString(toString(replaceString(toString(`Related services`),\"], \",\",\")),\",\")),\n`Related databases`= arrayDistinct(splitString(toString(replaceString(toString(`Related databases`),\"], \",\",\")),\",\")),\n`Related kubernetes workloads`= arrayDistinct(splitString(toString(replaceString(toString(`Related kubernetes workloads`),\"], \",\",\")),\",\")),\n`Related kubernetes clusters`= arrayDistinct(splitString(toString(replaceString(toString(`Related kubernetes clusters`),\"], \",\",\")),\",\"))\n| fields \n`Related hosts`=if(not(in(\"\",`Related hosts`)),arraySize(`Related hosts`), else:\"-\"),\n`Related applications`=if(not(in(\"\",`Related applications`)),arraySize(`Related applications`), else:\"-\"),\n`Related services`=if(not(in(\"\",`Related services`)),arraySize(`Related services`), else:\"-\"),\n`Related databases`=if(not(in(\"\",`Related databases`)),arraySize(`Related databases`), else:\"-\"),\n`Related kubernetes workloads`=if(not(in(\"\",`Related kubernetes workloads`)),arraySize(`Related kubernetes workloads`), else:\"-\"),\n`Related kubernetes clusters`=if(not(in(\"\",`Related kubernetes clusters`)),arraySize(`Related kubernetes clusters`), else:\"-\")","scannedRecords":4636,"dqlVersion":"V1_0","scannedBytes":587048,"analysisTimeframe":{"start":"2023-08-08T00:41:47.619Z","end":"2023-08-08T00:56:47.619Z"},"locale":"","executionTimeMilliseconds":267,"notifications":[],"queryId":"1ee331ee-8373-4509-89ff-443b346b2ee7","sampled":false}},"types":[{"mappings":{"Related hosts":{"type":"long"},"Related applications":{"type":"string"},"Related services":{"type":"long"},"Related databases":{"type":"string"},"Related kubernetes workloads":{"type":"long"},"Related kubernetes clusters":{"type":"long"}},"indexRange":[0,0]}]},"notifications":[],"dateTime":"2023-08-08T00:56:47.618Z","input":{"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"               \n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n// filter for the latest snapshot per entity\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.kind == \"SECURITY_EVENT\" \n| filter event.category == \"VULNERABILITY_MANAGEMENT\" \n| filter event.provider == \"Dynatrace\" \n| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\" \n| filter event.level==\"ENTITY\"  \n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n| summarize\n`Related hosts`=replaceString(substring(toString(arrayDistinct(arrayRemoveNulls(collectArray(related_entities.hosts.ids)))),from:2,to:-2),\"[\",\"\"),\n`Related applications`=replaceString(substring(toString(arrayDistinct(arrayRemoveNulls(collectArray(related_entities.applications.ids)))),from:2,to:-2),\"[\",\"\"),\n`Related services`=replaceString(substring(toString(arrayDistinct(arrayRemoveNulls(collectArray(related_entities.services.ids)))),from:2,to:-2),\"[\",\"\"),\n`Related databases`=replaceString(substring(toString(arrayDistinct(arrayRemoveNulls(collectArray(related_entities.databases.ids)))),from:2,to:-2),\"[\",\"\"),\n`Related kubernetes workloads`=replaceString(substring(toString(arrayDistinct(arrayRemoveNulls(collectArray(related_entities.kubernetes_workloads.ids)))),from:2,to:-2),\"[\",\"\"),\n`Related kubernetes clusters`=replaceString(substring(toString(arrayDistinct(arrayRemoveNulls(collectArray(related_entities.kubernetes_clusters.ids)))),from:2,to:-2),\"[\",\"\")\n| fields \n`Related hosts`= arrayDistinct(splitString(toString(replaceString(toString(`Related hosts`),\"], \",\",\")),\",\")),\n`Related applications`= arrayDistinct(splitString(toString(replaceString(toString(`Related applications`),\"], \",\",\")),\",\")),\n`Related services`= arrayDistinct(splitString(toString(replaceString(toString(`Related services`),\"], \",\",\")),\",\")),\n`Related databases`= arrayDistinct(splitString(toString(replaceString(toString(`Related databases`),\"], \",\",\")),\",\")),\n`Related kubernetes workloads`= arrayDistinct(splitString(toString(replaceString(toString(`Related kubernetes workloads`),\"], \",\",\")),\",\")),\n`Related kubernetes clusters`= arrayDistinct(splitString(toString(replaceString(toString(`Related kubernetes clusters`),\"], \",\",\")),\",\"))\n| fields \n`Related hosts`=if(not(in(\"\",`Related hosts`)),arraySize(`Related hosts`), else:\"-\"),\n`Related applications`=if(not(in(\"\",`Related applications`)),arraySize(`Related applications`), else:\"-\"),\n`Related services`=if(not(in(\"\",`Related services`)),arraySize(`Related services`), else:\"-\"),\n`Related databases`=if(not(in(\"\",`Related databases`)),arraySize(`Related databases`), else:\"-\"),\n`Related kubernetes workloads`=if(not(in(\"\",`Related kubernetes workloads`)),arraySize(`Related kubernetes workloads`), else:\"-\"),\n`Related kubernetes clusters`=if(not(in(\"\",`Related kubernetes clusters`)),arraySize(`Related kubernetes clusters`), else:\"-\")","timeframe":{"from":"now-15m","to":"now","details":{"from":{"type":"expression","normalized":"now-15m","date":"2023-08-07T08:12:01.001Z"},"to":{"type":"expression","normalized":"now","date":"2023-08-07T08:27:01.001Z"}}}}},"visualization":"table"},"davisAnalysis":{"analyzerComponentState":{"resultState":{}}},"showInput":false,"height":94,"davisAnalytics":{"analyzerComponentState":{"resultState":{}}}},{"id":"657aabe2-580b-4875-b489-336374f15f76","type":"markdown","markdown":"## 🔍 Vulnerability details\n--- \nVulnerability information and classification."},{"height":107,"id":"5079b936-4b15-4821-bc05-b6088cc33bcd","showInput":false,"showSettings":false,"showTitle":true,"title":"Basic vulnerability info","type":"dql","state":{"input":{"timeframe":{"from":"now-15m","to":"now","details":{"from":{"type":"expression","normalized":"now-15m","date":"2023-07-13T15:13:23.504Z"},"to":{"type":"expression","normalized":"now","date":"2023-07-13T15:28:23.504Z"}}},"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"VULNERABILITY\"               \n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n| sort timestamp, direction:\"descending\"\n| limit 1\n| fields\nvulnerability.display_id,\nType=vulnerability.type,\nExploit=if(vulnerability.davis_assessment.exploit_status==\"AVAILABLE\",concat(\"❗\",\"Available\"),else:\"Not Available\"),\n`External ID`=vulnerability.external_id,\nStack=vulnerability.stack,\nTechnology=vulnerability.technology,\nCVE=substring(toString(vulnerability.references.cve),from:1,to:-1),\nCWE=vulnerability.references.cwe,\nOWASP=vulnerability.references.owasp"},"visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"table":{"displayMode":"edit","firstVisibleRowIndex":0,"lineWrapIds":[["vulnerability.description"]],"enableLineWrap":true}},"showConsole":true,"state":"success","visualization":"table","result":{"code":200,"input":{"timeframe":{"from":"now-15m","to":"now","details":{"from":{"type":"expression","normalized":"now-15m","date":"2023-07-13T15:13:23.504Z"},"to":{"type":"expression","normalized":"now","date":"2023-07-13T15:28:23.504Z"}}},"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"VULNERABILITY\"               \n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n| sort timestamp, direction:\"descending\"\n| limit 1\n| fields\nvulnerability.display_id,\nType=vulnerability.type,\nExploit=if(vulnerability.davis_assessment.exploit_status==\"AVAILABLE\",concat(\"❗\",\"Available\"),else:\"Not Available\"),\n`External ID`=vulnerability.external_id,\nStack=vulnerability.stack,\nTechnology=vulnerability.technology,\nCVE=substring(toString(vulnerability.references.cve),from:1,to:-1),\nCWE=vulnerability.references.cwe,\nOWASP=vulnerability.references.owasp"},"dateTime":"2023-08-08T00:56:47.622Z","value":{"records":[{"vulnerability.display_id":"S-123","Type":"Improper Restriction of XML External Entity Reference","Exploit":"Not Available","External ID":"SNYK-JAVA-ORGAPACHEXMLBEANS-1060048","Stack":"CODE_LIBRARY","Technology":"JAVA","CVE":"CVE-2021-23926","CWE":["CWE-611"],"OWASP":["2021:A5"]}],"metadata":{"grail":{"canonicalQuery":"fetch events\n| filter event.provider == \"Dynatrace\"\n| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level == \"VULNERABILITY\"\n| filter vulnerability.display_id == \"S-123\"\n| sort timestamp, direction:\"descending\"\n| limit 1\n| fields vulnerability.display_id, {vulnerability.type, alias:Type}, {if(vulnerability.davis_assessment.exploit_status == \"AVAILABLE\", concat(\"❗\", \"Available\"), else:\"Not Available\"), alias:Exploit}, {vulnerability.external_id, alias:`External ID`}, {vulnerability.stack, alias:Stack}, {vulnerability.technology, alias:Technology}, {substring(toString(vulnerability.references.cve), from:1, to:-1), alias:CVE}, {vulnerability.references.cwe, alias:CWE}, {vulnerability.references.owasp, alias:OWASP}","timezone":"America/New_York","query":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"VULNERABILITY\"               \n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n| sort timestamp, direction:\"descending\"\n| limit 1\n| fields\nvulnerability.display_id,\nType=vulnerability.type,\nExploit=if(vulnerability.davis_assessment.exploit_status==\"AVAILABLE\",concat(\"❗\",\"Available\"),else:\"Not Available\"),\n`External ID`=vulnerability.external_id,\nStack=vulnerability.stack,\nTechnology=vulnerability.technology,\nCVE=substring(toString(vulnerability.references.cve),from:1,to:-1),\nCWE=vulnerability.references.cwe,\nOWASP=vulnerability.references.owasp","scannedRecords":2318,"dqlVersion":"V1_0","scannedBytes":291640,"analysisTimeframe":{"start":"2023-08-08T00:41:47.623Z","end":"2023-08-08T00:56:47.623Z"},"locale":"","executionTimeMilliseconds":117,"notifications":[],"queryId":"dee35cb2-dd98-438e-8062-ae5554b84ded","sampled":false}},"types":[{"mappings":{"vulnerability.display_id":{"type":"string"},"Type":{"type":"string"},"Exploit":{"type":"string"},"External ID":{"type":"string"},"Stack":{"type":"string"},"Technology":{"type":"string"},"CVE":{"type":"string"},"CWE":{"type":"array","types":[{"mappings":{"element":{"type":"string"}},"indexRange":[0,0]}]},"OWASP":{"type":"array","types":[{"mappings":{"element":{"type":"string"}},"indexRange":[0,0]}]}},"indexRange":[0,0]}]},"notifications":[]}},"davisAnalytics":{"analyzerComponentState":{"resultState":{}}},"davisAnalysis":{"analyzerComponentState":{"resultState":{}}}},{"id":"4b343159-55fa-4091-b4f1-951619f174a2","type":"dql","title":"","showTitle":false,"state":{"input":{"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"VULNERABILITY\"               \n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n| sort timestamp, direction:\"descending\"\n| limit 1\n| fields\nDescription=vulnerability.description","timeframe":{"from":"now-15m","to":"now","details":{"from":{"type":"expression","normalized":"now-15m","date":"2023-08-07T08:12:13.404Z"},"to":{"type":"expression","normalized":"now","date":"2023-08-07T08:27:13.404Z"}}}},"state":"success","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute"}},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"rowDensity":"condensed","enableLineWrap":true,"enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[["Description"]],"firstVisibleRowIndex":0,"columnWidths":{}}},"result":{"code":200,"value":{"records":[{"Description":"Affected versions of this package are vulnerable to XML External Entity (XXE) Injection. The XML parsers used by XMLBeans did not set the properties needed to protect the user from malicious XML input. Vulnerabilities include possibilities for XML Entity Expansion attacks."}],"metadata":{"grail":{"canonicalQuery":"fetch events\n| filter event.provider == \"Dynatrace\"\n| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level == \"VULNERABILITY\"\n| filter vulnerability.display_id == \"S-123\"\n| sort timestamp, direction:\"descending\"\n| limit 1\n| fields vulnerability.description, alias:Description","timezone":"America/New_York","query":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"VULNERABILITY\"               \n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n| sort timestamp, direction:\"descending\"\n| limit 1\n| fields\nDescription=vulnerability.description","scannedRecords":2318,"dqlVersion":"V1_0","scannedBytes":291640,"analysisTimeframe":{"start":"2023-08-08T00:41:47.627Z","end":"2023-08-08T00:56:47.627Z"},"locale":"","executionTimeMilliseconds":104,"notifications":[],"queryId":"0baf319f-7ad2-4765-8131-7d206d8add01","sampled":false}},"types":[{"mappings":{"Description":{"type":"string"}},"indexRange":[0,0]}]},"notifications":[],"dateTime":"2023-08-08T00:56:47.626Z","input":{"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"VULNERABILITY\"               \n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n| sort timestamp, direction:\"descending\"\n| limit 1\n| fields\nDescription=vulnerability.description","timeframe":{"from":"now-15m","to":"now","details":{"from":{"type":"expression","normalized":"now-15m","date":"2023-08-07T08:12:13.404Z"},"to":{"type":"expression","normalized":"now","date":"2023-08-07T08:27:13.404Z"}}}}},"visualization":"table"},"davisAnalysis":{"analyzerComponentState":{"resultState":{}}},"showInput":false,"height":151,"davisAnalytics":{"analyzerComponentState":{"resultState":{}}}},{"id":"3414fa91-e43d-42c3-8a8b-284b3b1b415e","type":"dql","title":"Last 3 days vulnerability change events","showTitle":false,"state":{"input":{"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.group_label==\"CHANGE_EVENT\"\n| filter event.level==\"VULNERABILITY\"\n| filterOut in(\"affected_entities.count\",affected_entities.event_change_list)\n| filter vulnerability.display_id==\"S-123\" // // contextual filter\n| fields \nvulnerability.event_change_list,\naffected_entities.event_change_list,\n`Event date`=timestamp,\nEvent=event.name,\nStatus=vulnerability.resolution.status,\nMute=vulnerability.mute.status,\n`Davis Security Score`=round(vulnerability.davis_assessment.score,decimals:1),\n`# Affected entities`=affected_entities.count,\n`Function usage`=if(vulnerability.davis_assessment.vulnerable_function_status==\"IN_USE\",\"In use\",else:if(vulnerability.davis_assessment.vulnerable_function_status==\"NOT_IN_USE\",\"Not in use\", else:\"No data\")),\n`Internet exposure`=if(vulnerability.davis_assessment.exposure_status==\"PUBLIC_NETWORK\",\"Public\",else:\"Not exposed\"),\n`Data assets status`=if(vulnerability.davis_assessment.data_assets_status==\"REACHABLE\",\"In reach\", else:\"Not in reach\"),\n`Exploit`=if(vulnerability.davis_assessment.exploit_status==\"AVAILABLE\",\"Exists\",else:\"No data\")\n| sort `Event date`, direction:\"descending\"\n| fields \n`Event date`,\nEvent,\nStatus=if(in(\"vulnerability.resolution.status\",vulnerability.event_change_list),concat(\"🔄 \",Status),else:Status),\nMute=if(in(\"vulnerability.mute.status\",vulnerability.event_change_list),concat(\"🔄 \",Mute),else:Mute),\n`Davis Security Score`=if(in(\"vulnerability.davis_assessment.score\",vulnerability.event_change_list),concat(\"🔄 \",`Davis Security Score`),else:`Davis Security Score`),\n`Affected entities`=if(in(\"affected_entities.count\",affected_entities.event_change_list),concat(\"🔄 \",`# Affected entities`),else:`# Affected entities`),\n`Function usage`=if(in(\"vulnerability.davis_assessment.vulnerable_function_status\",vulnerability.event_change_list),concat(\"🔄 \",`Function usage`),else:`Function usage`),\n`Internet exposure`=if(in(\"vulnerability.davis_assessment.exposure_status\",vulnerability.event_change_list),concat(\"🔄 \",`Internet exposure`),else:`Internet exposure`),\n`Data assets status`=if(in(\"vulnerability.davis_assessment.data_assets_status\",vulnerability.event_change_list),concat(\"🔄 \",`Data assets status`),else:`Data assets status`),\n`Exploit`=if(in(\"vulnerability.davis_assessment.exploit_status\",vulnerability.event_change_list),concat(\"🔄 \",Exploit),else:Exploit)","timeframe":{"from":"now-3d","to":"now","details":{"from":{"type":"expression","normalized":"now-3d","date":"2023-07-11T14:34:20.614Z"},"to":{"type":"expression","normalized":"now","date":"2023-07-14T14:34:20.614Z"}}}},"state":"success","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute"}},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"rowDensity":"condensed","enableLineWrap":true,"enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[],"firstVisibleRowIndex":0,"columnWidths":{}}},"result":{"code":200,"value":{"records":[],"metadata":{"grail":{"canonicalQuery":"fetch events\n| filter event.provider == \"Dynatrace\"\n| filter event.group_label == \"CHANGE_EVENT\"\n| filter event.level == \"VULNERABILITY\"\n| filter isFalseOrNull(in(\"affected_entities.count\", affected_entities.event_change_list))\n| filter vulnerability.display_id == \"S-123\"\n| fields vulnerability.event_change_list, affected_entities.event_change_list, {timestamp, alias:`Event date`}, {event.name, alias:Event}, {vulnerability.resolution.status, alias:Status}, {vulnerability.mute.status, alias:Mute}, {round(vulnerability.davis_assessment.score, decimals:1), alias:`Davis Security Score`}, {affected_entities.count, alias:`# Affected entities`}, {if(vulnerability.davis_assessment.vulnerable_function_status == \"IN_USE\", \"In use\", else:if(vulnerability.davis_assessment.vulnerable_function_status == \"NOT_IN_USE\", \"Not in use\", else:\"No data\")), alias:`Function usage`}, {if(vulnerability.davis_assessment.exposure_status == \"PUBLIC_NETWORK\", \"Public\", else:\"Not exposed\"), alias:`Internet exposure`}, {if(vulnerability.davis_assessment.data_assets_status == \"REACHABLE\", \"In reach\", else:\"Not in reach\"), alias:`Data assets status`}, {if(vulnerability.davis_assessment.exploit_status == \"AVAILABLE\", \"Exists\", else:\"No data\"), alias:Exploit}\n| sort `Event date`, direction:\"descending\"\n| fields `Event date`, Event, {if(in(\"vulnerability.resolution.status\", vulnerability.event_change_list), concat(\"🔄 \", Status), else:Status), alias:Status}, {if(in(\"vulnerability.mute.status\", vulnerability.event_change_list), concat(\"🔄 \", Mute), else:Mute), alias:Mute}, {if(in(\"vulnerability.davis_assessment.score\", vulnerability.event_change_list), concat(\"🔄 \", `Davis Security Score`), else:`Davis Security Score`), alias:`Davis Security Score`}, {if(in(\"affected_entities.count\", affected_entities.event_change_list), concat(\"🔄 \", `# Affected entities`), else:`# Affected entities`), alias:`Affected entities`}, {if(in(\"vulnerability.davis_assessment.vulnerable_function_status\", vulnerability.event_change_list), concat(\"🔄 \", `Function usage`), else:`Function usage`), alias:`Function usage`}, {if(in(\"vulnerability.davis_assessment.exposure_status\", vulnerability.event_change_list), concat(\"🔄 \", `Internet exposure`), else:`Internet exposure`), alias:`Internet exposure`}, {if(in(\"vulnerability.davis_assessment.data_assets_status\", vulnerability.event_change_list), concat(\"🔄 \", `Data assets status`), else:`Data assets status`), alias:`Data assets status`}, {if(in(\"vulnerability.davis_assessment.exploit_status\", vulnerability.event_change_list), concat(\"🔄 \", Exploit), else:Exploit), alias:Exploit}","timezone":"America/New_York","query":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.group_label==\"CHANGE_EVENT\"\n| filter event.level==\"VULNERABILITY\"\n| filterOut in(\"affected_entities.count\",affected_entities.event_change_list)\n| filter vulnerability.display_id==\"S-123\" // // contextual filter\n| fields \nvulnerability.event_change_list,\naffected_entities.event_change_list,\n`Event date`=timestamp,\nEvent=event.name,\nStatus=vulnerability.resolution.status,\nMute=vulnerability.mute.status,\n`Davis Security Score`=round(vulnerability.davis_assessment.score,decimals:1),\n`# Affected entities`=affected_entities.count,\n`Function usage`=if(vulnerability.davis_assessment.vulnerable_function_status==\"IN_USE\",\"In use\",else:if(vulnerability.davis_assessment.vulnerable_function_status==\"NOT_IN_USE\",\"Not in use\", else:\"No data\")),\n`Internet exposure`=if(vulnerability.davis_assessment.exposure_status==\"PUBLIC_NETWORK\",\"Public\",else:\"Not exposed\"),\n`Data assets status`=if(vulnerability.davis_assessment.data_assets_status==\"REACHABLE\",\"In reach\", else:\"Not in reach\"),\n`Exploit`=if(vulnerability.davis_assessment.exploit_status==\"AVAILABLE\",\"Exists\",else:\"No data\")\n| sort `Event date`, direction:\"descending\"\n| fields \n`Event date`,\nEvent,\nStatus=if(in(\"vulnerability.resolution.status\",vulnerability.event_change_list),concat(\"🔄 \",Status),else:Status),\nMute=if(in(\"vulnerability.mute.status\",vulnerability.event_change_list),concat(\"🔄 \",Mute),else:Mute),\n`Davis Security Score`=if(in(\"vulnerability.davis_assessment.score\",vulnerability.event_change_list),concat(\"🔄 \",`Davis Security Score`),else:`Davis Security Score`),\n`Affected entities`=if(in(\"affected_entities.count\",affected_entities.event_change_list),concat(\"🔄 \",`# Affected entities`),else:`# Affected entities`),\n`Function usage`=if(in(\"vulnerability.davis_assessment.vulnerable_function_status\",vulnerability.event_change_list),concat(\"🔄 \",`Function usage`),else:`Function usage`),\n`Internet exposure`=if(in(\"vulnerability.davis_assessment.exposure_status\",vulnerability.event_change_list),concat(\"🔄 \",`Internet exposure`),else:`Internet exposure`),\n`Data assets status`=if(in(\"vulnerability.davis_assessment.data_assets_status\",vulnerability.event_change_list),concat(\"🔄 \",`Data assets status`),else:`Data assets status`),\n`Exploit`=if(in(\"vulnerability.davis_assessment.exploit_status\",vulnerability.event_change_list),concat(\"🔄 \",Exploit),else:Exploit)","scannedRecords":47860,"dqlVersion":"V1_0","scannedBytes":5021669,"analysisTimeframe":{"start":"2023-08-05T00:56:47.631Z","end":"2023-08-08T00:56:47.631Z"},"locale":"","executionTimeMilliseconds":189,"notifications":[],"queryId":"be45463f-be00-4753-994a-e8250a9028b8","sampled":false}},"types":[]},"notifications":[],"dateTime":"2023-08-08T00:56:47.630Z","input":{"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.group_label==\"CHANGE_EVENT\"\n| filter event.level==\"VULNERABILITY\"\n| filterOut in(\"affected_entities.count\",affected_entities.event_change_list)\n| filter vulnerability.display_id==\"S-123\" // // contextual filter\n| fields \nvulnerability.event_change_list,\naffected_entities.event_change_list,\n`Event date`=timestamp,\nEvent=event.name,\nStatus=vulnerability.resolution.status,\nMute=vulnerability.mute.status,\n`Davis Security Score`=round(vulnerability.davis_assessment.score,decimals:1),\n`# Affected entities`=affected_entities.count,\n`Function usage`=if(vulnerability.davis_assessment.vulnerable_function_status==\"IN_USE\",\"In use\",else:if(vulnerability.davis_assessment.vulnerable_function_status==\"NOT_IN_USE\",\"Not in use\", else:\"No data\")),\n`Internet exposure`=if(vulnerability.davis_assessment.exposure_status==\"PUBLIC_NETWORK\",\"Public\",else:\"Not exposed\"),\n`Data assets status`=if(vulnerability.davis_assessment.data_assets_status==\"REACHABLE\",\"In reach\", else:\"Not in reach\"),\n`Exploit`=if(vulnerability.davis_assessment.exploit_status==\"AVAILABLE\",\"Exists\",else:\"No data\")\n| sort `Event date`, direction:\"descending\"\n| fields \n`Event date`,\nEvent,\nStatus=if(in(\"vulnerability.resolution.status\",vulnerability.event_change_list),concat(\"🔄 \",Status),else:Status),\nMute=if(in(\"vulnerability.mute.status\",vulnerability.event_change_list),concat(\"🔄 \",Mute),else:Mute),\n`Davis Security Score`=if(in(\"vulnerability.davis_assessment.score\",vulnerability.event_change_list),concat(\"🔄 \",`Davis Security Score`),else:`Davis Security Score`),\n`Affected entities`=if(in(\"affected_entities.count\",affected_entities.event_change_list),concat(\"🔄 \",`# Affected entities`),else:`# Affected entities`),\n`Function usage`=if(in(\"vulnerability.davis_assessment.vulnerable_function_status\",vulnerability.event_change_list),concat(\"🔄 \",`Function usage`),else:`Function usage`),\n`Internet exposure`=if(in(\"vulnerability.davis_assessment.exposure_status\",vulnerability.event_change_list),concat(\"🔄 \",`Internet exposure`),else:`Internet exposure`),\n`Data assets status`=if(in(\"vulnerability.davis_assessment.data_assets_status\",vulnerability.event_change_list),concat(\"🔄 \",`Data assets status`),else:`Data assets status`),\n`Exploit`=if(in(\"vulnerability.davis_assessment.exploit_status\",vulnerability.event_change_list),concat(\"🔄 \",Exploit),else:Exploit)","timeframe":{"from":"now-3d","to":"now","details":{"from":{"type":"expression","normalized":"now-3d","date":"2023-07-11T14:34:20.614Z"},"to":{"type":"expression","normalized":"now","date":"2023-07-14T14:34:20.614Z"}}}}},"visualization":"table"},"davisAnalysis":{"analyzerComponentState":{"resultState":{}}},"showInput":false,"height":358,"davisAnalytics":{"analyzerComponentState":{"resultState":{}}}},{"id":"6a3dd660-78db-46e6-97f2-c405beec584e","type":"markdown","markdown":"## 🎯 Environment analysis\n--- \nIn-depth examination of your environment in the context of the selected vulnerability; includes a list of the most affected entities and the responsible teams."},{"id":"2341c1b5-9e64-4e0f-a222-e3b56a010d9b","type":"markdown","markdown":"### Affected entities\n\nThose are directly affected entities where vulnerabilities were discovered."},{"id":"a8bc652f-0832-46e4-afe8-b607693490c8","type":"dql","title":"Owning teams of affected process groups","showTitle":false,"state":{"input":{"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n| filter isNotNull(dt.entity.process_group)\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n//add ownership information\n| lookup [\nfetch dt.entity.process_group\n| fieldsAdd tags\n], sourceField:dt.entity.process_group, lookupField:id, fields:{tags}\n| parse toString(tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fieldsAdd Team=if(isNotNull(Team),Team,else:\"-\")\n| fieldsRemove lookup.id, lookup.entity.name, Tags\n// end of adding ownership info\n| summarize {\n`Entity names`=collectDistinct(affected_entity.name),\n`Component names`=arrayRemoveNulls(collectDistinct(affected_entity.vulnerable_component.name))\n}, by: {Team}\n| fields Team, `Affected entities`=arraySize(`Entity names`), `Components`=arraySize(`Component names`)\n| sort {`Affected entities`, direction:\"descending\"}, {`Components`, direction:\"descending\"}","timeframe":{"from":"now-15m","to":"now","details":{"from":{"type":"expression","normalized":"now-15m","date":"2023-07-17T11:57:17.808Z"},"to":{"type":"expression","normalized":"now","date":"2023-07-17T12:12:17.808Z"}}}},"state":"success","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute"}},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"rowDensity":"condensed","enableLineWrap":true,"enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[],"firstVisibleRowIndex":0,"columnWidths":{}}},"result":{"code":200,"value":{"records":[{"Team":"-","Affected entities":"1","Components":"1"}],"metadata":{"grail":{"canonicalQuery":"fetch events\n| filter event.provider == \"Dynatrace\"\n| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level == \"ENTITY\"\n| filter vulnerability.display_id == \"S-123\"\n| filter isNotNull(dt.entity.process_group)\n| fieldsAdd \"match\", alias:matcher\n| lookup \n\t[\n\t\tfetch events\n\t\t| filter event.provider == \"Dynatrace\"\n\t\t| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n\t\t| filter event.level == \"ENTITY\"\n\t\t| filter vulnerability.display_id == \"S-123\"\n\t\t| fields {timestamp, alias:maxTimestamp}, {\"match\", alias:matcher}\n\t\t| limit 1\n\t], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp == maxTimestamp\n| lookup \n\t[\n\t\tfetch dt.entity.process_group\n\t\t| fieldsAdd tags\n\t], sourceField:dt.entity.process_group, lookupField:id, fields:{tags}\n| parse toString(tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fieldsAdd if(isNotNull(Team), Team, else:\"-\"), alias:Team\n| fieldsRemove lookup.id, lookup.entity.name, Tags\n| summarize by:{Team}, {{collectDistinct(affected_entity.name), alias:`Entity names`}, {arrayRemoveNulls(collectDistinct(affected_entity.vulnerable_component.name)), alias:`Component names`}}\n| fields Team, {arraySize(`Entity names`), alias:`Affected entities`}, {arraySize(`Component names`), alias:Components}\n| sort {`Affected entities`, direction:\"descending\"}, {Components, direction:\"descending\"}","timezone":"America/New_York","query":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n| filter isNotNull(dt.entity.process_group)\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n//add ownership information\n| lookup [\nfetch dt.entity.process_group\n| fieldsAdd tags\n], sourceField:dt.entity.process_group, lookupField:id, fields:{tags}\n| parse toString(tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fieldsAdd Team=if(isNotNull(Team),Team,else:\"-\")\n| fieldsRemove lookup.id, lookup.entity.name, Tags\n// end of adding ownership info\n| summarize {\n`Entity names`=collectDistinct(affected_entity.name),\n`Component names`=arrayRemoveNulls(collectDistinct(affected_entity.vulnerable_component.name))\n}, by: {Team}\n| fields Team, `Affected entities`=arraySize(`Entity names`), `Components`=arraySize(`Component names`)\n| sort {`Affected entities`, direction:\"descending\"}, {`Components`, direction:\"descending\"}","scannedRecords":4729,"dqlVersion":"V1_0","scannedBytes":599241,"analysisTimeframe":{"start":"2023-08-08T00:41:47.634Z","end":"2023-08-08T00:56:47.634Z"},"locale":"","executionTimeMilliseconds":106,"notifications":[],"queryId":"73019796-5bfa-4b6d-a8ca-8a11ff11fcd8","sampled":false}},"types":[{"mappings":{"Team":{"type":"string"},"Affected entities":{"type":"long"},"Components":{"type":"long"}},"indexRange":[0,0]}]},"notifications":[],"dateTime":"2023-08-08T00:56:47.633Z","input":{"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n| filter isNotNull(dt.entity.process_group)\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n//add ownership information\n| lookup [\nfetch dt.entity.process_group\n| fieldsAdd tags\n], sourceField:dt.entity.process_group, lookupField:id, fields:{tags}\n| parse toString(tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fieldsAdd Team=if(isNotNull(Team),Team,else:\"-\")\n| fieldsRemove lookup.id, lookup.entity.name, Tags\n// end of adding ownership info\n| summarize {\n`Entity names`=collectDistinct(affected_entity.name),\n`Component names`=arrayRemoveNulls(collectDistinct(affected_entity.vulnerable_component.name))\n}, by: {Team}\n| fields Team, `Affected entities`=arraySize(`Entity names`), `Components`=arraySize(`Component names`)\n| sort {`Affected entities`, direction:\"descending\"}, {`Components`, direction:\"descending\"}","timeframe":{"from":"now-15m","to":"now","details":{"from":{"type":"expression","normalized":"now-15m","date":"2023-07-17T11:57:17.808Z"},"to":{"type":"expression","normalized":"now","date":"2023-07-17T12:12:17.808Z"}}}}},"visualization":"table"},"davisAnalysis":{"analyzerComponentState":{"resultState":{}}},"showInput":false,"height":263,"davisAnalytics":{"analyzerComponentState":{"resultState":{}}}},{"height":265,"id":"98b54c34-b142-4bde-93ea-58927bc0abfc","showInput":false,"showSettings":false,"showTitle":true,"title":"Software components","type":"dql","state":{"input":{"timeframe":{"from":"now-15m","to":"now","details":{"from":{"type":"expression","normalized":"now-15m","date":"2023-07-14T13:41:55.886Z"},"to":{"type":"expression","normalized":"now","date":"2023-07-14T13:56:55.886Z"}}},"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n| fieldsRemove lookup.maxTimestamp, lookup.matcher\n// end of filter for the latest snapshot\n//add ownership information\n| lookup [\nfetch dt.entity.process_group\n| fieldsAdd tags\n], sourceField:dt.entity.process_group, lookupField:id, fields:{tags}\n| parse toString(tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fieldsRemove lookup.id, lookup.entity.name, Tags\n// end of adding ownership info\n// summarize on component level\n| summarize\n{\n`# Affected entities`=arraySize(collectDistinct(affected_entity.id)),\n`Component name`=takeFirst(affected_entity.vulnerable_component.name),\n`Functions`=arrayRemoveNulls(collectDistinct(affected_entity.vulnerable_functions)),\n`# Function usages`=countIf(vulnerability.davis_assessment.vulnerable_function_status == \"IN_USE\"),\n`# Function not in use`=countIf(vulnerability.davis_assessment.vulnerable_function_status == \"NOT_IN_USE\"),\nTeams=arrayRemoveNulls(collectDistinct(Team))\n},by: {affected_entity.vulnerable_component.id, alias:`Component id`}\n| filterOut isNull(`Component id`)\n//add component information\n| lookup [\nfetch dt.entity.software_component\n| fieldsAdd softwareComponentFileName\n], sourceField:`Component id`, lookupField:id\n| fieldsRename File=lookup.softwareComponentFileName\n| fieldsRemove lookup.id, lookup.entity.name\n// end of adding ownership info\n| fields\ndt.entity.software_component=`Component id`,\n`Component name`,\nFile=if(isNotNull(File),File,else:\"-\"),\n`Vulnerable function`=if(arraySize(Functions)>0,Functions,else:\"-\"),\n`Entities with function in use`=if(`# Function usages`>0,`# Function usages`,else:if(`# Function not in use`>0,\"Not in use\",else:\"No data\")),\nTeams=if(arraySize(Teams)>0,Teams,else:\"-\")\n| sort {`Entities with function in use`, direction:\"descending\"}"},"visualizationSettings":{"chartSettings":{"gapPolicy":"connect","leftYAxisSettings":{"scale":"linear"},"legend":{"hidden":true},"valueRepresentation":"absolute"},"table":{"displayMode":"edit","firstVisibleRowIndex":0,"hiddenColumns":[["dataPond"],["rollupType"],["tenant"],["recordType"],["Affected entity names"]],"lineWrapIds":[["Vulnerable function"]],"enableLineWrap":true}},"showConsole":true,"state":"success","visualization":"table","result":{"code":200,"input":{"timeframe":{"from":"now-15m","to":"now","details":{"from":{"type":"expression","normalized":"now-15m","date":"2023-07-14T13:41:55.886Z"},"to":{"type":"expression","normalized":"now","date":"2023-07-14T13:56:55.886Z"}}},"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n| fieldsRemove lookup.maxTimestamp, lookup.matcher\n// end of filter for the latest snapshot\n//add ownership information\n| lookup [\nfetch dt.entity.process_group\n| fieldsAdd tags\n], sourceField:dt.entity.process_group, lookupField:id, fields:{tags}\n| parse toString(tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fieldsRemove lookup.id, lookup.entity.name, Tags\n// end of adding ownership info\n// summarize on component level\n| summarize\n{\n`# Affected entities`=arraySize(collectDistinct(affected_entity.id)),\n`Component name`=takeFirst(affected_entity.vulnerable_component.name),\n`Functions`=arrayRemoveNulls(collectDistinct(affected_entity.vulnerable_functions)),\n`# Function usages`=countIf(vulnerability.davis_assessment.vulnerable_function_status == \"IN_USE\"),\n`# Function not in use`=countIf(vulnerability.davis_assessment.vulnerable_function_status == \"NOT_IN_USE\"),\nTeams=arrayRemoveNulls(collectDistinct(Team))\n},by: {affected_entity.vulnerable_component.id, alias:`Component id`}\n| filterOut isNull(`Component id`)\n//add component information\n| lookup [\nfetch dt.entity.software_component\n| fieldsAdd softwareComponentFileName\n], sourceField:`Component id`, lookupField:id\n| fieldsRename File=lookup.softwareComponentFileName\n| fieldsRemove lookup.id, lookup.entity.name\n// end of adding ownership info\n| fields\ndt.entity.software_component=`Component id`,\n`Component name`,\nFile=if(isNotNull(File),File,else:\"-\"),\n`Vulnerable function`=if(arraySize(Functions)>0,Functions,else:\"-\"),\n`Entities with function in use`=if(`# Function usages`>0,`# Function usages`,else:if(`# Function not in use`>0,\"Not in use\",else:\"No data\")),\nTeams=if(arraySize(Teams)>0,Teams,else:\"-\")\n| sort {`Entities with function in use`, direction:\"descending\"}"},"dateTime":"2023-08-08T00:56:47.637Z","value":{"records":[{"dt.entity.software_component":"SOFTWARE_COMPONENT-E79B5C4EE33F6D8F","Component name":"org.apache.xmlbeans:xmlbeans:2.6.0-r1364789","File":"-","Vulnerable function":"-","Entities with function in use":"No data","Teams":"-"}],"metadata":{"grail":{"canonicalQuery":"fetch events\n| filter event.provider == \"Dynatrace\"\n| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level == \"ENTITY\"\n| filter vulnerability.display_id == \"S-123\"\n| fieldsAdd \"match\", alias:matcher\n| lookup \n\t[\n\t\tfetch events\n\t\t| filter event.provider == \"Dynatrace\"\n\t\t| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n\t\t| filter event.level == \"ENTITY\"\n\t\t| filter vulnerability.display_id == \"S-123\"\n\t\t| fields {timestamp, alias:maxTimestamp}, {\"match\", alias:matcher}\n\t\t| limit 1\n\t], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp == maxTimestamp\n| fieldsRemove lookup.maxTimestamp, lookup.matcher\n| lookup \n\t[\n\t\tfetch dt.entity.process_group\n\t\t| fieldsAdd tags\n\t], sourceField:dt.entity.process_group, lookupField:id, fields:{tags}\n| parse toString(tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fieldsRemove lookup.id, lookup.entity.name, Tags\n| summarize by:{affected_entity.vulnerable_component.id, alias:`Component id`}, {{arraySize(collectDistinct(affected_entity.id)), alias:`# Affected entities`}, {takeFirst(affected_entity.vulnerable_component.name), alias:`Component name`}, {arrayRemoveNulls(collectDistinct(affected_entity.vulnerable_functions)), alias:Functions}, {countIf(vulnerability.davis_assessment.vulnerable_function_status == \"IN_USE\"), alias:`# Function usages`}, {countIf(vulnerability.davis_assessment.vulnerable_function_status == \"NOT_IN_USE\"), alias:`# Function not in use`}, {arrayRemoveNulls(collectDistinct(Team)), alias:Teams}}\n| filter isFalseOrNull(isNull(`Component id`))\n| lookup \n\t[\n\t\tfetch dt.entity.software_component\n\t\t| fieldsAdd softwareComponentFileName\n\t], sourceField:`Component id`, lookupField:id\n| fieldsRename lookup.softwareComponentFileName, alias:File\n| fieldsRemove lookup.id, lookup.entity.name\n| fields {`Component id`, alias:dt.entity.software_component}, `Component name`, {if(isNotNull(File), File, else:\"-\"), alias:File}, {if(arraySize(Functions) > 0, Functions, else:\"-\"), alias:`Vulnerable function`}, {if(`# Function usages` > 0, `# Function usages`, else:if(`# Function not in use` > 0, \"Not in use\", else:\"No data\")), alias:`Entities with function in use`}, {if(arraySize(Teams) > 0, Teams, else:\"-\"), alias:Teams}\n| sort `Entities with function in use`, direction:\"descending\"","timezone":"America/New_York","query":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n| fieldsRemove lookup.maxTimestamp, lookup.matcher\n// end of filter for the latest snapshot\n//add ownership information\n| lookup [\nfetch dt.entity.process_group\n| fieldsAdd tags\n], sourceField:dt.entity.process_group, lookupField:id, fields:{tags}\n| parse toString(tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fieldsRemove lookup.id, lookup.entity.name, Tags\n// end of adding ownership info\n// summarize on component level\n| summarize\n{\n`# Affected entities`=arraySize(collectDistinct(affected_entity.id)),\n`Component name`=takeFirst(affected_entity.vulnerable_component.name),\n`Functions`=arrayRemoveNulls(collectDistinct(affected_entity.vulnerable_functions)),\n`# Function usages`=countIf(vulnerability.davis_assessment.vulnerable_function_status == \"IN_USE\"),\n`# Function not in use`=countIf(vulnerability.davis_assessment.vulnerable_function_status == \"NOT_IN_USE\"),\nTeams=arrayRemoveNulls(collectDistinct(Team))\n},by: {affected_entity.vulnerable_component.id, alias:`Component id`}\n| filterOut isNull(`Component id`)\n//add component information\n| lookup [\nfetch dt.entity.software_component\n| fieldsAdd softwareComponentFileName\n], sourceField:`Component id`, lookupField:id\n| fieldsRename File=lookup.softwareComponentFileName\n| fieldsRemove lookup.id, lookup.entity.name\n// end of adding ownership info\n| fields\ndt.entity.software_component=`Component id`,\n`Component name`,\nFile=if(isNotNull(File),File,else:\"-\"),\n`Vulnerable function`=if(arraySize(Functions)>0,Functions,else:\"-\"),\n`Entities with function in use`=if(`# Function usages`>0,`# Function usages`,else:if(`# Function not in use`>0,\"Not in use\",else:\"No data\")),\nTeams=if(arraySize(Teams)>0,Teams,else:\"-\")\n| sort {`Entities with function in use`, direction:\"descending\"}","scannedRecords":5135,"dqlVersion":"V1_0","scannedBytes":659730,"analysisTimeframe":{"start":"2023-08-08T00:41:47.638Z","end":"2023-08-08T00:56:47.638Z"},"locale":"","executionTimeMilliseconds":185,"notifications":[],"queryId":"4c952c68-a03e-44a4-a31e-9ee772a0690d","sampled":false}},"types":[{"mappings":{"dt.entity.software_component":{"type":"string"},"Component name":{"type":"string"},"File":{"type":"string"},"Vulnerable function":{"type":"string"},"Entities with function in use":{"type":"string"},"Teams":{"type":"string"}},"indexRange":[0,0]}]},"notifications":[]}},"davisAnalytics":{"analyzerComponentState":{"resultState":{}}},"davisAnalysis":{"analyzerComponentState":{"resultState":{}}}},{"height":433,"id":"bc802551-6d26-4990-a7a2-952bd4ca8b10","showInput":false,"showSettings":false,"showTitle":true,"title":"Affected entities Davis assessments","type":"dql","state":{"input":{"timeframe":{"from":"now-15m","to":"now","details":{"from":{"type":"expression","normalized":"now-15m","date":"2023-07-14T13:41:49.304Z"},"to":{"type":"expression","normalized":"now","date":"2023-07-14T13:56:49.304Z"}}},"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n| fields\naffected_entity.id,\n`Affected entity name`=affected_entity.name,\n`Function usage`=if(vulnerability.davis_assessment.vulnerable_function_status==\"IN_USE\",concat(\"❗\",\"In use\"),else:if(vulnerability.davis_assessment.vulnerable_function_status==\"NOT_IN_USE\",\"Not in use\", else:\"No data\")),\nf=if(vulnerability.davis_assessment.vulnerable_function_status==\"IN_USE\",10,else:0),\n`Internet exposure`=if(vulnerability.davis_assessment.exposure_status==\"PUBLIC_NETWORK\",concat(\"❗\",\"Public\"),else:\"Not exposed\"),\ni=if(vulnerability.davis_assessment.exposure_status==\"PUBLIC_NETWORK\",5,else:0),\n`# Reachable data assets`=related_entities.databases.count,\nr=if(related_entities.databases.count>0,1,else:0),\n`Data assets status`=if(vulnerability.davis_assessment.data_assets_status==\"REACHABLE\",concat(\"❗\",\" In reach\"), else:\"Not in reach\"),\n`Exploit`=if(vulnerability.davis_assessment.exploit_status==\"AVAILABLE\",concat(\"❗\",\"Exists\"),else:\"None\"),\ne=if(vulnerability.davis_assessment.exploit_status==\"AVAILABLE\",3,else:0),\n`# Affected processes`=arraySize(affected_entity.affected_processes.ids),\ndt.entity.process_group=dt.entity.process_group,\ndt.entity.host=dt.entity.host,\ndt.entity.kubernetes_node=dt.entity.kubernetes_node\n| fieldsAdd\norder=f+i+r+e\n| sort {order,direction:\"descending\"}, {`# Reachable data assets`, direction:\"descending\"}, {`# Affected processes`, direction:\"descending\"}\n| fieldsRemove affected_entity.id, `# Reachable data assets`, f,i,r,e, order\n//add ownership information\n| lookup [\nfetch dt.entity.process_group\n| fieldsAdd tags\n], sourceField:dt.entity.process_group, lookupField:id\n| fieldsRename Tags=lookup.tags\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fieldsAdd Team\n| fieldsRemove lookup.id, lookup.entity.name, Tags\n| fields \ndt.source_entity=if(isNotNull(dt.entity.process_group),dt.entity.process_group, else:if(isNotNull(dt.entity.host), dt.entity.host, else:dt.entity.kubernetes_node)),\n`Affected entity name`,\nTeam=if(isNotNull(Team),Team,else:\"-\"), `Function usage`, `Internet exposure`, `Data assets status`, Exploit, `Affected processes`=`# Affected processes`"},"visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"table":{"displayMode":"edit","firstVisibleRowIndex":0,"lineWrapIds":[],"enableLineWrap":true}},"showConsole":true,"state":"success","visualization":"table","result":{"code":200,"input":{"timeframe":{"from":"now-15m","to":"now","details":{"from":{"type":"expression","normalized":"now-15m","date":"2023-07-14T13:41:49.304Z"},"to":{"type":"expression","normalized":"now","date":"2023-07-14T13:56:49.304Z"}}},"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n| fields\naffected_entity.id,\n`Affected entity name`=affected_entity.name,\n`Function usage`=if(vulnerability.davis_assessment.vulnerable_function_status==\"IN_USE\",concat(\"❗\",\"In use\"),else:if(vulnerability.davis_assessment.vulnerable_function_status==\"NOT_IN_USE\",\"Not in use\", else:\"No data\")),\nf=if(vulnerability.davis_assessment.vulnerable_function_status==\"IN_USE\",10,else:0),\n`Internet exposure`=if(vulnerability.davis_assessment.exposure_status==\"PUBLIC_NETWORK\",concat(\"❗\",\"Public\"),else:\"Not exposed\"),\ni=if(vulnerability.davis_assessment.exposure_status==\"PUBLIC_NETWORK\",5,else:0),\n`# Reachable data assets`=related_entities.databases.count,\nr=if(related_entities.databases.count>0,1,else:0),\n`Data assets status`=if(vulnerability.davis_assessment.data_assets_status==\"REACHABLE\",concat(\"❗\",\" In reach\"), else:\"Not in reach\"),\n`Exploit`=if(vulnerability.davis_assessment.exploit_status==\"AVAILABLE\",concat(\"❗\",\"Exists\"),else:\"None\"),\ne=if(vulnerability.davis_assessment.exploit_status==\"AVAILABLE\",3,else:0),\n`# Affected processes`=arraySize(affected_entity.affected_processes.ids),\ndt.entity.process_group=dt.entity.process_group,\ndt.entity.host=dt.entity.host,\ndt.entity.kubernetes_node=dt.entity.kubernetes_node\n| fieldsAdd\norder=f+i+r+e\n| sort {order,direction:\"descending\"}, {`# Reachable data assets`, direction:\"descending\"}, {`# Affected processes`, direction:\"descending\"}\n| fieldsRemove affected_entity.id, `# Reachable data assets`, f,i,r,e, order\n//add ownership information\n| lookup [\nfetch dt.entity.process_group\n| fieldsAdd tags\n], sourceField:dt.entity.process_group, lookupField:id\n| fieldsRename Tags=lookup.tags\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fieldsAdd Team\n| fieldsRemove lookup.id, lookup.entity.name, Tags\n| fields \ndt.source_entity=if(isNotNull(dt.entity.process_group),dt.entity.process_group, else:if(isNotNull(dt.entity.host), dt.entity.host, else:dt.entity.kubernetes_node)),\n`Affected entity name`,\nTeam=if(isNotNull(Team),Team,else:\"-\"), `Function usage`, `Internet exposure`, `Data assets status`, Exploit, `Affected processes`=`# Affected processes`"},"dateTime":"2023-08-08T00:56:47.640Z","notifications":[],"value":{"records":[{"dt.source_entity":"PROCESS_GROUP-FD8BFBA6A1478950","Affected entity name":"tomcat easytravel-frontend-*","Team":"-","Function usage":"No data","Internet exposure":"❗Public","Data assets status":"Not in reach","Exploit":"None","Affected processes":"2"}],"metadata":{"grail":{"canonicalQuery":"fetch events\n| filter event.provider == \"Dynatrace\"\n| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level == \"ENTITY\"\n| filter vulnerability.display_id == \"S-123\"\n| fieldsAdd \"match\", alias:matcher\n| lookup \n\t[\n\t\tfetch events\n\t\t| filter event.provider == \"Dynatrace\"\n\t\t| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n\t\t| filter event.level == \"ENTITY\"\n\t\t| filter vulnerability.display_id == \"S-123\"\n\t\t| fields {timestamp, alias:maxTimestamp}, {\"match\", alias:matcher}\n\t\t| limit 1\n\t], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp == maxTimestamp\n| fields affected_entity.id, {affected_entity.name, alias:`Affected entity name`}, {if(vulnerability.davis_assessment.vulnerable_function_status == \"IN_USE\", concat(\"❗\", \"In use\"), else:if(vulnerability.davis_assessment.vulnerable_function_status == \"NOT_IN_USE\", \"Not in use\", else:\"No data\")), alias:`Function usage`}, {if(vulnerability.davis_assessment.vulnerable_function_status == \"IN_USE\", 10, else:0), alias:f}, {if(vulnerability.davis_assessment.exposure_status == \"PUBLIC_NETWORK\", concat(\"❗\", \"Public\"), else:\"Not exposed\"), alias:`Internet exposure`}, {if(vulnerability.davis_assessment.exposure_status == \"PUBLIC_NETWORK\", 5, else:0), alias:i}, {related_entities.databases.count, alias:`# Reachable data assets`}, {if(related_entities.databases.count > 0, 1, else:0), alias:r}, {if(vulnerability.davis_assessment.data_assets_status == \"REACHABLE\", concat(\"❗\", \" In reach\"), else:\"Not in reach\"), alias:`Data assets status`}, {if(vulnerability.davis_assessment.exploit_status == \"AVAILABLE\", concat(\"❗\", \"Exists\"), else:\"None\"), alias:Exploit}, {if(vulnerability.davis_assessment.exploit_status == \"AVAILABLE\", 3, else:0), alias:e}, {arraySize(affected_entity.affected_processes.ids), alias:`# Affected processes`}, {dt.entity.process_group, alias:dt.entity.process_group}, {dt.entity.host, alias:dt.entity.host}, {dt.entity.kubernetes_node, alias:dt.entity.kubernetes_node}\n| fieldsAdd f + i + r + e, alias:order\n| sort {order, direction:\"descending\"}, {`# Reachable data assets`, direction:\"descending\"}, {`# Affected processes`, direction:\"descending\"}\n| fieldsRemove affected_entity.id, `# Reachable data assets`, f, i, r, e, order\n| lookup \n\t[\n\t\tfetch dt.entity.process_group\n\t\t| fieldsAdd tags\n\t], sourceField:dt.entity.process_group, lookupField:id\n| fieldsRename lookup.tags, alias:Tags\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fieldsAdd Team\n| fieldsRemove lookup.id, lookup.entity.name, Tags\n| fields {if(isNotNull(dt.entity.process_group), dt.entity.process_group, else:if(isNotNull(dt.entity.host), dt.entity.host, else:dt.entity.kubernetes_node)), alias:dt.source_entity}, `Affected entity name`, {if(isNotNull(Team), Team, else:\"-\"), alias:Team}, `Function usage`, `Internet exposure`, `Data assets status`, Exploit, {`# Affected processes`, alias:`Affected processes`}","timezone":"America/New_York","query":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n| fields\naffected_entity.id,\n`Affected entity name`=affected_entity.name,\n`Function usage`=if(vulnerability.davis_assessment.vulnerable_function_status==\"IN_USE\",concat(\"❗\",\"In use\"),else:if(vulnerability.davis_assessment.vulnerable_function_status==\"NOT_IN_USE\",\"Not in use\", else:\"No data\")),\nf=if(vulnerability.davis_assessment.vulnerable_function_status==\"IN_USE\",10,else:0),\n`Internet exposure`=if(vulnerability.davis_assessment.exposure_status==\"PUBLIC_NETWORK\",concat(\"❗\",\"Public\"),else:\"Not exposed\"),\ni=if(vulnerability.davis_assessment.exposure_status==\"PUBLIC_NETWORK\",5,else:0),\n`# Reachable data assets`=related_entities.databases.count,\nr=if(related_entities.databases.count>0,1,else:0),\n`Data assets status`=if(vulnerability.davis_assessment.data_assets_status==\"REACHABLE\",concat(\"❗\",\" In reach\"), else:\"Not in reach\"),\n`Exploit`=if(vulnerability.davis_assessment.exploit_status==\"AVAILABLE\",concat(\"❗\",\"Exists\"),else:\"None\"),\ne=if(vulnerability.davis_assessment.exploit_status==\"AVAILABLE\",3,else:0),\n`# Affected processes`=arraySize(affected_entity.affected_processes.ids),\ndt.entity.process_group=dt.entity.process_group,\ndt.entity.host=dt.entity.host,\ndt.entity.kubernetes_node=dt.entity.kubernetes_node\n| fieldsAdd\norder=f+i+r+e\n| sort {order,direction:\"descending\"}, {`# Reachable data assets`, direction:\"descending\"}, {`# Affected processes`, direction:\"descending\"}\n| fieldsRemove affected_entity.id, `# Reachable data assets`, f,i,r,e, order\n//add ownership information\n| lookup [\nfetch dt.entity.process_group\n| fieldsAdd tags\n], sourceField:dt.entity.process_group, lookupField:id\n| fieldsRename Tags=lookup.tags\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fieldsAdd Team\n| fieldsRemove lookup.id, lookup.entity.name, Tags\n| fields \ndt.source_entity=if(isNotNull(dt.entity.process_group),dt.entity.process_group, else:if(isNotNull(dt.entity.host), dt.entity.host, else:dt.entity.kubernetes_node)),\n`Affected entity name`,\nTeam=if(isNotNull(Team),Team,else:\"-\"), `Function usage`, `Internet exposure`, `Data assets status`, Exploit, `Affected processes`=`# Affected processes`","scannedRecords":4729,"dqlVersion":"V1_0","scannedBytes":599241,"analysisTimeframe":{"start":"2023-08-08T00:41:47.641Z","end":"2023-08-08T00:56:47.641Z"},"locale":"","executionTimeMilliseconds":236,"notifications":[],"queryId":"629d9546-0446-46da-ab58-e54c12394e8d","sampled":false}},"types":[{"mappings":{"dt.source_entity":{"type":"string"},"Affected entity name":{"type":"string"},"Team":{"type":"string"},"Function usage":{"type":"string"},"Internet exposure":{"type":"string"},"Data assets status":{"type":"string"},"Exploit":{"type":"string"},"Affected processes":{"type":"long"}},"indexRange":[0,0]}]}}},"davisAnalytics":{"analyzerComponentState":{"resultState":{}}},"davisAnalysis":{"analyzerComponentState":{"resultState":{}}}},{"id":"ec3194b9-5e36-4019-93ab-1850579d7000","type":"markdown","markdown":"### Related entities\n\nThose are entities indirectly affected due to a connection to one of the affected entities."},{"height":400,"id":"0c20a2ed-d7a7-40f1-86e1-9cce0ddf8f28","showInput":false,"showSettings":false,"showTitle":true,"title":"Related hosts","type":"dql","state":{"input":{"timeframe":{"from":"now-15m","to":"now","details":{"from":{"type":"expression","normalized":"now-15m","date":"2023-07-14T13:41:42.003Z"},"to":{"type":"expression","normalized":"now","date":"2023-07-14T13:56:42.003Z"}}},"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n| filter related_entities.hosts.count>0\n| expand entity_id=related_entities.hosts.ids\n| summarize count(), by: {entity_id}\n//add ownership information\n| lookup [\nfetch dt.entity.host\n| fieldsAdd tags, process_groups=arraySize(runs[dt.entity.process_group])\n], sourceField:entity_id, lookupField:id\n| fieldsRename Tags=lookup.tags, `Running process groups`=lookup.process_groups\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fields \ndt.entity.host=entity_id, \n`Host name`=lookup.entity.name, \nTeam=if(isNotNull(Team),Team,else:\"-\"), \n`Running process groups`=if(`Running process groups`>=100,\">100\",else:coalesce(toLong(`Running process groups`), 0))\n| sort `Running process groups`, direction:\"descending\""},"visualizationSettings":{"chartSettings":{"gapPolicy":"connect","leftYAxisSettings":{"scale":"linear"},"legend":{"hidden":true},"valueRepresentation":"absolute"},"table":{"displayMode":"edit","firstVisibleRowIndex":0,"hiddenColumns":[["dataPond"],["rollupType"],["tenant"],["recordType"],["Affected entity names"]],"lineWrapIds":[["Related hosts"]],"enableLineWrap":true}},"showConsole":true,"state":"success","visualization":"table","result":{"code":200,"input":{"timeframe":{"from":"now-15m","to":"now","details":{"from":{"type":"expression","normalized":"now-15m","date":"2023-07-14T13:41:42.003Z"},"to":{"type":"expression","normalized":"now","date":"2023-07-14T13:56:42.003Z"}}},"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n| filter related_entities.hosts.count>0\n| expand entity_id=related_entities.hosts.ids\n| summarize count(), by: {entity_id}\n//add ownership information\n| lookup [\nfetch dt.entity.host\n| fieldsAdd tags, process_groups=arraySize(runs[dt.entity.process_group])\n], sourceField:entity_id, lookupField:id\n| fieldsRename Tags=lookup.tags, `Running process groups`=lookup.process_groups\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fields \ndt.entity.host=entity_id, \n`Host name`=lookup.entity.name, \nTeam=if(isNotNull(Team),Team,else:\"-\"), \n`Running process groups`=if(`Running process groups`>=100,\">100\",else:coalesce(toLong(`Running process groups`), 0))\n| sort `Running process groups`, direction:\"descending\""},"dateTime":"2023-08-08T00:56:47.644Z","value":{"records":[{"dt.entity.host":"HOST-C3B506526E6BCA91","Host name":"gke-ostroskiworkshop-default-pool-183457ed-9m6r.c.sales-engineering-noram.internal","Team":"-","Running process groups":"52"},{"dt.entity.host":"HOST-AC336C7F2616AE6F","Host name":"gke-ostroskiworkshop-default-pool-183457ed-w0ms.c.sales-engineering-noram.internal","Team":"-","Running process groups":"42"}],"metadata":{"grail":{"canonicalQuery":"fetch events\n| filter event.provider == \"Dynatrace\"\n| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level == \"ENTITY\"\n| filter vulnerability.display_id == \"S-123\"\n| fieldsAdd \"match\", alias:matcher\n| lookup \n\t[\n\t\tfetch events\n\t\t| filter event.provider == \"Dynatrace\"\n\t\t| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n\t\t| filter event.level == \"ENTITY\"\n\t\t| filter vulnerability.display_id == \"S-123\"\n\t\t| fields {timestamp, alias:maxTimestamp}, {\"match\", alias:matcher}\n\t\t| limit 1\n\t], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp == maxTimestamp\n| filter related_entities.hosts.count > 0\n| expand related_entities.hosts.ids, alias:entity_id\n| summarize by:{entity_id}, count()\n| lookup \n\t[\n\t\tfetch dt.entity.host\n\t\t| fieldsAdd tags, {arraySize(runs[dt.entity.process_group]), alias:process_groups}\n\t], sourceField:entity_id, lookupField:id\n| fieldsRename {lookup.tags, alias:Tags}, {lookup.process_groups, alias:`Running process groups`}\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fields {entity_id, alias:dt.entity.host}, {lookup.entity.name, alias:`Host name`}, {if(isNotNull(Team), Team, else:\"-\"), alias:Team}, {if(`Running process groups` >= 100, \">100\", else:coalesce(toLong(`Running process groups`), 0)), alias:`Running process groups`}\n| sort `Running process groups`, direction:\"descending\"","timezone":"America/New_York","query":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n| filter related_entities.hosts.count>0\n| expand entity_id=related_entities.hosts.ids\n| summarize count(), by: {entity_id}\n//add ownership information\n| lookup [\nfetch dt.entity.host\n| fieldsAdd tags, process_groups=arraySize(runs[dt.entity.process_group])\n], sourceField:entity_id, lookupField:id\n| fieldsRename Tags=lookup.tags, `Running process groups`=lookup.process_groups\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fields \ndt.entity.host=entity_id, \n`Host name`=lookup.entity.name, \nTeam=if(isNotNull(Team),Team,else:\"-\"), \n`Running process groups`=if(`Running process groups`>=100,\">100\",else:coalesce(toLong(`Running process groups`), 0))\n| sort `Running process groups`, direction:\"descending\"","scannedRecords":4639,"dqlVersion":"V1_0","scannedBytes":600689,"analysisTimeframe":{"start":"2023-08-08T00:41:47.645Z","end":"2023-08-08T00:56:47.645Z"},"locale":"","executionTimeMilliseconds":235,"notifications":[],"queryId":"372667bf-1241-4275-b36a-f33fcdb1b0de","sampled":false}},"types":[{"mappings":{"dt.entity.host":{"type":"string"},"Host name":{"type":"string"},"Team":{"type":"string"},"Running process groups":{"type":"long"}},"indexRange":[0,1]}]},"notifications":[]}},"davisAnalytics":{"analyzerComponentState":{"resultState":{}}},"davisAnalysis":{"analyzerComponentState":{"resultState":{}}}},{"height":266,"id":"bc0c637c-d09c-46c4-8b93-43c39fd6d501","showInput":false,"showSettings":false,"showTitle":true,"title":"Related services","type":"dql","state":{"input":{"timeframe":{"from":"now-15m","to":"now","details":{"from":{"type":"expression","normalized":"now-15m","date":"2023-07-14T13:41:35.226Z"},"to":{"type":"expression","normalized":"now","date":"2023-07-14T13:56:35.226Z"}}},"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n| filter related_entities.services.count>0\n| expand entity_id=related_entities.services.ids\n| summarize count(), by: {entity_id}\n//add ownership information\n| lookup [\nfetch dt.entity.service\n| fieldsAdd tags, calling_services=arraySize(called_by[dt.entity.service])\n], sourceField:entity_id, lookupField:id\n| fieldsRename Tags=lookup.tags, `Calling services`=lookup.calling_services\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fields \ndt.entity.service=entity_id, \nService=lookup.entity.name, \nTeam=if(isNotNull(Team),Team,else:\"-\"), \n`Calling services`=if(`Calling services`>=100,\">100\",else:coalesce(toLong(`Calling services`), 0))\n| sort `Calling services`, direction:\"descending\""},"visualizationSettings":{"chartSettings":{"gapPolicy":"connect","leftYAxisSettings":{"scale":"linear"},"legend":{"hidden":true},"valueRepresentation":"absolute"},"table":{"displayMode":"edit","firstVisibleRowIndex":0,"hiddenColumns":[["dataPond"],["rollupType"],["tenant"],["recordType"],["Affected entity names"]],"lineWrapIds":[["Related services"]],"enableLineWrap":true}},"showConsole":true,"state":"success","visualization":"table","result":{"code":200,"input":{"timeframe":{"from":"now-15m","to":"now","details":{"from":{"type":"expression","normalized":"now-15m","date":"2023-07-14T13:41:35.226Z"},"to":{"type":"expression","normalized":"now","date":"2023-07-14T13:56:35.226Z"}}},"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n| filter related_entities.services.count>0\n| expand entity_id=related_entities.services.ids\n| summarize count(), by: {entity_id}\n//add ownership information\n| lookup [\nfetch dt.entity.service\n| fieldsAdd tags, calling_services=arraySize(called_by[dt.entity.service])\n], sourceField:entity_id, lookupField:id\n| fieldsRename Tags=lookup.tags, `Calling services`=lookup.calling_services\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fields \ndt.entity.service=entity_id, \nService=lookup.entity.name, \nTeam=if(isNotNull(Team),Team,else:\"-\"), \n`Calling services`=if(`Calling services`>=100,\">100\",else:coalesce(toLong(`Calling services`), 0))\n| sort `Calling services`, direction:\"descending\""},"dateTime":"2023-08-08T00:56:47.648Z","value":{"records":[{"dt.entity.service":"SERVICE-0139EC786D42D330","Service":"easyTravel Customer Frontend","Team":"-","Calling services":"0"},{"dt.entity.service":"SERVICE-B74507778DBF578B","Service":"Requests executed in background threads of tomcat easytravel-frontend-*","Team":"-","Calling services":"0"}],"metadata":{"grail":{"canonicalQuery":"fetch events\n| filter event.provider == \"Dynatrace\"\n| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level == \"ENTITY\"\n| filter vulnerability.display_id == \"S-123\"\n| fieldsAdd \"match\", alias:matcher\n| lookup \n\t[\n\t\tfetch events\n\t\t| filter event.provider == \"Dynatrace\"\n\t\t| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n\t\t| filter event.level == \"ENTITY\"\n\t\t| filter vulnerability.display_id == \"S-123\"\n\t\t| fields {timestamp, alias:maxTimestamp}, {\"match\", alias:matcher}\n\t\t| limit 1\n\t], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp == maxTimestamp\n| filter related_entities.services.count > 0\n| expand related_entities.services.ids, alias:entity_id\n| summarize by:{entity_id}, count()\n| lookup \n\t[\n\t\tfetch dt.entity.service\n\t\t| fieldsAdd tags, {arraySize(called_by[dt.entity.service]), alias:calling_services}\n\t], sourceField:entity_id, lookupField:id\n| fieldsRename {lookup.tags, alias:Tags}, {lookup.calling_services, alias:`Calling services`}\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fields {entity_id, alias:dt.entity.service}, {lookup.entity.name, alias:Service}, {if(isNotNull(Team), Team, else:\"-\"), alias:Team}, {if(`Calling services` >= 100, \">100\", else:coalesce(toLong(`Calling services`), 0)), alias:`Calling services`}\n| sort `Calling services`, direction:\"descending\"","timezone":"America/New_York","query":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n| filter related_entities.services.count>0\n| expand entity_id=related_entities.services.ids\n| summarize count(), by: {entity_id}\n//add ownership information\n| lookup [\nfetch dt.entity.service\n| fieldsAdd tags, calling_services=arraySize(called_by[dt.entity.service])\n], sourceField:entity_id, lookupField:id\n| fieldsRename Tags=lookup.tags, `Calling services`=lookup.calling_services\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fields \ndt.entity.service=entity_id, \nService=lookup.entity.name, \nTeam=if(isNotNull(Team),Team,else:\"-\"), \n`Calling services`=if(`Calling services`>=100,\">100\",else:coalesce(toLong(`Calling services`), 0))\n| sort `Calling services`, direction:\"descending\"","scannedRecords":4669,"dqlVersion":"V1_0","scannedBytes":593721,"analysisTimeframe":{"start":"2023-08-08T00:41:47.649Z","end":"2023-08-08T00:56:47.649Z"},"locale":"","executionTimeMilliseconds":155,"notifications":[],"queryId":"d4f65e3d-4080-498b-b74c-e9c85d018e69","sampled":false}},"types":[{"mappings":{"dt.entity.service":{"type":"string"},"Service":{"type":"string"},"Team":{"type":"string"},"Calling services":{"type":"long"}},"indexRange":[0,1]}]},"notifications":[]}},"davisAnalytics":{"analyzerComponentState":{"resultState":{}}},"davisAnalysis":{"analyzerComponentState":{"resultState":{}}}},{"height":222,"id":"2b7b63e7-6b72-4c34-8681-f0ca62c6d107","showInput":false,"showSettings":false,"showTitle":true,"title":"Related databases","type":"dql","state":{"input":{"timeframe":{"from":"now-15m","to":"now","details":{"from":{"type":"expression","normalized":"now-15m","date":"2023-07-14T13:41:28.232Z"},"to":{"type":"expression","normalized":"now","date":"2023-07-14T13:56:28.232Z"}}},"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n| filter related_entities.databases.count>0\n| expand entity_id=related_entities.databases.ids\n| summarize count(), by: {entity_id}\n//add ownership information\n| lookup [\nfetch dt.entity.service\n| fieldsAdd tags, called_by_services=arraySize(called_by[dt.entity.service])\n], sourceField:entity_id, lookupField:id\n| fieldsRename Tags=lookup.tags, `Calling services`=lookup.called_by_services\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fields \ndt.entity.database=entity_id, \nDatabase=lookup.entity.name, \nTeam=if(isNotNull(Team),Team,else:\"-\"), \n`Calling services`=if(`Calling services`>=100,\">100\",else:coalesce(toLong(`Calling services`), 0))\n| sort `Calling services`, direction:\"descending\""},"visualizationSettings":{"chartSettings":{"gapPolicy":"connect","leftYAxisSettings":{"scale":"linear"},"legend":{"hidden":true},"valueRepresentation":"absolute"},"table":{"displayMode":"edit","firstVisibleRowIndex":0,"hiddenColumns":[["dataPond"],["rollupType"],["tenant"],["recordType"],["Affected entity names"]],"lineWrapIds":[["Related databases"]],"enableLineWrap":true}},"showConsole":true,"state":"success","visualization":"table","result":{"code":200,"input":{"timeframe":{"from":"now-15m","to":"now","details":{"from":{"type":"expression","normalized":"now-15m","date":"2023-07-14T13:41:28.232Z"},"to":{"type":"expression","normalized":"now","date":"2023-07-14T13:56:28.232Z"}}},"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n| filter related_entities.databases.count>0\n| expand entity_id=related_entities.databases.ids\n| summarize count(), by: {entity_id}\n//add ownership information\n| lookup [\nfetch dt.entity.service\n| fieldsAdd tags, called_by_services=arraySize(called_by[dt.entity.service])\n], sourceField:entity_id, lookupField:id\n| fieldsRename Tags=lookup.tags, `Calling services`=lookup.called_by_services\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fields \ndt.entity.database=entity_id, \nDatabase=lookup.entity.name, \nTeam=if(isNotNull(Team),Team,else:\"-\"), \n`Calling services`=if(`Calling services`>=100,\">100\",else:coalesce(toLong(`Calling services`), 0))\n| sort `Calling services`, direction:\"descending\""},"dateTime":"2023-08-08T00:56:47.652Z","value":{"records":[],"metadata":{"grail":{"canonicalQuery":"fetch events\n| filter event.provider == \"Dynatrace\"\n| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level == \"ENTITY\"\n| filter vulnerability.display_id == \"S-123\"\n| fieldsAdd \"match\", alias:matcher\n| lookup \n\t[\n\t\tfetch events\n\t\t| filter event.provider == \"Dynatrace\"\n\t\t| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n\t\t| filter event.level == \"ENTITY\"\n\t\t| filter vulnerability.display_id == \"S-123\"\n\t\t| fields {timestamp, alias:maxTimestamp}, {\"match\", alias:matcher}\n\t\t| limit 1\n\t], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp == maxTimestamp\n| filter related_entities.databases.count > 0\n| expand related_entities.databases.ids, alias:entity_id\n| summarize by:{entity_id}, count()\n| lookup \n\t[\n\t\tfetch dt.entity.service\n\t\t| fieldsAdd tags, {arraySize(called_by[dt.entity.service]), alias:called_by_services}\n\t], sourceField:entity_id, lookupField:id\n| fieldsRename {lookup.tags, alias:Tags}, {lookup.called_by_services, alias:`Calling services`}\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fields {entity_id, alias:dt.entity.database}, {lookup.entity.name, alias:Database}, {if(isNotNull(Team), Team, else:\"-\"), alias:Team}, {if(`Calling services` >= 100, \">100\", else:coalesce(toLong(`Calling services`), 0)), alias:`Calling services`}\n| sort `Calling services`, direction:\"descending\"","timezone":"America/New_York","query":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n| filter related_entities.databases.count>0\n| expand entity_id=related_entities.databases.ids\n| summarize count(), by: {entity_id}\n//add ownership information\n| lookup [\nfetch dt.entity.service\n| fieldsAdd tags, called_by_services=arraySize(called_by[dt.entity.service])\n], sourceField:entity_id, lookupField:id\n| fieldsRename Tags=lookup.tags, `Calling services`=lookup.called_by_services\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fields \ndt.entity.database=entity_id, \nDatabase=lookup.entity.name, \nTeam=if(isNotNull(Team),Team,else:\"-\"), \n`Calling services`=if(`Calling services`>=100,\">100\",else:coalesce(toLong(`Calling services`), 0))\n| sort `Calling services`, direction:\"descending\"","scannedRecords":4669,"dqlVersion":"V1_0","scannedBytes":588370,"analysisTimeframe":{"start":"2023-08-08T00:41:47.653Z","end":"2023-08-08T00:56:47.653Z"},"locale":"","executionTimeMilliseconds":187,"notifications":[],"queryId":"0d388ab7-613a-468e-b8ee-7eb91812f224","sampled":false}},"types":[]},"notifications":[]}},"davisAnalytics":{"analyzerComponentState":{"resultState":{}}},"davisAnalysis":{"analyzerComponentState":{"resultState":{}}}},{"height":328,"id":"f8fbcd43-d012-4b1c-b2ac-72537ef5dbbd","showInput":false,"showSettings":false,"showTitle":true,"title":"Related applications","type":"dql","state":{"input":{"timeframe":{"from":"now-15m","to":"now"},"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n| fieldsRemove lookup.maxTimestamp, lookup.matcher\n// end of filter for the latest snapshot\n| filter related_entities.applications.count>0\n| expand entity_id=related_entities.applications.ids\n| summarize count(), by: {entity_id}\n//add ownership information\n| lookup [\nfetch dt.entity.application\n| fieldsAdd tags, called_services=arraySize(calls[dt.entity.service])\n], sourceField:entity_id, lookupField:id\n| fieldsRename Tags=lookup.tags, `Called services`=lookup.called_services\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fields \ndt.entity.application=entity_id, \nApplication=lookup.entity.name, \nTeam=if(isNotNull(Team),Team,else:\"-\"), \n`Called services`=if(`Called services`>=100,\">100\",else:coalesce(toLong(`Called services`), 0))\n| sort `Called services`, direction:\"descending\""},"visualizationSettings":{"chartSettings":{"gapPolicy":"connect","leftYAxisSettings":{"scale":"linear"},"legend":{"hidden":true},"valueRepresentation":"absolute"},"table":{"displayMode":"edit","firstVisibleRowIndex":0,"hiddenColumns":[["dataPond"],["rollupType"],["tenant"],["recordType"],["Affected entity names"]],"lineWrapIds":[],"enableLineWrap":true}},"showConsole":true,"state":"success","visualization":"table","result":{"code":200,"value":{"records":[],"metadata":{"grail":{"canonicalQuery":"fetch events\n| filter event.provider == \"Dynatrace\"\n| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level == \"ENTITY\"\n| filter vulnerability.display_id == \"S-123\"\n| fieldsAdd \"match\", alias:matcher\n| lookup \n\t[\n\t\tfetch events\n\t\t| filter event.provider == \"Dynatrace\"\n\t\t| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n\t\t| filter event.level == \"ENTITY\"\n\t\t| filter vulnerability.display_id == \"S-123\"\n\t\t| fields {timestamp, alias:maxTimestamp}, {\"match\", alias:matcher}\n\t\t| limit 1\n\t], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp == maxTimestamp\n| fieldsRemove lookup.maxTimestamp, lookup.matcher\n| filter related_entities.applications.count > 0\n| expand related_entities.applications.ids, alias:entity_id\n| summarize by:{entity_id}, count()\n| lookup \n\t[\n\t\tfetch dt.entity.application\n\t\t| fieldsAdd tags, {arraySize(calls[dt.entity.service]), alias:called_services}\n\t], sourceField:entity_id, lookupField:id\n| fieldsRename {lookup.tags, alias:Tags}, {lookup.called_services, alias:`Called services`}\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fields {entity_id, alias:dt.entity.application}, {lookup.entity.name, alias:Application}, {if(isNotNull(Team), Team, else:\"-\"), alias:Team}, {if(`Called services` >= 100, \">100\", else:coalesce(toLong(`Called services`), 0)), alias:`Called services`}\n| sort `Called services`, direction:\"descending\"","timezone":"America/New_York","query":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n| fieldsRemove lookup.maxTimestamp, lookup.matcher\n// end of filter for the latest snapshot\n| filter related_entities.applications.count>0\n| expand entity_id=related_entities.applications.ids\n| summarize count(), by: {entity_id}\n//add ownership information\n| lookup [\nfetch dt.entity.application\n| fieldsAdd tags, called_services=arraySize(calls[dt.entity.service])\n], sourceField:entity_id, lookupField:id\n| fieldsRename Tags=lookup.tags, `Called services`=lookup.called_services\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fields \ndt.entity.application=entity_id, \nApplication=lookup.entity.name, \nTeam=if(isNotNull(Team),Team,else:\"-\"), \n`Called services`=if(`Called services`>=100,\">100\",else:coalesce(toLong(`Called services`), 0))\n| sort `Called services`, direction:\"descending\"","scannedRecords":4637,"dqlVersion":"V1_0","scannedBytes":582034,"analysisTimeframe":{"start":"2023-08-08T00:41:47.657Z","end":"2023-08-08T00:56:47.657Z"},"locale":"","executionTimeMilliseconds":185,"notifications":[],"queryId":"3177bfb6-0a67-4189-a192-d37042749ff8","sampled":false}},"types":[]},"dateTime":"2023-08-08T00:56:47.656Z","input":{"timeframe":{"from":"now-15m","to":"now"},"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n| fieldsRemove lookup.maxTimestamp, lookup.matcher\n// end of filter for the latest snapshot\n| filter related_entities.applications.count>0\n| expand entity_id=related_entities.applications.ids\n| summarize count(), by: {entity_id}\n//add ownership information\n| lookup [\nfetch dt.entity.application\n| fieldsAdd tags, called_services=arraySize(calls[dt.entity.service])\n], sourceField:entity_id, lookupField:id\n| fieldsRename Tags=lookup.tags, `Called services`=lookup.called_services\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fields \ndt.entity.application=entity_id, \nApplication=lookup.entity.name, \nTeam=if(isNotNull(Team),Team,else:\"-\"), \n`Called services`=if(`Called services`>=100,\">100\",else:coalesce(toLong(`Called services`), 0))\n| sort `Called services`, direction:\"descending\""},"notifications":[]}},"davisAnalytics":{"analyzerComponentState":{"resultState":{}}},"davisAnalysis":{"analyzerComponentState":{"resultState":{}}}},{"id":"d2267e60-a0a4-4399-9abc-a3af6a654708","type":"dql","title":"Related Kubernetes workloads","showTitle":false,"state":{"input":{"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n| filter related_entities.kubernetes_workloads.count>0\n| expand entity_id=related_entities.kubernetes_workloads.ids\n| summarize count(), by: {entity_id}\n//add ownership information\n| lookup [\nfetch dt.entity.cloud_application\n| fieldsAdd tags, contained_pgs=arraySize(contains[dt.entity.process_group])\n], sourceField:entity_id, lookupField:id\n| fieldsRename Tags=lookup.tags, `Served process groups`=lookup.contained_pgs\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fields \ndt.entity.cloud_application=entity_id, \nWorkload=lookup.entity.name, \nTeam=if(isNotNull(Team),Team,else:\"-\"), \n`Served process groups`=if(`Served process groups`>=100,\">100\",else:coalesce(toLong(`Served process groups`), 0))\n| sort `Served process groups`, direction:\"descending\"","timeframe":{"from":"now-15m","to":"now","details":{"from":{"type":"expression","normalized":"now-15m","date":"2023-07-17T11:57:17.808Z"},"to":{"type":"expression","normalized":"now","date":"2023-07-17T12:12:17.808Z"}}}},"state":"success","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute"}},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[],"firstVisibleRowIndex":0,"columnWidths":{},"enableLineWrap":true}},"result":{"code":200,"value":{"records":[{"dt.entity.cloud_application":"CLOUD_APPLICATION-A584CBF6E9B9789B","Workload":"easytravel-frontend","Team":"-","Served process groups":"1"}],"metadata":{"grail":{"canonicalQuery":"fetch events\n| filter event.provider == \"Dynatrace\"\n| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level == \"ENTITY\"\n| filter vulnerability.display_id == \"S-123\"\n| fieldsAdd \"match\", alias:matcher\n| lookup \n\t[\n\t\tfetch events\n\t\t| filter event.provider == \"Dynatrace\"\n\t\t| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n\t\t| filter event.level == \"ENTITY\"\n\t\t| filter vulnerability.display_id == \"S-123\"\n\t\t| fields {timestamp, alias:maxTimestamp}, {\"match\", alias:matcher}\n\t\t| limit 1\n\t], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp == maxTimestamp\n| filter related_entities.kubernetes_workloads.count > 0\n| expand related_entities.kubernetes_workloads.ids, alias:entity_id\n| summarize by:{entity_id}, count()\n| lookup \n\t[\n\t\tfetch dt.entity.cloud_application\n\t\t| fieldsAdd tags, {arraySize(contains[dt.entity.process_group]), alias:contained_pgs}\n\t], sourceField:entity_id, lookupField:id\n| fieldsRename {lookup.tags, alias:Tags}, {lookup.contained_pgs, alias:`Served process groups`}\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fields {entity_id, alias:dt.entity.cloud_application}, {lookup.entity.name, alias:Workload}, {if(isNotNull(Team), Team, else:\"-\"), alias:Team}, {if(`Served process groups` >= 100, \">100\", else:coalesce(toLong(`Served process groups`), 0)), alias:`Served process groups`}\n| sort `Served process groups`, direction:\"descending\"","timezone":"America/New_York","query":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n| filter related_entities.kubernetes_workloads.count>0\n| expand entity_id=related_entities.kubernetes_workloads.ids\n| summarize count(), by: {entity_id}\n//add ownership information\n| lookup [\nfetch dt.entity.cloud_application\n| fieldsAdd tags, contained_pgs=arraySize(contains[dt.entity.process_group])\n], sourceField:entity_id, lookupField:id\n| fieldsRename Tags=lookup.tags, `Served process groups`=lookup.contained_pgs\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fields \ndt.entity.cloud_application=entity_id, \nWorkload=lookup.entity.name, \nTeam=if(isNotNull(Team),Team,else:\"-\"), \n`Served process groups`=if(`Served process groups`>=100,\">100\",else:coalesce(toLong(`Served process groups`), 0))\n| sort `Served process groups`, direction:\"descending\"","scannedRecords":4715,"dqlVersion":"V1_0","scannedBytes":615376,"analysisTimeframe":{"start":"2023-08-08T00:41:47.661Z","end":"2023-08-08T00:56:47.661Z"},"locale":"","executionTimeMilliseconds":154,"notifications":[],"queryId":"6cded401-fd82-462d-ad2f-14c769785e3a","sampled":false}},"types":[{"mappings":{"dt.entity.cloud_application":{"type":"string"},"Workload":{"type":"string"},"Team":{"type":"string"},"Served process groups":{"type":"long"}},"indexRange":[0,0]}]},"notifications":[],"dateTime":"2023-08-08T00:56:47.660Z","input":{"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n| filter related_entities.kubernetes_workloads.count>0\n| expand entity_id=related_entities.kubernetes_workloads.ids\n| summarize count(), by: {entity_id}\n//add ownership information\n| lookup [\nfetch dt.entity.cloud_application\n| fieldsAdd tags, contained_pgs=arraySize(contains[dt.entity.process_group])\n], sourceField:entity_id, lookupField:id\n| fieldsRename Tags=lookup.tags, `Served process groups`=lookup.contained_pgs\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fields \ndt.entity.cloud_application=entity_id, \nWorkload=lookup.entity.name, \nTeam=if(isNotNull(Team),Team,else:\"-\"), \n`Served process groups`=if(`Served process groups`>=100,\">100\",else:coalesce(toLong(`Served process groups`), 0))\n| sort `Served process groups`, direction:\"descending\"","timeframe":{"from":"now-15m","to":"now","details":{"from":{"type":"expression","normalized":"now-15m","date":"2023-07-17T11:57:17.808Z"},"to":{"type":"expression","normalized":"now","date":"2023-07-17T12:12:17.808Z"}}}}},"visualization":"table"},"davisAnalysis":{"analyzerComponentState":{"resultState":{}}},"showInput":false,"height":450,"davisAnalytics":{"analyzerComponentState":{"resultState":{}}}},{"id":"c8a34cf5-a8b0-4c48-87d5-86d39e6e9c76","type":"dql","title":"Related Kubernetes clusters","showTitle":false,"state":{"input":{"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n| filter related_entities.kubernetes_clusters.count>0\n| expand entity_id=related_entities.kubernetes_clusters.ids\n| summarize count(), by: {entity_id}\n//add ownership information\n| lookup [\nfetch dt.entity.kubernetes_cluster\n| fieldsAdd tags, workloads=arraySize(cluster_of[dt.entity.cloud_application])\n], sourceField:entity_id, lookupField:id\n| fieldsRename Tags=lookup.tags, `Kubernetes workloads`=lookup.workloads\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fields \ndt.entity.kubernetes_cluster=entity_id, \nCluster=lookup.entity.name, \nTeam=if(isNotNull(Team),Team,else:\"-\"), \n`Kubernetes workloads`=if(`Kubernetes workloads`>=100,\">100\",else:coalesce(toLong(`Kubernetes workloads`), 0))\n| sort `Kubernetes workloads`, direction:\"descending\"","timeframe":{"from":"now-15m","to":"now","details":{"from":{"type":"expression","normalized":"now-15m","date":"2023-07-17T11:57:17.808Z"},"to":{"type":"expression","normalized":"now","date":"2023-07-17T12:12:17.808Z"}}}},"state":"success","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute"}},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[["affected_entity.management_zones.ids"]],"firstVisibleRowIndex":0,"columnWidths":{},"enableLineWrap":true}},"result":{"code":200,"value":{"records":[{"dt.entity.kubernetes_cluster":"KUBERNETES_CLUSTER-9A07EABF136EC917","Cluster":"grailworkshop","Team":"-","Kubernetes workloads":"79"}],"metadata":{"grail":{"canonicalQuery":"fetch events\n| filter event.provider == \"Dynatrace\"\n| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level == \"ENTITY\"\n| filter vulnerability.display_id == \"S-123\"\n| fieldsAdd \"match\", alias:matcher\n| lookup \n\t[\n\t\tfetch events\n\t\t| filter event.provider == \"Dynatrace\"\n\t\t| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n\t\t| filter event.level == \"ENTITY\"\n\t\t| filter vulnerability.display_id == \"S-123\"\n\t\t| fields {timestamp, alias:maxTimestamp}, {\"match\", alias:matcher}\n\t\t| limit 1\n\t], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp == maxTimestamp\n| filter related_entities.kubernetes_clusters.count > 0\n| expand related_entities.kubernetes_clusters.ids, alias:entity_id\n| summarize by:{entity_id}, count()\n| lookup \n\t[\n\t\tfetch dt.entity.kubernetes_cluster\n\t\t| fieldsAdd tags, {arraySize(cluster_of[dt.entity.cloud_application]), alias:workloads}\n\t], sourceField:entity_id, lookupField:id\n| fieldsRename {lookup.tags, alias:Tags}, {lookup.workloads, alias:`Kubernetes workloads`}\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fields {entity_id, alias:dt.entity.kubernetes_cluster}, {lookup.entity.name, alias:Cluster}, {if(isNotNull(Team), Team, else:\"-\"), alias:Team}, {if(`Kubernetes workloads` >= 100, \">100\", else:coalesce(toLong(`Kubernetes workloads`), 0)), alias:`Kubernetes workloads`}\n| sort `Kubernetes workloads`, direction:\"descending\"","timezone":"America/New_York","query":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n| filter related_entities.kubernetes_clusters.count>0\n| expand entity_id=related_entities.kubernetes_clusters.ids\n| summarize count(), by: {entity_id}\n//add ownership information\n| lookup [\nfetch dt.entity.kubernetes_cluster\n| fieldsAdd tags, workloads=arraySize(cluster_of[dt.entity.cloud_application])\n], sourceField:entity_id, lookupField:id\n| fieldsRename Tags=lookup.tags, `Kubernetes workloads`=lookup.workloads\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fields \ndt.entity.kubernetes_cluster=entity_id, \nCluster=lookup.entity.name, \nTeam=if(isNotNull(Team),Team,else:\"-\"), \n`Kubernetes workloads`=if(`Kubernetes workloads`>=100,\">100\",else:coalesce(toLong(`Kubernetes workloads`), 0))\n| sort `Kubernetes workloads`, direction:\"descending\"","scannedRecords":4637,"dqlVersion":"V1_0","scannedBytes":605258,"analysisTimeframe":{"start":"2023-08-08T00:41:47.664Z","end":"2023-08-08T00:56:47.664Z"},"locale":"","executionTimeMilliseconds":172,"notifications":[],"queryId":"4144aab2-0f6e-4a3c-a2b3-d3aaa55fba2d","sampled":false}},"types":[{"mappings":{"dt.entity.kubernetes_cluster":{"type":"string"},"Cluster":{"type":"string"},"Team":{"type":"string"},"Kubernetes workloads":{"type":"long"}},"indexRange":[0,0]}]},"notifications":[],"dateTime":"2023-08-08T00:56:47.663Z","input":{"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.display_id==\"S-123\"  // contextual filter\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n| filter related_entities.kubernetes_clusters.count>0\n| expand entity_id=related_entities.kubernetes_clusters.ids\n| summarize count(), by: {entity_id}\n//add ownership information\n| lookup [\nfetch dt.entity.kubernetes_cluster\n| fieldsAdd tags, workloads=arraySize(cluster_of[dt.entity.cloud_application])\n], sourceField:entity_id, lookupField:id\n| fieldsRename Tags=lookup.tags, `Kubernetes workloads`=lookup.workloads\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fields \ndt.entity.kubernetes_cluster=entity_id, \nCluster=lookup.entity.name, \nTeam=if(isNotNull(Team),Team,else:\"-\"), \n`Kubernetes workloads`=if(`Kubernetes workloads`>=100,\">100\",else:coalesce(toLong(`Kubernetes workloads`), 0))\n| sort `Kubernetes workloads`, direction:\"descending\"","timeframe":{"from":"now-15m","to":"now","details":{"from":{"type":"expression","normalized":"now-15m","date":"2023-07-17T11:57:17.808Z"},"to":{"type":"expression","normalized":"now","date":"2023-07-17T12:12:17.808Z"}}}}},"visualization":"table"},"davisAnalysis":{"analyzerComponentState":{"resultState":{}}},"showInput":false,"height":450,"davisAnalytics":{"analyzerComponentState":{"resultState":{}}}}]}