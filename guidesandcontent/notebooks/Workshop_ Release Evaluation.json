{"version":"5","defaultTimeframe":{"from":"now-2h","to":"now"},"sections":[{"id":"51ad88e9-a50e-40bf-9bd0-79ea331390a4","type":"markdown","markdown":"# Release Evaluation Lab: Site Reliability Guardian and Workflows\nIt's awesome that Dynatrace notifies us of issues as soon as they occur, but what if we could prevent problems by catching issues before production or validate changes/releases before a large amount of users hit the site? We can use the Site Reliability Guardian and Workflows to automate release evaluations/quality gates.\n* Create a Site Reliability Guardian based on logs and existing SLOs\n* Create a workflow to notify us in Slack on the results of the Guardian evaluation"},{"id":"6986e96e-92fb-4aef-886e-dbebd6b0a0f8","type":"markdown","markdown":"# Release Evaluation Lab: Create Site Reliability Guardian\n* Open the Site Reliability Guardian app and create a guardian. We will not use a template for this lab, but they area great place to start!\n\n### Objective 1 \n* Name: Frontend Log Error Rate\n* Fetch your data from: Grail DQL \n```fetch logs\n| filter matchesValue(k8s.container.name, \"easytravel-frontend\") and matchesValue(k8s.namespace.name, \"easytravel\")\n| fieldsAdd errors = toLong(loglevel == \"ERROR\")\n| summarize errorRate = sum(errors)/count() * 100\n```\n* Use Thresholds\n  * Lower is better\n  * Warning: 3\n  * Failure: 5\n![](https://github.com/JasonOstroski/platformworkshop2023/assets/22330658/fc22787f-907e-4a18-916c-f43590efcb0a)\n\n### Objective 2\n* Name: Frontend Performance\n* Fetch your data from: SLO\n* Reference SLO: EasyTravel Frontend Performance\n* Use Thresholds\n  * Higher is better\n  * Warning: 98\n  * Failure: 95\n![](https://github.com/JasonOstroski/platformworkshop2023/assets/22330658/34e53151-d2c3-4d3b-855a-6208b9028f7e)\n\n## Save and validate the Guardian \n![](https://github.com/JasonOstroski/platformworkshop2023/assets/22330658/d7d3f9b3-824c-4123-8ccf-3f475f78de05)"},{"id":"1cdd07cc-4dac-4ce3-a750-0858698a8c2c","type":"markdown","markdown":"# Release Evaluation Lab: Create the workflow\n* Open the workflow app and create a new workflow\n![](https://github.com/JasonOstroski/platformworkshop2023/assets/22330658/14f0e713-7e5d-4c9d-97e9-9a90e6ebdca9)\n\n\n### Trigger\n* On demand trigger\n\n### Task 1 - Site Reliability Guardian\n* Name: run_validation\n* Timeframe: Use selector last 2 hours\n![](https://github.com/JasonOstroski/platformworkshop2023/assets/22330658/52ea6387-7f9c-4b1c-8954-d3ede299ea72)\n\n### Task 2 - Slack Guardian Passed\n* Name: guardian_passed\n* Input\n  * Connection: WorkshopChannel\n  * Channel: workshopchannel\n  * Message: \n>     :large_green_circle: The latest Frontend Service validation finished with status: *{{result(\"run_validation\").validation_status }}* \n>     <https://jja01219.apps.dynatrace.com/ui/apps/dynatrace.site.reliability.guardian/analysis/{{ \n>     result(\"run_validation\").guardian_id }}?validationId={{ result(\"run_validation\").validation_id }}|Show validation result>\n>     *DQL* to fetch result event:\n>     ```\n>     fetch bizevents\n>     | filter event.provider == \"dynatrace.site.reliability.guardian\"\n>     | filter event.type == \"guardian.validation.finished\"\n>     | filter validation.id == \"{{ result(\"run_validation\").validation_id }}\"\n>     ```\n  \n* Conditions:\n  * run this task if: run_validation success\n  * Custom Condition: `{{ result(\"run_validation\").validation_status == \"pass\" }}`\n  * else: stop here\n  ![](https://github.com/JasonOstroski/platformworkshop2023/assets/22330658/c65bf9af-c08d-45fb-bd85-1fe1ad7325b3)\n  ![](https://github.com/JasonOstroski/platformworkshop2023/assets/22330658/5cd35764-e64a-45f6-94ff-13412612fafc)\n\n\n### Task 2 - Slack Guardian Failed\n* Name: guardian_failed\n* Input\n  * Connection: WorkshopChannel\n  * Channel: workshopchannel\n  * Message:\n>     :red_circle: The latest Frontend Service validation finished with status: *{{result(\"run_validation\").validation_status }}* \n>     <https://jja01219.apps.dynatrace.com/ui/apps/dynatrace.site.reliability.guardian/analysis/{{ \n>     result(\"run_validation\").guardian_id }}?validationId={{ result(\"run_validation\").validation_id }}|Show validation result>\n>     *DQL* to fetch result event:\n>     ```\n>     fetch bizevents\n>     | filter event.provider == \"dynatrace.site.reliability.guardian\"\n>     | filter event.type == \"guardian.validation.finished\"\n>     | filter validation.id == \"{{ result(\"run_validation\").validation_id }}\"\n>     ```\n* Conditions:\n  * run this task if: run_validation success\n  * Custom Condition: `{{ result(\"run_validation\").validation_status == \"fail\" }}`\n  * else: stop here\n  ![guardianfail](https://github.com/JasonOstroski/platformworkshop2023/assets/22330658/11c013e0-b905-4643-96d7-6541d442d258)\n  ![](https://github.com/JasonOstroski/platformworkshop2023/assets/22330658/526180d2-99e1-4851-bfb1-538e9125af17)"}]}