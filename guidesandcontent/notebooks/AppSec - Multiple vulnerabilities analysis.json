{"version":"5","defaultTimeframe":{"from":"now-15m","to":"now","details":{"from":{"type":"expression","normalized":"now-15m","date":"2023-08-07T08:32:28.403Z"},"to":{"type":"expression","normalized":"now","date":"2023-08-07T08:47:28.403Z"}}},"sections":[{"id":"857bfd0a-9ad0-44fa-bcb5-0be7c997e203","type":"markdown","markdown":"# Third-party vulnerabilities exposure report\n\nList and analyze organizational exposure to a threat consisting of multiple third-party vulnerabilities.\n\n#### Use this template to answer the following security questions:\n\n* What are the top vulnerabilities and their recent change events?\n* Where the vulnerabilities are? \n* Which teams are responsible for fixing the vulnerabilities?\n\n#### Applied threat filter:\n`contains(affected_entity.vulnerable_component.name,\"apache\")`\n\n*Note: Each widget is pre-filtered with the threat filter context. Press **Rerun sections** to refresh all the widgets at once.*","hasContent":true},{"id":"cda80db3-78a8-4df0-9043-14b25b907b12","type":"markdown","markdown":"## 💥 Exposure summary \n--- \nYour environment's exposure to vulnerabilities, the affected or related entities, and trends."},{"id":"b97e87cd-2b38-4bec-9037-94db8d2e0613","type":"dql","title":"Vulnerability summary","showTitle":false,"state":{"input":{"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n// filter for the latest snapshot per entity\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.kind == \"SECURITY_EVENT\" \n| filter event.category == \"VULNERABILITY_MANAGEMENT\" \n| filter event.provider == \"Dynatrace\" \n| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\" \n| filter event.level==\"ENTITY\"  \n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n| summarize\n{\n`# Non-muted entities`=countIf(vulnerability.mute.status==\"NOT_MUTED\"),\n`Mute status`=takeFirst(vulnerability.parent.mute.status),\n`Last mute status`=takeMax(toTimestamp(vulnerability.parent.mute.change_date)),\n`Last entity mute status`=takeMax(toTimestamp(vulnerability.mute.change_date)),\n`# Afftected entities`=countIf(vulnerability.resolution.status==\"OPEN\"),\n`Resolution status`=takeFirst(vulnerability.parent.resolution.status),\n`Last status`=takeMax(toTimestamp(vulnerability.parent.resolution.change_date)),\n`Last entity status`=takeMax(toTimestamp(vulnerability.resolution.change_date)),\n`max Davis Security Score`=round(takeMax(vulnerability.risk.score),decimals:1),\n`First seen`=takeMin(toTimestamp(vulnerability.first_seen)),\n`Last seen`=takeMax(timestamp)\n}, by: {vulnerability.display_id}\n| summarize \n{\nTotal=count(),\nMuted=countIf(`# Non-muted entities`==0 OR `Mute status`==\"MUTED\"),\nOpen=countIf(`# Afftected entities`>0 AND `# Non-muted entities`>0 AND `Mute status`==\"NOT_MUTED\"),\nResolved=countIf(`# Afftected entities`==0 OR `Resolution status`==\"RESOLVED\"),\n`Last seen`=takeMax(`Last seen`),\n`First seen`=takeMin(`First seen`),\n`Last status`=takeMax(`Last status`),\n`Last entity status`=takeMax(`Last entity status`),\n`Last mute status`=takeMax(`Last mute status`),\n`Last entity mute status`=takeMax(`Last entity mute status`)\n}\n| fields \nTotal,\nOpen=concat(\"🔴 \",Open),\nMuted=concat(\"⚫ \",Muted),\nResolved=concat(\"✅ \",Resolved),\n`Status change`=if(arrayMax(array(`Last entity status`,`Last status`,`Last mute status`,`Last entity mute status`)) > now()-1d,arrayMax(array(`Last entity status`,`Last status`,`Last mute status`,`Last entity mute status`)),\n                else:concat(toLong((now()-arrayMax(array(`Last entity status`,`Last status`,`Last mute status`,`Last entity mute status`)))/1d),\" days ago\")),\n`First seen`=concat(toLong((now()-`First seen`)/1d),\" days ago\"),\n`Last seen`=concat(toLong((now()-`Last seen`)/1m),\" minutes ago\")","timeframe":{"from":"now-15m","to":"now","details":{"from":{"type":"expression","normalized":"now-15m","date":"2023-08-07T08:28:37.534Z"},"to":{"type":"expression","normalized":"now","date":"2023-08-07T08:43:37.534Z"}}}},"state":"success","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute"}},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"rowDensity":"condensed","enableLineWrap":true,"enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[],"firstVisibleRowIndex":0,"columnWidths":{}}},"result":{"code":200,"value":{"records":[{"Total":"5","Open":"🔴 5","Muted":"⚫ 0","Resolved":"✅ 0","Status change":"4 days ago","First seen":"4 days ago","Last seen":"11 minutes ago"}],"metadata":{"grail":{"canonicalQuery":"fetch events\n| filter event.provider == \"Dynatrace\"\n| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level == \"ENTITY\"\n| filter contains(affected_entity.vulnerable_component.name, \"apache\")\n| fieldsAdd \"match\", alias:matcher\n| lookup \n\t[\n\t\tfetch events\n\t\t| filter event.kind == \"SECURITY_EVENT\"\n\t\t| filter event.category == \"VULNERABILITY_MANAGEMENT\"\n\t\t| filter event.provider == \"Dynatrace\"\n\t\t| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n\t\t| filter event.level == \"ENTITY\"\n\t\t| filter contains(affected_entity.vulnerable_component.name, \"apache\")\n\t\t| fields {timestamp, alias:maxTimestamp}, {\"match\", alias:matcher}\n\t\t| limit 1\n\t], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp == maxTimestamp\n| summarize by:{vulnerability.display_id}, {{countIf(vulnerability.mute.status == \"NOT_MUTED\"), alias:`# Non-muted entities`}, {takeFirst(vulnerability.parent.mute.status), alias:`Mute status`}, {takeMax(toTimestamp(vulnerability.parent.mute.change_date)), alias:`Last mute status`}, {takeMax(toTimestamp(vulnerability.mute.change_date)), alias:`Last entity mute status`}, {countIf(vulnerability.resolution.status == \"OPEN\"), alias:`# Afftected entities`}, {takeFirst(vulnerability.parent.resolution.status), alias:`Resolution status`}, {takeMax(toTimestamp(vulnerability.parent.resolution.change_date)), alias:`Last status`}, {takeMax(toTimestamp(vulnerability.resolution.change_date)), alias:`Last entity status`}, {round(takeMax(vulnerability.risk.score), decimals:1), alias:`max Davis Security Score`}, {takeMin(toTimestamp(vulnerability.first_seen)), alias:`First seen`}, {takeMax(timestamp), alias:`Last seen`}}\n| summarize {count(), alias:Total}, {countIf(`# Non-muted entities` == 0 OR `Mute status` == \"MUTED\"), alias:Muted}, {countIf(`# Afftected entities` > 0 AND `# Non-muted entities` > 0 AND `Mute status` == \"NOT_MUTED\"), alias:Open}, {countIf(`# Afftected entities` == 0 OR `Resolution status` == \"RESOLVED\"), alias:Resolved}, {takeMax(`Last seen`), alias:`Last seen`}, {takeMin(`First seen`), alias:`First seen`}, {takeMax(`Last status`), alias:`Last status`}, {takeMax(`Last entity status`), alias:`Last entity status`}, {takeMax(`Last mute status`), alias:`Last mute status`}, {takeMax(`Last entity mute status`), alias:`Last entity mute status`}\n| fields Total, {concat(\"🔴 \", Open), alias:Open}, {concat(\"⚫ \", Muted), alias:Muted}, {concat(\"✅ \", Resolved), alias:Resolved}, {if(arrayMax(array(`Last entity status`, `Last status`, `Last mute status`, `Last entity mute status`)) > now() - 1d, arrayMax(array(`Last entity status`, `Last status`, `Last mute status`, `Last entity mute status`)), else:concat(toLong((now() - arrayMax(array(`Last entity status`, `Last status`, `Last mute status`, `Last entity mute status`))) / 1d), \" days ago\")), alias:`Status change`}, {concat(toLong((now() - `First seen`) / 1d), \" days ago\"), alias:`First seen`}, {concat(toLong((now() - `Last seen`) / 1m), \" minutes ago\"), alias:`Last seen`}","timezone":"America/New_York","query":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n// filter for the latest snapshot per entity\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.kind == \"SECURITY_EVENT\" \n| filter event.category == \"VULNERABILITY_MANAGEMENT\" \n| filter event.provider == \"Dynatrace\" \n| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\" \n| filter event.level==\"ENTITY\"  \n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n| summarize\n{\n`# Non-muted entities`=countIf(vulnerability.mute.status==\"NOT_MUTED\"),\n`Mute status`=takeFirst(vulnerability.parent.mute.status),\n`Last mute status`=takeMax(toTimestamp(vulnerability.parent.mute.change_date)),\n`Last entity mute status`=takeMax(toTimestamp(vulnerability.mute.change_date)),\n`# Afftected entities`=countIf(vulnerability.resolution.status==\"OPEN\"),\n`Resolution status`=takeFirst(vulnerability.parent.resolution.status),\n`Last status`=takeMax(toTimestamp(vulnerability.parent.resolution.change_date)),\n`Last entity status`=takeMax(toTimestamp(vulnerability.resolution.change_date)),\n`max Davis Security Score`=round(takeMax(vulnerability.risk.score),decimals:1),\n`First seen`=takeMin(toTimestamp(vulnerability.first_seen)),\n`Last seen`=takeMax(timestamp)\n}, by: {vulnerability.display_id}\n| summarize \n{\nTotal=count(),\nMuted=countIf(`# Non-muted entities`==0 OR `Mute status`==\"MUTED\"),\nOpen=countIf(`# Afftected entities`>0 AND `# Non-muted entities`>0 AND `Mute status`==\"NOT_MUTED\"),\nResolved=countIf(`# Afftected entities`==0 OR `Resolution status`==\"RESOLVED\"),\n`Last seen`=takeMax(`Last seen`),\n`First seen`=takeMin(`First seen`),\n`Last status`=takeMax(`Last status`),\n`Last entity status`=takeMax(`Last entity status`),\n`Last mute status`=takeMax(`Last mute status`),\n`Last entity mute status`=takeMax(`Last entity mute status`)\n}\n| fields \nTotal,\nOpen=concat(\"🔴 \",Open),\nMuted=concat(\"⚫ \",Muted),\nResolved=concat(\"✅ \",Resolved),\n`Status change`=if(arrayMax(array(`Last entity status`,`Last status`,`Last mute status`,`Last entity mute status`)) > now()-1d,arrayMax(array(`Last entity status`,`Last status`,`Last mute status`,`Last entity mute status`)),\n                else:concat(toLong((now()-arrayMax(array(`Last entity status`,`Last status`,`Last mute status`,`Last entity mute status`)))/1d),\" days ago\")),\n`First seen`=concat(toLong((now()-`First seen`)/1d),\" days ago\"),\n`Last seen`=concat(toLong((now()-`Last seen`)/1m),\" minutes ago\")","scannedRecords":4636,"dqlVersion":"V1_0","scannedBytes":645657,"analysisTimeframe":{"start":"2023-08-08T00:40:56.312Z","end":"2023-08-08T00:55:56.312Z"},"locale":"","executionTimeMilliseconds":439,"notifications":[],"queryId":"8b9176a0-a0c4-4ee1-ace7-4625863a5ff7","sampled":false}},"types":[{"mappings":{"Total":{"type":"long"},"Open":{"type":"string"},"Muted":{"type":"string"},"Resolved":{"type":"string"},"Status change":{"type":"string"},"First seen":{"type":"string"},"Last seen":{"type":"string"}},"indexRange":[0,0]}]},"notifications":[],"dateTime":"2023-08-08T00:55:56.311Z","input":{"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n// filter for the latest snapshot per entity\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.kind == \"SECURITY_EVENT\" \n| filter event.category == \"VULNERABILITY_MANAGEMENT\" \n| filter event.provider == \"Dynatrace\" \n| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\" \n| filter event.level==\"ENTITY\"  \n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n| summarize\n{\n`# Non-muted entities`=countIf(vulnerability.mute.status==\"NOT_MUTED\"),\n`Mute status`=takeFirst(vulnerability.parent.mute.status),\n`Last mute status`=takeMax(toTimestamp(vulnerability.parent.mute.change_date)),\n`Last entity mute status`=takeMax(toTimestamp(vulnerability.mute.change_date)),\n`# Afftected entities`=countIf(vulnerability.resolution.status==\"OPEN\"),\n`Resolution status`=takeFirst(vulnerability.parent.resolution.status),\n`Last status`=takeMax(toTimestamp(vulnerability.parent.resolution.change_date)),\n`Last entity status`=takeMax(toTimestamp(vulnerability.resolution.change_date)),\n`max Davis Security Score`=round(takeMax(vulnerability.risk.score),decimals:1),\n`First seen`=takeMin(toTimestamp(vulnerability.first_seen)),\n`Last seen`=takeMax(timestamp)\n}, by: {vulnerability.display_id}\n| summarize \n{\nTotal=count(),\nMuted=countIf(`# Non-muted entities`==0 OR `Mute status`==\"MUTED\"),\nOpen=countIf(`# Afftected entities`>0 AND `# Non-muted entities`>0 AND `Mute status`==\"NOT_MUTED\"),\nResolved=countIf(`# Afftected entities`==0 OR `Resolution status`==\"RESOLVED\"),\n`Last seen`=takeMax(`Last seen`),\n`First seen`=takeMin(`First seen`),\n`Last status`=takeMax(`Last status`),\n`Last entity status`=takeMax(`Last entity status`),\n`Last mute status`=takeMax(`Last mute status`),\n`Last entity mute status`=takeMax(`Last entity mute status`)\n}\n| fields \nTotal,\nOpen=concat(\"🔴 \",Open),\nMuted=concat(\"⚫ \",Muted),\nResolved=concat(\"✅ \",Resolved),\n`Status change`=if(arrayMax(array(`Last entity status`,`Last status`,`Last mute status`,`Last entity mute status`)) > now()-1d,arrayMax(array(`Last entity status`,`Last status`,`Last mute status`,`Last entity mute status`)),\n                else:concat(toLong((now()-arrayMax(array(`Last entity status`,`Last status`,`Last mute status`,`Last entity mute status`)))/1d),\" days ago\")),\n`First seen`=concat(toLong((now()-`First seen`)/1d),\" days ago\"),\n`Last seen`=concat(toLong((now()-`Last seen`)/1m),\" minutes ago\")","timeframe":{"from":"now-15m","to":"now","details":{"from":{"type":"expression","normalized":"now-15m","date":"2023-08-07T08:28:37.534Z"},"to":{"type":"expression","normalized":"now","date":"2023-08-07T08:43:37.534Z"}}}}},"visualization":"table"},"davisAnalysis":{"analyzerComponentState":{"resultState":{}}},"showInput":false,"height":91,"davisAnalytics":{"analyzerComponentState":{"resultState":{}}}},{"id":"b3c821ef-d953-414c-95e9-a2fe85caa01e","type":"dql","title":"Number of open vulnerabilities over last 3 days (1-hour step)","showTitle":true,"height":125,"showInput":false,"showSettings":false,"state":{"input":{"timeframe":{"from":"now-3d","to":"now","details":{"from":{"type":"expression","normalized":"now-3d","date":"2023-04-18T17:47:32.084Z"},"to":{"type":"expression","normalized":"now","date":"2023-04-21T17:47:32.084Z"}}},"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.resolution.status==\"OPEN\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n| summarize Vulnerabilities=countDistinct(vulnerability.display_id), by:{timestamp}\n| sort timestamp, direction:\"descending\"\n| summarize Vulnerabilities=takeFirst(Vulnerabilities), by:{timestamp=bin(timestamp,1h)}\n| sort timestamp, direction:\"descending\""},"visualizationSettings":{"chartSettings":{"gapPolicy":"connect","legend":{"hidden":true},"leftYAxisSettings":{"scale":"linear"},"valueRepresentation":"absolute"},"table":{"lineWrapIds":[],"enableLineWrap":false}},"showConsole":true,"state":"success","visualization":"areaChart","result":{"code":200,"value":{"records":[{"timestamp":"2023-08-07T20:00:00.000000000-04:00","Vulnerabilities":"5"},{"timestamp":"2023-08-07T19:00:00.000000000-04:00","Vulnerabilities":"5"},{"timestamp":"2023-08-07T18:00:00.000000000-04:00","Vulnerabilities":"5"},{"timestamp":"2023-08-07T17:00:00.000000000-04:00","Vulnerabilities":"5"},{"timestamp":"2023-08-07T16:00:00.000000000-04:00","Vulnerabilities":"5"},{"timestamp":"2023-08-07T15:00:00.000000000-04:00","Vulnerabilities":"5"},{"timestamp":"2023-08-07T14:00:00.000000000-04:00","Vulnerabilities":"5"},{"timestamp":"2023-08-07T13:00:00.000000000-04:00","Vulnerabilities":"5"},{"timestamp":"2023-08-07T12:00:00.000000000-04:00","Vulnerabilities":"5"},{"timestamp":"2023-08-07T11:00:00.000000000-04:00","Vulnerabilities":"5"},{"timestamp":"2023-08-07T10:00:00.000000000-04:00","Vulnerabilities":"5"},{"timestamp":"2023-08-07T09:00:00.000000000-04:00","Vulnerabilities":"5"},{"timestamp":"2023-08-07T08:00:00.000000000-04:00","Vulnerabilities":"5"}],"metadata":{"grail":{"canonicalQuery":"fetch events\n| filter event.provider == \"Dynatrace\"\n| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level == \"ENTITY\"\n| filter vulnerability.resolution.status == \"OPEN\"\n| filter contains(affected_entity.vulnerable_component.name, \"apache\")\n| summarize by:{timestamp}, countDistinct(vulnerability.display_id), alias:Vulnerabilities\n| sort timestamp, direction:\"descending\"\n| summarize by:{bin(timestamp, 1h), alias:timestamp}, takeFirst(Vulnerabilities), alias:Vulnerabilities\n| sort timestamp, direction:\"descending\"","timezone":"America/New_York","query":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.resolution.status==\"OPEN\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n| summarize Vulnerabilities=countDistinct(vulnerability.display_id), by:{timestamp}\n| sort timestamp, direction:\"descending\"\n| summarize Vulnerabilities=takeFirst(Vulnerabilities), by:{timestamp=bin(timestamp,1h)}\n| sort timestamp, direction:\"descending\"","scannedRecords":47860,"dqlVersion":"V1_0","scannedBytes":7996864,"analysisTimeframe":{"start":"2023-08-05T00:55:56.317Z","end":"2023-08-08T00:55:56.317Z"},"locale":"","executionTimeMilliseconds":123,"notifications":[],"queryId":"e551dcbc-3274-4e50-bf47-158127c3d77e","sampled":false}},"types":[{"mappings":{"timestamp":{"type":"timestamp"},"Vulnerabilities":{"type":"long"}},"indexRange":[0,12]}]},"notifications":[],"dateTime":"2023-08-08T00:55:56.316Z","input":{"timeframe":{"from":"now-3d","to":"now","details":{"from":{"type":"expression","normalized":"now-3d","date":"2023-04-18T17:47:32.084Z"},"to":{"type":"expression","normalized":"now","date":"2023-04-21T17:47:32.084Z"}}},"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.resolution.status==\"OPEN\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n| summarize Vulnerabilities=countDistinct(vulnerability.display_id), by:{timestamp}\n| sort timestamp, direction:\"descending\"\n| summarize Vulnerabilities=takeFirst(Vulnerabilities), by:{timestamp=bin(timestamp,1h)}\n| sort timestamp, direction:\"descending\""}}},"davisAnalytics":{"analyzerComponentState":{"resultState":{}}},"davisAnalysis":{"analyzerComponentState":{"resultState":{}}}},{"id":"b93c306a-d311-4da7-ae29-de7ba5891c1d","type":"dql","title":"Davis assessment summary for affected entities","showTitle":false,"state":{"input":{"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"               \n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n// filter for the latest snapshot per entity\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider == \"Dynatrace\" \n| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\" \n| filter event.level==\"ENTITY\"  \n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n| summarize\n{\n`Function in use`=countIf(vulnerability.davis_assessment.vulnerable_function_status==\"IN_USE\"),\n`Function not in use`=countIf(vulnerability.davis_assessment.vulnerable_function_status==\"NOT_IN_USE\"),\n`Function not available`=countIf(vulnerability.davis_assessment.vulnerable_function_status==\"NOT_AVAILABLE\"),\n`Internet exposure`=countIf(vulnerability.davis_assessment.exposure_status==\"PUBLIC_NETWORK\"),\n`Data assets in reach`=countIf(vulnerability.davis_assessment.data_assets_status),\nType=takeAny(affected_entity.type)\n}, by: {affected_entity.id}\n| summarize \n{\n`Function in use`=countIf(`Function in use`>0),\n`Function not in use`=countIf(`Function not in use`>0),\n`Function not available`=countIf(`Function not available`>0),\n`Internet exposure`=countIf(`Internet exposure`>0),\n`Data assets in reach`=countIf(`Data assets in reach`>0),\n`Affected entities`=arraySize(collectDistinct(affected_entity.id)),\nTypes=collectDistinct(Type)\n}\n| fields\nTypes,\n`Affected entities`,\n`With internet exposure`=if(`Internet exposure`>0,concat(\"❗\",`Internet exposure`),else:0),\n`With data assets in reach`=if(`Data assets in reach`>0,concat(\"❗\",`Data assets in reach`),else:0),\n`With function in use`=if(`Function in use`>0,concat(\"❗\",`Function in use`),else:if(`Function not in use`>0,\"Not in use\",else:\"No data\"))","timeframe":{"from":"now-15m","to":"now","details":{"from":{"type":"expression","normalized":"now-15m","date":"2023-08-07T08:29:23.174Z"},"to":{"type":"expression","normalized":"now","date":"2023-08-07T08:44:23.174Z"}}}},"state":"success","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute"}},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"rowDensity":"condensed","enableLineWrap":true,"enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[],"firstVisibleRowIndex":0,"columnWidths":{}}},"result":{"code":200,"value":{"records":[{"Types":["PROCESS_GROUP"],"Affected entities":"4","With internet exposure":"❗4","With data assets in reach":"❗4","With function in use":"No data"}],"metadata":{"grail":{"canonicalQuery":"fetch events\n| filter event.provider == \"Dynatrace\"\n| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level == \"ENTITY\"\n| filter contains(affected_entity.vulnerable_component.name, \"apache\")\n| fieldsAdd \"match\", alias:matcher\n| lookup \n\t[\n\t\tfetch events\n\t\t| filter event.provider == \"Dynatrace\"\n\t\t| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n\t\t| filter event.level == \"ENTITY\"\n\t\t| filter contains(affected_entity.vulnerable_component.name, \"apache\")\n\t\t| fields {timestamp, alias:maxTimestamp}, {\"match\", alias:matcher}\n\t\t| limit 1\n\t], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp == maxTimestamp\n| summarize by:{affected_entity.id}, {{countIf(vulnerability.davis_assessment.vulnerable_function_status == \"IN_USE\"), alias:`Function in use`}, {countIf(vulnerability.davis_assessment.vulnerable_function_status == \"NOT_IN_USE\"), alias:`Function not in use`}, {countIf(vulnerability.davis_assessment.vulnerable_function_status == \"NOT_AVAILABLE\"), alias:`Function not available`}, {countIf(vulnerability.davis_assessment.exposure_status == \"PUBLIC_NETWORK\"), alias:`Internet exposure`}, {countIf(vulnerability.davis_assessment.data_assets_status), alias:`Data assets in reach`}, {takeAny(affected_entity.type), alias:Type}}\n| summarize {countIf(`Function in use` > 0), alias:`Function in use`}, {countIf(`Function not in use` > 0), alias:`Function not in use`}, {countIf(`Function not available` > 0), alias:`Function not available`}, {countIf(`Internet exposure` > 0), alias:`Internet exposure`}, {countIf(`Data assets in reach` > 0), alias:`Data assets in reach`}, {arraySize(collectDistinct(affected_entity.id)), alias:`Affected entities`}, {collectDistinct(Type), alias:Types}\n| fields Types, `Affected entities`, {if(`Internet exposure` > 0, concat(\"❗\", `Internet exposure`), else:0), alias:`With internet exposure`}, {if(`Data assets in reach` > 0, concat(\"❗\", `Data assets in reach`), else:0), alias:`With data assets in reach`}, {if(`Function in use` > 0, concat(\"❗\", `Function in use`), else:if(`Function not in use` > 0, \"Not in use\", else:\"No data\")), alias:`With function in use`}","timezone":"America/New_York","query":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"               \n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n// filter for the latest snapshot per entity\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider == \"Dynatrace\" \n| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\" \n| filter event.level==\"ENTITY\"  \n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n| summarize\n{\n`Function in use`=countIf(vulnerability.davis_assessment.vulnerable_function_status==\"IN_USE\"),\n`Function not in use`=countIf(vulnerability.davis_assessment.vulnerable_function_status==\"NOT_IN_USE\"),\n`Function not available`=countIf(vulnerability.davis_assessment.vulnerable_function_status==\"NOT_AVAILABLE\"),\n`Internet exposure`=countIf(vulnerability.davis_assessment.exposure_status==\"PUBLIC_NETWORK\"),\n`Data assets in reach`=countIf(vulnerability.davis_assessment.data_assets_status),\nType=takeAny(affected_entity.type)\n}, by: {affected_entity.id}\n| summarize \n{\n`Function in use`=countIf(`Function in use`>0),\n`Function not in use`=countIf(`Function not in use`>0),\n`Function not available`=countIf(`Function not available`>0),\n`Internet exposure`=countIf(`Internet exposure`>0),\n`Data assets in reach`=countIf(`Data assets in reach`>0),\n`Affected entities`=arraySize(collectDistinct(affected_entity.id)),\nTypes=collectDistinct(Type)\n}\n| fields\nTypes,\n`Affected entities`,\n`With internet exposure`=if(`Internet exposure`>0,concat(\"❗\",`Internet exposure`),else:0),\n`With data assets in reach`=if(`Data assets in reach`>0,concat(\"❗\",`Data assets in reach`),else:0),\n`With function in use`=if(`Function in use`>0,concat(\"❗\",`Function in use`),else:if(`Function not in use`>0,\"Not in use\",else:\"No data\"))","scannedRecords":4636,"dqlVersion":"V1_0","scannedBytes":645657,"analysisTimeframe":{"start":"2023-08-08T00:40:56.321Z","end":"2023-08-08T00:55:56.321Z"},"locale":"","executionTimeMilliseconds":135,"notifications":[],"queryId":"8300f3f9-0f23-43c6-b5c0-c6f3da1c03f1","sampled":false}},"types":[{"mappings":{"Types":{"type":"array","types":[{"mappings":{"element":{"type":"string"}},"indexRange":[0,0]}]},"Affected entities":{"type":"long"},"With internet exposure":{"type":"string"},"With data assets in reach":{"type":"string"},"With function in use":{"type":"string"}},"indexRange":[0,0]}]},"notifications":[],"dateTime":"2023-08-08T00:55:56.320Z","input":{"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"               \n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n// filter for the latest snapshot per entity\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider == \"Dynatrace\" \n| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\" \n| filter event.level==\"ENTITY\"  \n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n| summarize\n{\n`Function in use`=countIf(vulnerability.davis_assessment.vulnerable_function_status==\"IN_USE\"),\n`Function not in use`=countIf(vulnerability.davis_assessment.vulnerable_function_status==\"NOT_IN_USE\"),\n`Function not available`=countIf(vulnerability.davis_assessment.vulnerable_function_status==\"NOT_AVAILABLE\"),\n`Internet exposure`=countIf(vulnerability.davis_assessment.exposure_status==\"PUBLIC_NETWORK\"),\n`Data assets in reach`=countIf(vulnerability.davis_assessment.data_assets_status),\nType=takeAny(affected_entity.type)\n}, by: {affected_entity.id}\n| summarize \n{\n`Function in use`=countIf(`Function in use`>0),\n`Function not in use`=countIf(`Function not in use`>0),\n`Function not available`=countIf(`Function not available`>0),\n`Internet exposure`=countIf(`Internet exposure`>0),\n`Data assets in reach`=countIf(`Data assets in reach`>0),\n`Affected entities`=arraySize(collectDistinct(affected_entity.id)),\nTypes=collectDistinct(Type)\n}\n| fields\nTypes,\n`Affected entities`,\n`With internet exposure`=if(`Internet exposure`>0,concat(\"❗\",`Internet exposure`),else:0),\n`With data assets in reach`=if(`Data assets in reach`>0,concat(\"❗\",`Data assets in reach`),else:0),\n`With function in use`=if(`Function in use`>0,concat(\"❗\",`Function in use`),else:if(`Function not in use`>0,\"Not in use\",else:\"No data\"))","timeframe":{"from":"now-15m","to":"now","details":{"from":{"type":"expression","normalized":"now-15m","date":"2023-08-07T08:29:23.174Z"},"to":{"type":"expression","normalized":"now","date":"2023-08-07T08:44:23.174Z"}}}}},"visualization":"table"},"davisAnalysis":{"analyzerComponentState":{"resultState":{}}},"showInput":false,"height":100,"davisAnalytics":{"analyzerComponentState":{"resultState":{}}}},{"id":"8ab92f1a-07e7-42b4-9c8d-59d05576379f","type":"dql","title":"Number of affected entities over last 3 days (1-hour step)","showTitle":true,"height":190,"showInput":false,"showSettings":false,"state":{"input":{"timeframe":{"from":"now-3d","to":"now"},"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.mute.status==\"NOT_MUTED\" AND vulnerability.resolution.status==\"OPEN\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n| summarize `Affected entities`=arraySize(collectDistinct(affected_entity.id)), by:{timestamp}\n| sort timestamp, direction:\"descending\"\n| summarize `Affected entities`=takeFirst(`Affected entities`), by:{timestamp=bin(timestamp,1h)}\n| sort timestamp, direction:\"descending\""},"visualizationSettings":{"chartSettings":{"gapPolicy":"connect","legend":{"hidden":true},"leftYAxisSettings":{"scale":"linear"},"valueRepresentation":"absolute"},"table":{"lineWrapIds":[],"enableLineWrap":false}},"showConsole":true,"state":"success","visualization":"areaChart","result":{"code":200,"input":{"timeframe":{"from":"now-3d","to":"now"},"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.mute.status==\"NOT_MUTED\" AND vulnerability.resolution.status==\"OPEN\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n| summarize `Affected entities`=arraySize(collectDistinct(affected_entity.id)), by:{timestamp}\n| sort timestamp, direction:\"descending\"\n| summarize `Affected entities`=takeFirst(`Affected entities`), by:{timestamp=bin(timestamp,1h)}\n| sort timestamp, direction:\"descending\""},"dateTime":"2023-08-08T00:55:56.324Z","value":{"records":[{"timestamp":"2023-08-07T20:00:00.000000000-04:00","Affected entities":"4"},{"timestamp":"2023-08-07T19:00:00.000000000-04:00","Affected entities":"4"},{"timestamp":"2023-08-07T18:00:00.000000000-04:00","Affected entities":"4"},{"timestamp":"2023-08-07T17:00:00.000000000-04:00","Affected entities":"4"},{"timestamp":"2023-08-07T16:00:00.000000000-04:00","Affected entities":"4"},{"timestamp":"2023-08-07T15:00:00.000000000-04:00","Affected entities":"4"},{"timestamp":"2023-08-07T14:00:00.000000000-04:00","Affected entities":"4"},{"timestamp":"2023-08-07T13:00:00.000000000-04:00","Affected entities":"4"},{"timestamp":"2023-08-07T12:00:00.000000000-04:00","Affected entities":"4"},{"timestamp":"2023-08-07T11:00:00.000000000-04:00","Affected entities":"4"},{"timestamp":"2023-08-07T10:00:00.000000000-04:00","Affected entities":"4"},{"timestamp":"2023-08-07T09:00:00.000000000-04:00","Affected entities":"4"},{"timestamp":"2023-08-07T08:00:00.000000000-04:00","Affected entities":"4"}],"metadata":{"grail":{"canonicalQuery":"fetch events\n| filter event.provider == \"Dynatrace\"\n| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level == \"ENTITY\"\n| filter vulnerability.mute.status == \"NOT_MUTED\" AND vulnerability.resolution.status == \"OPEN\"\n| filter contains(affected_entity.vulnerable_component.name, \"apache\")\n| summarize by:{timestamp}, arraySize(collectDistinct(affected_entity.id)), alias:`Affected entities`\n| sort timestamp, direction:\"descending\"\n| summarize by:{bin(timestamp, 1h), alias:timestamp}, takeFirst(`Affected entities`), alias:`Affected entities`\n| sort timestamp, direction:\"descending\"","timezone":"America/New_York","query":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.mute.status==\"NOT_MUTED\" AND vulnerability.resolution.status==\"OPEN\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n| summarize `Affected entities`=arraySize(collectDistinct(affected_entity.id)), by:{timestamp}\n| sort timestamp, direction:\"descending\"\n| summarize `Affected entities`=takeFirst(`Affected entities`), by:{timestamp=bin(timestamp,1h)}\n| sort timestamp, direction:\"descending\"","scannedRecords":47860,"dqlVersion":"V1_0","scannedBytes":7996864,"analysisTimeframe":{"start":"2023-08-05T00:55:56.325Z","end":"2023-08-08T00:55:56.325Z"},"locale":"","executionTimeMilliseconds":126,"notifications":[],"queryId":"ab74cb4a-5989-4627-a9ee-ea265687e9ea","sampled":false}},"types":[{"mappings":{"timestamp":{"type":"timestamp"},"Affected entities":{"type":"long"}},"indexRange":[0,12]}]},"notifications":[]}},"davisAnalytics":{"analyzerComponentState":{"resultState":{}}},"davisAnalysis":{"analyzerComponentState":{"resultState":{}}}},{"id":"e820b567-f882-4921-9665-740b4829fd35","type":"dql","title":"Summary of related entities","showTitle":false,"state":{"input":{"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"               \n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n// filter for the latest snapshot per entity\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.kind == \"SECURITY_EVENT\" \n| filter event.category == \"VULNERABILITY_MANAGEMENT\" \n| filter event.provider == \"Dynatrace\" \n| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\" \n| filter event.level==\"ENTITY\"  \n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n| summarize\n`Related hosts`=replaceString(substring(toString(arrayDistinct(arrayRemoveNulls(collectArray(related_entities.hosts.ids)))),from:2,to:-2),\"[\",\"\"),\n`Related applications`=replaceString(substring(toString(arrayDistinct(arrayRemoveNulls(collectArray(related_entities.applications.ids)))),from:2,to:-2),\"[\",\"\"),\n`Related services`=replaceString(substring(toString(arrayDistinct(arrayRemoveNulls(collectArray(related_entities.services.ids)))),from:2,to:-2),\"[\",\"\"),\n`Related databases`=replaceString(substring(toString(arrayDistinct(arrayRemoveNulls(collectArray(related_entities.databases.ids)))),from:2,to:-2),\"[\",\"\"),\n`Related kubernetes workloads`=replaceString(substring(toString(arrayDistinct(arrayRemoveNulls(collectArray(related_entities.kubernetes_workloads.ids)))),from:2,to:-2),\"[\",\"\"),\n`Related kubernetes clusters`=replaceString(substring(toString(arrayDistinct(arrayRemoveNulls(collectArray(related_entities.kubernetes_clusters.ids)))),from:2,to:-2),\"[\",\"\")\n| fields \n`Related hosts`= arrayDistinct(splitString(toString(replaceString(toString(`Related hosts`),\"], \",\",\")),\",\")),\n`Related applications`= arrayDistinct(splitString(toString(replaceString(toString(`Related applications`),\"], \",\",\")),\",\")),\n`Related services`= arrayDistinct(splitString(toString(replaceString(toString(`Related services`),\"], \",\",\")),\",\")),\n`Related databases`= arrayDistinct(splitString(toString(replaceString(toString(`Related databases`),\"], \",\",\")),\",\")),\n`Related kubernetes workloads`= arrayDistinct(splitString(toString(replaceString(toString(`Related kubernetes workloads`),\"], \",\",\")),\",\")),\n`Related kubernetes clusters`= arrayDistinct(splitString(toString(replaceString(toString(`Related kubernetes clusters`),\"], \",\",\")),\",\"))\n| fields \n`Related hosts`=if(not(in(\"\",`Related hosts`)),arraySize(`Related hosts`), else:\"-\"),\n`Related applications`=if(not(in(\"\",`Related applications`)),arraySize(`Related applications`), else:\"-\"),\n`Related services`=if(not(in(\"\",`Related services`)),arraySize(`Related services`), else:\"-\"),\n`Related databases`=if(not(in(\"\",`Related databases`)),arraySize(`Related databases`), else:\"-\"),\n`Related kubernetes workloads`=if(not(in(\"\",`Related kubernetes workloads`)),arraySize(`Related kubernetes workloads`), else:\"-\"),\n`Related kubernetes clusters`=if(not(in(\"\",`Related kubernetes clusters`)),arraySize(`Related kubernetes clusters`), else:\"-\")","timeframe":{"from":"now-15m","to":"now","details":{"from":{"type":"expression","normalized":"now-15m","date":"2023-08-07T08:29:40.768Z"},"to":{"type":"expression","normalized":"now","date":"2023-08-07T08:44:40.768Z"}}}},"state":"success","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute"}},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"rowDensity":"condensed","enableLineWrap":true,"enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[],"firstVisibleRowIndex":0,"columnWidths":{}}},"result":{"code":200,"value":{"records":[{"Related hosts":"3","Related applications":"-","Related services":"7","Related databases":"-","Related kubernetes workloads":"4","Related kubernetes clusters":"1"}],"metadata":{"grail":{"canonicalQuery":"fetch events\n| filter event.provider == \"Dynatrace\"\n| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level == \"ENTITY\"\n| filter contains(affected_entity.vulnerable_component.name, \"apache\")\n| fieldsAdd \"match\", alias:matcher\n| lookup \n\t[\n\t\tfetch events\n\t\t| filter event.kind == \"SECURITY_EVENT\"\n\t\t| filter event.category == \"VULNERABILITY_MANAGEMENT\"\n\t\t| filter event.provider == \"Dynatrace\"\n\t\t| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n\t\t| filter event.level == \"ENTITY\"\n\t\t| filter contains(affected_entity.vulnerable_component.name, \"apache\")\n\t\t| fields {timestamp, alias:maxTimestamp}, {\"match\", alias:matcher}\n\t\t| limit 1\n\t], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp == maxTimestamp\n| summarize {replaceString(substring(toString(arrayDistinct(arrayRemoveNulls(collectArray(related_entities.hosts.ids)))), from:2, to:-2), \"[\", \"\"), alias:`Related hosts`}, {replaceString(substring(toString(arrayDistinct(arrayRemoveNulls(collectArray(related_entities.applications.ids)))), from:2, to:-2), \"[\", \"\"), alias:`Related applications`}, {replaceString(substring(toString(arrayDistinct(arrayRemoveNulls(collectArray(related_entities.services.ids)))), from:2, to:-2), \"[\", \"\"), alias:`Related services`}, {replaceString(substring(toString(arrayDistinct(arrayRemoveNulls(collectArray(related_entities.databases.ids)))), from:2, to:-2), \"[\", \"\"), alias:`Related databases`}, {replaceString(substring(toString(arrayDistinct(arrayRemoveNulls(collectArray(related_entities.kubernetes_workloads.ids)))), from:2, to:-2), \"[\", \"\"), alias:`Related kubernetes workloads`}, {replaceString(substring(toString(arrayDistinct(arrayRemoveNulls(collectArray(related_entities.kubernetes_clusters.ids)))), from:2, to:-2), \"[\", \"\"), alias:`Related kubernetes clusters`}\n| fields {arrayDistinct(splitString(toString(replaceString(toString(`Related hosts`), \"], \", \",\")), \",\")), alias:`Related hosts`}, {arrayDistinct(splitString(toString(replaceString(toString(`Related applications`), \"], \", \",\")), \",\")), alias:`Related applications`}, {arrayDistinct(splitString(toString(replaceString(toString(`Related services`), \"], \", \",\")), \",\")), alias:`Related services`}, {arrayDistinct(splitString(toString(replaceString(toString(`Related databases`), \"], \", \",\")), \",\")), alias:`Related databases`}, {arrayDistinct(splitString(toString(replaceString(toString(`Related kubernetes workloads`), \"], \", \",\")), \",\")), alias:`Related kubernetes workloads`}, {arrayDistinct(splitString(toString(replaceString(toString(`Related kubernetes clusters`), \"], \", \",\")), \",\")), alias:`Related kubernetes clusters`}\n| fields {if(NOT in(\"\", `Related hosts`), arraySize(`Related hosts`), else:\"-\"), alias:`Related hosts`}, {if(NOT in(\"\", `Related applications`), arraySize(`Related applications`), else:\"-\"), alias:`Related applications`}, {if(NOT in(\"\", `Related services`), arraySize(`Related services`), else:\"-\"), alias:`Related services`}, {if(NOT in(\"\", `Related databases`), arraySize(`Related databases`), else:\"-\"), alias:`Related databases`}, {if(NOT in(\"\", `Related kubernetes workloads`), arraySize(`Related kubernetes workloads`), else:\"-\"), alias:`Related kubernetes workloads`}, {if(NOT in(\"\", `Related kubernetes clusters`), arraySize(`Related kubernetes clusters`), else:\"-\"), alias:`Related kubernetes clusters`}","timezone":"America/New_York","query":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"               \n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n// filter for the latest snapshot per entity\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.kind == \"SECURITY_EVENT\" \n| filter event.category == \"VULNERABILITY_MANAGEMENT\" \n| filter event.provider == \"Dynatrace\" \n| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\" \n| filter event.level==\"ENTITY\"  \n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n| summarize\n`Related hosts`=replaceString(substring(toString(arrayDistinct(arrayRemoveNulls(collectArray(related_entities.hosts.ids)))),from:2,to:-2),\"[\",\"\"),\n`Related applications`=replaceString(substring(toString(arrayDistinct(arrayRemoveNulls(collectArray(related_entities.applications.ids)))),from:2,to:-2),\"[\",\"\"),\n`Related services`=replaceString(substring(toString(arrayDistinct(arrayRemoveNulls(collectArray(related_entities.services.ids)))),from:2,to:-2),\"[\",\"\"),\n`Related databases`=replaceString(substring(toString(arrayDistinct(arrayRemoveNulls(collectArray(related_entities.databases.ids)))),from:2,to:-2),\"[\",\"\"),\n`Related kubernetes workloads`=replaceString(substring(toString(arrayDistinct(arrayRemoveNulls(collectArray(related_entities.kubernetes_workloads.ids)))),from:2,to:-2),\"[\",\"\"),\n`Related kubernetes clusters`=replaceString(substring(toString(arrayDistinct(arrayRemoveNulls(collectArray(related_entities.kubernetes_clusters.ids)))),from:2,to:-2),\"[\",\"\")\n| fields \n`Related hosts`= arrayDistinct(splitString(toString(replaceString(toString(`Related hosts`),\"], \",\",\")),\",\")),\n`Related applications`= arrayDistinct(splitString(toString(replaceString(toString(`Related applications`),\"], \",\",\")),\",\")),\n`Related services`= arrayDistinct(splitString(toString(replaceString(toString(`Related services`),\"], \",\",\")),\",\")),\n`Related databases`= arrayDistinct(splitString(toString(replaceString(toString(`Related databases`),\"], \",\",\")),\",\")),\n`Related kubernetes workloads`= arrayDistinct(splitString(toString(replaceString(toString(`Related kubernetes workloads`),\"], \",\",\")),\",\")),\n`Related kubernetes clusters`= arrayDistinct(splitString(toString(replaceString(toString(`Related kubernetes clusters`),\"], \",\",\")),\",\"))\n| fields \n`Related hosts`=if(not(in(\"\",`Related hosts`)),arraySize(`Related hosts`), else:\"-\"),\n`Related applications`=if(not(in(\"\",`Related applications`)),arraySize(`Related applications`), else:\"-\"),\n`Related services`=if(not(in(\"\",`Related services`)),arraySize(`Related services`), else:\"-\"),\n`Related databases`=if(not(in(\"\",`Related databases`)),arraySize(`Related databases`), else:\"-\"),\n`Related kubernetes workloads`=if(not(in(\"\",`Related kubernetes workloads`)),arraySize(`Related kubernetes workloads`), else:\"-\"),\n`Related kubernetes clusters`=if(not(in(\"\",`Related kubernetes clusters`)),arraySize(`Related kubernetes clusters`), else:\"-\")","scannedRecords":3473,"dqlVersion":"V1_0","scannedBytes":599283,"analysisTimeframe":{"start":"2023-08-08T00:40:56.328Z","end":"2023-08-08T00:55:56.328Z"},"locale":"","executionTimeMilliseconds":444,"notifications":[],"queryId":"baf8e284-8e51-4147-b9c1-06425d01c05d","sampled":false}},"types":[{"mappings":{"Related hosts":{"type":"long"},"Related applications":{"type":"string"},"Related services":{"type":"long"},"Related databases":{"type":"string"},"Related kubernetes workloads":{"type":"long"},"Related kubernetes clusters":{"type":"long"}},"indexRange":[0,0]}]},"notifications":[],"dateTime":"2023-08-08T00:55:56.327Z","input":{"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"               \n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n// filter for the latest snapshot per entity\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.kind == \"SECURITY_EVENT\" \n| filter event.category == \"VULNERABILITY_MANAGEMENT\" \n| filter event.provider == \"Dynatrace\" \n| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\" \n| filter event.level==\"ENTITY\"  \n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n| summarize\n`Related hosts`=replaceString(substring(toString(arrayDistinct(arrayRemoveNulls(collectArray(related_entities.hosts.ids)))),from:2,to:-2),\"[\",\"\"),\n`Related applications`=replaceString(substring(toString(arrayDistinct(arrayRemoveNulls(collectArray(related_entities.applications.ids)))),from:2,to:-2),\"[\",\"\"),\n`Related services`=replaceString(substring(toString(arrayDistinct(arrayRemoveNulls(collectArray(related_entities.services.ids)))),from:2,to:-2),\"[\",\"\"),\n`Related databases`=replaceString(substring(toString(arrayDistinct(arrayRemoveNulls(collectArray(related_entities.databases.ids)))),from:2,to:-2),\"[\",\"\"),\n`Related kubernetes workloads`=replaceString(substring(toString(arrayDistinct(arrayRemoveNulls(collectArray(related_entities.kubernetes_workloads.ids)))),from:2,to:-2),\"[\",\"\"),\n`Related kubernetes clusters`=replaceString(substring(toString(arrayDistinct(arrayRemoveNulls(collectArray(related_entities.kubernetes_clusters.ids)))),from:2,to:-2),\"[\",\"\")\n| fields \n`Related hosts`= arrayDistinct(splitString(toString(replaceString(toString(`Related hosts`),\"], \",\",\")),\",\")),\n`Related applications`= arrayDistinct(splitString(toString(replaceString(toString(`Related applications`),\"], \",\",\")),\",\")),\n`Related services`= arrayDistinct(splitString(toString(replaceString(toString(`Related services`),\"], \",\",\")),\",\")),\n`Related databases`= arrayDistinct(splitString(toString(replaceString(toString(`Related databases`),\"], \",\",\")),\",\")),\n`Related kubernetes workloads`= arrayDistinct(splitString(toString(replaceString(toString(`Related kubernetes workloads`),\"], \",\",\")),\",\")),\n`Related kubernetes clusters`= arrayDistinct(splitString(toString(replaceString(toString(`Related kubernetes clusters`),\"], \",\",\")),\",\"))\n| fields \n`Related hosts`=if(not(in(\"\",`Related hosts`)),arraySize(`Related hosts`), else:\"-\"),\n`Related applications`=if(not(in(\"\",`Related applications`)),arraySize(`Related applications`), else:\"-\"),\n`Related services`=if(not(in(\"\",`Related services`)),arraySize(`Related services`), else:\"-\"),\n`Related databases`=if(not(in(\"\",`Related databases`)),arraySize(`Related databases`), else:\"-\"),\n`Related kubernetes workloads`=if(not(in(\"\",`Related kubernetes workloads`)),arraySize(`Related kubernetes workloads`), else:\"-\"),\n`Related kubernetes clusters`=if(not(in(\"\",`Related kubernetes clusters`)),arraySize(`Related kubernetes clusters`), else:\"-\")","timeframe":{"from":"now-15m","to":"now","details":{"from":{"type":"expression","normalized":"now-15m","date":"2023-08-07T08:29:40.768Z"},"to":{"type":"expression","normalized":"now","date":"2023-08-07T08:44:40.768Z"}}}}},"visualization":"table"},"davisAnalysis":{"analyzerComponentState":{"resultState":{}}},"showInput":false,"height":91,"davisAnalytics":{"analyzerComponentState":{"resultState":{}}}},{"id":"68cc5589-e8b0-4fce-9a57-f0498b0441ec","type":"markdown","markdown":"## 🔍 Vulnerability details\n--- \nPriority list of vulnerabilities and their recent change events."},{"id":"26ad63a0-eda9-4065-bc22-f54d6022d496","type":"dql","showTitle":true,"height":647,"showInput":false,"title":"List of open vulnerabilities by criticality and affected entities count","showSettings":false,"state":{"input":{"timeframe":{"from":"now-15m","to":"now"},"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.resolution.status==\"OPEN\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.resolution.status==\"OPEN\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n//end of filtering for the latest snapshot\n// now summarize on the vulnerability level\n| summarize\n{\n`Last status`=takeFirst(vulnerability.resolution.change_date),\n`Muted`=takeFirst(vulnerability.mute.status==\"MUTED\"),\n`# Affected entities`=arraySize(collectDistinct(affected_entity.id)),\n`Status`=takeFirst(vulnerability.resolution.status),\n`Component name`=takeFirst(affected_entity.vulnerable_component.name),\n`DSS`=round(takeFirst(vulnerability.risk.score),decimals:1),\n`Davis Security Level`=takeFirst(vulnerability.risk.level),\n`Problem title`=takeFirst(vulnerability.title),\n`External id`=takeFirst(vulnerability.external_id),\n`Technology`=takeFirst(vulnerability.technology),\n`CVE list`=takeFirst(vulnerability.references.cve),\nTitle=takeFirst(vulnerability.title),\n`# Function in use`=countIf(vulnerability.davis_assessment.vulnerable_function_status==\"IN_USE\"),\n`# Function no data`=countIf(vulnerability.davis_assessment.vulnerable_function_status==\"NOT_AVAILABLE\"),\n`# Exposure to internet`=countIf(vulnerability.davis_assessment.exposure_status==\"PUBLIC_NETWORK\"),\n`# Exposure no data`=countIf(vulnerability.davis_assessment.exposure_status==\"NOT_AVAILABLE\"),\n`# Reachable databases`=takeFirst(related_entities.databases.count),\n`# Exploit`=countIf(vulnerability.davis_assessment.exploit_status==\"AVAILABLE\")\n}, by: {vulnerability.display_id}\n| fieldsAdd risk_order=if(`Davis Security Level`==\"CRITICAL\",1, else:if(`Davis Security Level`==\"HIGH\",2,  else:if(`Davis Security Level`==\"MEDIUM\",3 ,else:if(`Davis Security Level`==\"LOW\",4))))\n| fields \nrisk_order,\n`Davis Security Score`=concat(`Davis Security Level`,\" (\",`DSS`,\")\"),\nDSS,\nvulnerability.display_id,\nTitle,\n`CVE list`,\nStatus=if(Status==\"RESOLVED\",concat(\"✅\",\"Resolved\"),else:if(Muted, concat(\"⚫\",\" Muted(\",Status,\")\"), else:Status)),\n`Status date`=toTimestamp(`Last status`),\n`# Function in use`,\n`Function usage`=if(`# Function in use`>0,concat(\"❗\",\"In use\"),else:if(`# Function no data`>0,\"No data\",else:\"Not in use\")),\n`# Exposure to internet`,\n`Internet exposure`=if(`# Exposure to internet`>0,concat(\"❗\",\"Public\"),else:if(`# Exposure no data`>0,\"No data\",else:\"Not exposed\")),\n`# Exploit`,\n`Exploit`=if(`# Exploit`>0,concat(\"❗\",\"Exists\"),else:\"No data\"),\n`# Reachable databases`,\n`Data assets`=if(`# Reachable databases`>0,concat(\"❗\",\"Reachable\"), else:\"Unreachable\"),\n`Affected entities`=`# Affected entities`,\n`External id`\n| sort   Status,  risk_order, {`# Function in use`, direction:\"descending\"}, {`# Exposure to internet`, direction:\"descending\"}, \n{`# Exploit`, direction:\"descending\"}, {`# Reachable databases`, direction:\"descending\"}, {`Affected entities`, direction:\"descending\"}, \n{DSS, direction:\"descending\"}\n| fieldsRemove DSS, risk_order, `# Function in use`,`# Reachable databases`,`# Exposure to internet`,`# Exploit`"},"visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"table":{"displayMode":"edit","lineWrapIds":[],"firstVisibleRowIndex":0,"enableLineWrap":true}},"showConsole":true,"state":"success","visualization":"table","result":{"code":200,"value":{"records":[{"Davis Security Score":"HIGH (8.3)","vulnerability.display_id":"S-123","Title":"XML External Entity (XXE) Injection","CVE list":["CVE-2021-23926"],"Status":"OPEN","Status date":"2023-08-03T15:24:28.599000000-04:00","Function usage":"No data","Internet exposure":"❗Public","Exploit":"No data","Data assets":"Unreachable","Affected entities":"1","External id":"SNYK-JAVA-ORGAPACHEXMLBEANS-1060048"},{"Davis Security Score":"MEDIUM (5.3)","vulnerability.display_id":"S-97","Title":"Improper Input Validation","CVE list":["CVE-2020-13956"],"Status":"OPEN","Status date":"2023-08-03T14:53:28.599000000-04:00","Function usage":"No data","Internet exposure":"❗Public","Exploit":"No data","Data assets":"Unreachable","Affected entities":"4","External id":"SNYK-JAVA-ORGAPACHEHTTPCOMPONENTS-1048058"},{"Davis Security Score":"MEDIUM (6.5)","vulnerability.display_id":"S-98","Title":"Denial of Service (DoS)","CVE list":["CVE-2023-24998"],"Status":"OPEN","Status date":"2023-08-03T14:53:28.599000000-04:00","Function usage":"No data","Internet exposure":"❗Public","Exploit":"No data","Data assets":"Unreachable","Affected entities":"2","External id":"SNYK-JAVA-ORGAPACHETOMCAT-3326458"},{"Davis Security Score":"MEDIUM (6.5)","vulnerability.display_id":"S-99","Title":"Denial of Service (DoS)","CVE list":["CVE-2023-24998"],"Status":"OPEN","Status date":"2023-08-03T14:53:28.599000000-04:00","Function usage":"No data","Internet exposure":"❗Public","Exploit":"No data","Data assets":"Unreachable","Affected entities":"2","External id":"SNYK-JAVA-ORGAPACHETOMCAT-3326460"},{"Davis Security Score":"MEDIUM (5.3)","vulnerability.display_id":"S-100","Title":"Unprotected Transport of Credentials","CVE list":["CVE-2023-28708"],"Status":"OPEN","Status date":"2023-08-03T14:53:28.599000000-04:00","Function usage":"No data","Internet exposure":"❗Public","Exploit":"No data","Data assets":"Unreachable","Affected entities":"2","External id":"SNYK-JAVA-ORGAPACHETOMCAT-3369685"}],"metadata":{"grail":{"canonicalQuery":"fetch events\n| filter event.provider == \"Dynatrace\"\n| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level == \"ENTITY\"\n| filter vulnerability.resolution.status == \"OPEN\"\n| filter contains(affected_entity.vulnerable_component.name, \"apache\")\n| fieldsAdd \"match\", alias:matcher\n| lookup \n\t[\n\t\tfetch events\n\t\t| filter event.provider == \"Dynatrace\"\n\t\t| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n\t\t| filter event.level == \"ENTITY\"\n\t\t| filter vulnerability.resolution.status == \"OPEN\"\n\t\t| filter contains(affected_entity.vulnerable_component.name, \"apache\")\n\t\t| fields {timestamp, alias:maxTimestamp}, {\"match\", alias:matcher}\n\t\t| limit 1\n\t], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp == maxTimestamp\n| summarize by:{vulnerability.display_id}, {{takeFirst(vulnerability.resolution.change_date), alias:`Last status`}, {takeFirst(vulnerability.mute.status == \"MUTED\"), alias:Muted}, {arraySize(collectDistinct(affected_entity.id)), alias:`# Affected entities`}, {takeFirst(vulnerability.resolution.status), alias:Status}, {takeFirst(affected_entity.vulnerable_component.name), alias:`Component name`}, {round(takeFirst(vulnerability.risk.score), decimals:1), alias:DSS}, {takeFirst(vulnerability.risk.level), alias:`Davis Security Level`}, {takeFirst(vulnerability.title), alias:`Problem title`}, {takeFirst(vulnerability.external_id), alias:`External id`}, {takeFirst(vulnerability.technology), alias:Technology}, {takeFirst(vulnerability.references.cve), alias:`CVE list`}, {takeFirst(vulnerability.title), alias:Title}, {countIf(vulnerability.davis_assessment.vulnerable_function_status == \"IN_USE\"), alias:`# Function in use`}, {countIf(vulnerability.davis_assessment.vulnerable_function_status == \"NOT_AVAILABLE\"), alias:`# Function no data`}, {countIf(vulnerability.davis_assessment.exposure_status == \"PUBLIC_NETWORK\"), alias:`# Exposure to internet`}, {countIf(vulnerability.davis_assessment.exposure_status == \"NOT_AVAILABLE\"), alias:`# Exposure no data`}, {takeFirst(related_entities.databases.count), alias:`# Reachable databases`}, {countIf(vulnerability.davis_assessment.exploit_status == \"AVAILABLE\"), alias:`# Exploit`}}\n| fieldsAdd if(`Davis Security Level` == \"CRITICAL\", 1, else:if(`Davis Security Level` == \"HIGH\", 2, else:if(`Davis Security Level` == \"MEDIUM\", 3, else:if(`Davis Security Level` == \"LOW\", 4)))), alias:risk_order\n| fields risk_order, {concat(`Davis Security Level`, \" (\", DSS, \")\"), alias:`Davis Security Score`}, DSS, vulnerability.display_id, Title, `CVE list`, {if(Status == \"RESOLVED\", concat(\"✅\", \"Resolved\"), else:if(Muted, concat(\"⚫\", \" Muted(\", Status, \")\"), else:Status)), alias:Status}, {toTimestamp(`Last status`), alias:`Status date`}, `# Function in use`, {if(`# Function in use` > 0, concat(\"❗\", \"In use\"), else:if(`# Function no data` > 0, \"No data\", else:\"Not in use\")), alias:`Function usage`}, `# Exposure to internet`, {if(`# Exposure to internet` > 0, concat(\"❗\", \"Public\"), else:if(`# Exposure no data` > 0, \"No data\", else:\"Not exposed\")), alias:`Internet exposure`}, `# Exploit`, {if(`# Exploit` > 0, concat(\"❗\", \"Exists\"), else:\"No data\"), alias:Exploit}, `# Reachable databases`, {if(`# Reachable databases` > 0, concat(\"❗\", \"Reachable\"), else:\"Unreachable\"), alias:`Data assets`}, {`# Affected entities`, alias:`Affected entities`}, `External id`\n| sort Status, risk_order, {`# Function in use`, direction:\"descending\"}, {`# Exposure to internet`, direction:\"descending\"}, {`# Exploit`, direction:\"descending\"}, {`# Reachable databases`, direction:\"descending\"}, {`Affected entities`, direction:\"descending\"}, {DSS, direction:\"descending\"}\n| fieldsRemove DSS, risk_order, `# Function in use`, `# Reachable databases`, `# Exposure to internet`, `# Exploit`","timezone":"America/New_York","query":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.resolution.status==\"OPEN\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.resolution.status==\"OPEN\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n//end of filtering for the latest snapshot\n// now summarize on the vulnerability level\n| summarize\n{\n`Last status`=takeFirst(vulnerability.resolution.change_date),\n`Muted`=takeFirst(vulnerability.mute.status==\"MUTED\"),\n`# Affected entities`=arraySize(collectDistinct(affected_entity.id)),\n`Status`=takeFirst(vulnerability.resolution.status),\n`Component name`=takeFirst(affected_entity.vulnerable_component.name),\n`DSS`=round(takeFirst(vulnerability.risk.score),decimals:1),\n`Davis Security Level`=takeFirst(vulnerability.risk.level),\n`Problem title`=takeFirst(vulnerability.title),\n`External id`=takeFirst(vulnerability.external_id),\n`Technology`=takeFirst(vulnerability.technology),\n`CVE list`=takeFirst(vulnerability.references.cve),\nTitle=takeFirst(vulnerability.title),\n`# Function in use`=countIf(vulnerability.davis_assessment.vulnerable_function_status==\"IN_USE\"),\n`# Function no data`=countIf(vulnerability.davis_assessment.vulnerable_function_status==\"NOT_AVAILABLE\"),\n`# Exposure to internet`=countIf(vulnerability.davis_assessment.exposure_status==\"PUBLIC_NETWORK\"),\n`# Exposure no data`=countIf(vulnerability.davis_assessment.exposure_status==\"NOT_AVAILABLE\"),\n`# Reachable databases`=takeFirst(related_entities.databases.count),\n`# Exploit`=countIf(vulnerability.davis_assessment.exploit_status==\"AVAILABLE\")\n}, by: {vulnerability.display_id}\n| fieldsAdd risk_order=if(`Davis Security Level`==\"CRITICAL\",1, else:if(`Davis Security Level`==\"HIGH\",2,  else:if(`Davis Security Level`==\"MEDIUM\",3 ,else:if(`Davis Security Level`==\"LOW\",4))))\n| fields \nrisk_order,\n`Davis Security Score`=concat(`Davis Security Level`,\" (\",`DSS`,\")\"),\nDSS,\nvulnerability.display_id,\nTitle,\n`CVE list`,\nStatus=if(Status==\"RESOLVED\",concat(\"✅\",\"Resolved\"),else:if(Muted, concat(\"⚫\",\" Muted(\",Status,\")\"), else:Status)),\n`Status date`=toTimestamp(`Last status`),\n`# Function in use`,\n`Function usage`=if(`# Function in use`>0,concat(\"❗\",\"In use\"),else:if(`# Function no data`>0,\"No data\",else:\"Not in use\")),\n`# Exposure to internet`,\n`Internet exposure`=if(`# Exposure to internet`>0,concat(\"❗\",\"Public\"),else:if(`# Exposure no data`>0,\"No data\",else:\"Not exposed\")),\n`# Exploit`,\n`Exploit`=if(`# Exploit`>0,concat(\"❗\",\"Exists\"),else:\"No data\"),\n`# Reachable databases`,\n`Data assets`=if(`# Reachable databases`>0,concat(\"❗\",\"Reachable\"), else:\"Unreachable\"),\n`Affected entities`=`# Affected entities`,\n`External id`\n| sort   Status,  risk_order, {`# Function in use`, direction:\"descending\"}, {`# Exposure to internet`, direction:\"descending\"}, \n{`# Exploit`, direction:\"descending\"}, {`# Reachable databases`, direction:\"descending\"}, {`Affected entities`, direction:\"descending\"}, \n{DSS, direction:\"descending\"}\n| fieldsRemove DSS, risk_order, `# Function in use`,`# Reachable databases`,`# Exposure to internet`,`# Exploit`","scannedRecords":3473,"dqlVersion":"V1_0","scannedBytes":599283,"analysisTimeframe":{"start":"2023-08-08T00:40:56.332Z","end":"2023-08-08T00:55:56.332Z"},"locale":"","executionTimeMilliseconds":441,"notifications":[],"queryId":"c724c421-c5db-4b66-82f9-190e88aa5ada","sampled":false}},"types":[{"mappings":{"Davis Security Score":{"type":"string"},"vulnerability.display_id":{"type":"string"},"Title":{"type":"string"},"CVE list":{"type":"array","types":[{"mappings":{"element":{"type":"string"}},"indexRange":[0,0]}]},"Status":{"type":"string"},"Status date":{"type":"timestamp"},"Function usage":{"type":"string"},"Internet exposure":{"type":"string"},"Exploit":{"type":"string"},"Data assets":{"type":"string"},"Affected entities":{"type":"long"},"External id":{"type":"string"}},"indexRange":[0,4]}]},"dateTime":"2023-08-08T00:55:56.331Z","input":{"timeframe":{"from":"now-15m","to":"now"},"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.resolution.status==\"OPEN\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.resolution.status==\"OPEN\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n//end of filtering for the latest snapshot\n// now summarize on the vulnerability level\n| summarize\n{\n`Last status`=takeFirst(vulnerability.resolution.change_date),\n`Muted`=takeFirst(vulnerability.mute.status==\"MUTED\"),\n`# Affected entities`=arraySize(collectDistinct(affected_entity.id)),\n`Status`=takeFirst(vulnerability.resolution.status),\n`Component name`=takeFirst(affected_entity.vulnerable_component.name),\n`DSS`=round(takeFirst(vulnerability.risk.score),decimals:1),\n`Davis Security Level`=takeFirst(vulnerability.risk.level),\n`Problem title`=takeFirst(vulnerability.title),\n`External id`=takeFirst(vulnerability.external_id),\n`Technology`=takeFirst(vulnerability.technology),\n`CVE list`=takeFirst(vulnerability.references.cve),\nTitle=takeFirst(vulnerability.title),\n`# Function in use`=countIf(vulnerability.davis_assessment.vulnerable_function_status==\"IN_USE\"),\n`# Function no data`=countIf(vulnerability.davis_assessment.vulnerable_function_status==\"NOT_AVAILABLE\"),\n`# Exposure to internet`=countIf(vulnerability.davis_assessment.exposure_status==\"PUBLIC_NETWORK\"),\n`# Exposure no data`=countIf(vulnerability.davis_assessment.exposure_status==\"NOT_AVAILABLE\"),\n`# Reachable databases`=takeFirst(related_entities.databases.count),\n`# Exploit`=countIf(vulnerability.davis_assessment.exploit_status==\"AVAILABLE\")\n}, by: {vulnerability.display_id}\n| fieldsAdd risk_order=if(`Davis Security Level`==\"CRITICAL\",1, else:if(`Davis Security Level`==\"HIGH\",2,  else:if(`Davis Security Level`==\"MEDIUM\",3 ,else:if(`Davis Security Level`==\"LOW\",4))))\n| fields \nrisk_order,\n`Davis Security Score`=concat(`Davis Security Level`,\" (\",`DSS`,\")\"),\nDSS,\nvulnerability.display_id,\nTitle,\n`CVE list`,\nStatus=if(Status==\"RESOLVED\",concat(\"✅\",\"Resolved\"),else:if(Muted, concat(\"⚫\",\" Muted(\",Status,\")\"), else:Status)),\n`Status date`=toTimestamp(`Last status`),\n`# Function in use`,\n`Function usage`=if(`# Function in use`>0,concat(\"❗\",\"In use\"),else:if(`# Function no data`>0,\"No data\",else:\"Not in use\")),\n`# Exposure to internet`,\n`Internet exposure`=if(`# Exposure to internet`>0,concat(\"❗\",\"Public\"),else:if(`# Exposure no data`>0,\"No data\",else:\"Not exposed\")),\n`# Exploit`,\n`Exploit`=if(`# Exploit`>0,concat(\"❗\",\"Exists\"),else:\"No data\"),\n`# Reachable databases`,\n`Data assets`=if(`# Reachable databases`>0,concat(\"❗\",\"Reachable\"), else:\"Unreachable\"),\n`Affected entities`=`# Affected entities`,\n`External id`\n| sort   Status,  risk_order, {`# Function in use`, direction:\"descending\"}, {`# Exposure to internet`, direction:\"descending\"}, \n{`# Exploit`, direction:\"descending\"}, {`# Reachable databases`, direction:\"descending\"}, {`Affected entities`, direction:\"descending\"}, \n{DSS, direction:\"descending\"}\n| fieldsRemove DSS, risk_order, `# Function in use`,`# Reachable databases`,`# Exposure to internet`,`# Exploit`"},"notifications":[]}},"davisAnalytics":{"analyzerComponentState":{"resultState":{}}},"davisAnalysis":{"analyzerComponentState":{"resultState":{}}}},{"id":"6b5a84be-9641-4acc-a8a6-ae364b22f164","type":"dql","title":"Last 3 days vulnerability change events","showTitle":false,"state":{"input":{"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.resolution.status==\"OPEN\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.resolution.status==\"OPEN\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n//end of filtering for the latest snapshot\n// now summarize on the vulnerability level\n| summarize  count(), by: {vulnerability.display_id}\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.group_label==\"CHANGE_EVENT\"\n| filter event.level==\"VULNERABILITY\"\n| filterOut in(\"affected_entities.count\",affected_entities.event_change_list)\n], sourceField:vulnerability.display_id, lookupField:vulnerability.display_id\n| filterOut isNull(lookup.vulnerability.id)\n| fields \nlookup.vulnerability.event_change_list,\nlookup.affected_entities.event_change_list,\n`Event date`=lookup.timestamp,\nEvent=lookup.event.name,\nStatus=lookup.vulnerability.resolution.status,\nMute=lookup.vulnerability.mute.status,\n`Davis Security Score`=round(lookup.vulnerability.davis_assessment.score,decimals:1),\n`# Affected entities`=lookup.affected_entities.count,\n`Function usage`=if(lookup.vulnerability.davis_assessment.vulnerable_function_status==\"IN_USE\",\"In use\",else:if(lookup.vulnerability.davis_assessment.vulnerable_function_status==\"NOT_IN_USE\",\"Not in use\", else:\"No data\")),\n`Internet exposure`=if(lookup.vulnerability.davis_assessment.exposure_status==\"PUBLIC_NETWORK\",\"Public\",else:\"Not exposed\"),\n`Data assets status`=if(lookup.vulnerability.davis_assessment.data_assets_status==\"REACHABLE\",\"In reach\", else:\"Not in reach\"),\n`Exploit`=if(lookup.vulnerability.davis_assessment.exploit_status==\"AVAILABLE\",\"Exists\",else:\"No data\"),\nvulnerability.display_id\n| sort `Event date`, direction:\"descending\"\n| fields \n`Event date`,\nvulnerability.display_id,\nStatus=if(in(\"vulnerability.resolution.status\",lookup.vulnerability.event_change_list),concat(\"🔄 \",Status),else:Status),\nMute=if(in(\"vulnerability.mute.status\",lookup.vulnerability.event_change_list),concat(\"🔄 \",Mute),else:Mute),\n`Davis Security Score`=if(in(\"vulnerability.davis_assessment.score\",lookup.vulnerability.event_change_list),concat(\"🔄 \",`Davis Security Score`),else:`Davis Security Score`),\n`Affected entities`=if(in(\"affected_entities.count\",lookup.affected_entities.event_change_list),concat(\"🔄 \",`# Affected entities`),else:`# Affected entities`),\n`Function usage`=if(in(\"vulnerability.davis_assessment.vulnerable_function_status\",lookup.vulnerability.event_change_list),concat(\"🔄 \",`Function usage`),else:`Function usage`),\n`Internet exposure`=if(in(\"vulnerability.davis_assessment.exposure_status\",lookup.vulnerability.event_change_list),concat(\"🔄 \",`Internet exposure`),else:`Internet exposure`),\n`Data assets status`=if(in(\"vulnerability.davis_assessment.data_assets_status\",lookup.vulnerability.event_change_list),concat(\"🔄 \",`Data assets status`),else:`Data assets status`),\n`Exploit`=if(in(\"vulnerability.davis_assessment.exploit_status\",lookup.vulnerability.event_change_list),concat(\"🔄 \",Exploit),else:Exploit)","timeframe":{"from":"now-3d","to":"now","details":{"from":{"type":"expression","normalized":"now-3d","date":"2023-07-16T17:14:45.995Z"},"to":{"type":"expression","normalized":"now","date":"2023-07-19T17:14:45.995Z"}}}},"state":"success","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute"}},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"rowDensity":"condensed","enableLineWrap":true,"enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[],"firstVisibleRowIndex":0,"columnWidths":{}}},"result":{"code":200,"value":{"records":[],"metadata":{"grail":{"canonicalQuery":"fetch events\n| filter event.provider == \"Dynatrace\"\n| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level == \"ENTITY\"\n| filter vulnerability.resolution.status == \"OPEN\"\n| filter contains(affected_entity.vulnerable_component.name, \"apache\")\n| fieldsAdd \"match\", alias:matcher\n| lookup \n\t[\n\t\tfetch events\n\t\t| filter event.provider == \"Dynatrace\"\n\t\t| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n\t\t| filter event.level == \"ENTITY\"\n\t\t| filter vulnerability.resolution.status == \"OPEN\"\n\t\t| filter contains(affected_entity.vulnerable_component.name, \"apache\")\n\t\t| fields {timestamp, alias:maxTimestamp}, {\"match\", alias:matcher}\n\t\t| limit 1\n\t], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp == maxTimestamp\n| summarize by:{vulnerability.display_id}, count()\n| lookup \n\t[\n\t\tfetch events\n\t\t| filter event.provider == \"Dynatrace\"\n\t\t| filter event.group_label == \"CHANGE_EVENT\"\n\t\t| filter event.level == \"VULNERABILITY\"\n\t\t| filter isFalseOrNull(in(\"affected_entities.count\", affected_entities.event_change_list))\n\t], sourceField:vulnerability.display_id, lookupField:vulnerability.display_id\n| filter isFalseOrNull(isNull(lookup.vulnerability.id))\n| fields lookup.vulnerability.event_change_list, lookup.affected_entities.event_change_list, {lookup.timestamp, alias:`Event date`}, {lookup.event.name, alias:Event}, {lookup.vulnerability.resolution.status, alias:Status}, {lookup.vulnerability.mute.status, alias:Mute}, {round(lookup.vulnerability.davis_assessment.score, decimals:1), alias:`Davis Security Score`}, {lookup.affected_entities.count, alias:`# Affected entities`}, {if(lookup.vulnerability.davis_assessment.vulnerable_function_status == \"IN_USE\", \"In use\", else:if(lookup.vulnerability.davis_assessment.vulnerable_function_status == \"NOT_IN_USE\", \"Not in use\", else:\"No data\")), alias:`Function usage`}, {if(lookup.vulnerability.davis_assessment.exposure_status == \"PUBLIC_NETWORK\", \"Public\", else:\"Not exposed\"), alias:`Internet exposure`}, {if(lookup.vulnerability.davis_assessment.data_assets_status == \"REACHABLE\", \"In reach\", else:\"Not in reach\"), alias:`Data assets status`}, {if(lookup.vulnerability.davis_assessment.exploit_status == \"AVAILABLE\", \"Exists\", else:\"No data\"), alias:Exploit}, vulnerability.display_id\n| sort `Event date`, direction:\"descending\"\n| fields `Event date`, vulnerability.display_id, {if(in(\"vulnerability.resolution.status\", lookup.vulnerability.event_change_list), concat(\"🔄 \", Status), else:Status), alias:Status}, {if(in(\"vulnerability.mute.status\", lookup.vulnerability.event_change_list), concat(\"🔄 \", Mute), else:Mute), alias:Mute}, {if(in(\"vulnerability.davis_assessment.score\", lookup.vulnerability.event_change_list), concat(\"🔄 \", `Davis Security Score`), else:`Davis Security Score`), alias:`Davis Security Score`}, {if(in(\"affected_entities.count\", lookup.affected_entities.event_change_list), concat(\"🔄 \", `# Affected entities`), else:`# Affected entities`), alias:`Affected entities`}, {if(in(\"vulnerability.davis_assessment.vulnerable_function_status\", lookup.vulnerability.event_change_list), concat(\"🔄 \", `Function usage`), else:`Function usage`), alias:`Function usage`}, {if(in(\"vulnerability.davis_assessment.exposure_status\", lookup.vulnerability.event_change_list), concat(\"🔄 \", `Internet exposure`), else:`Internet exposure`), alias:`Internet exposure`}, {if(in(\"vulnerability.davis_assessment.data_assets_status\", lookup.vulnerability.event_change_list), concat(\"🔄 \", `Data assets status`), else:`Data assets status`), alias:`Data assets status`}, {if(in(\"vulnerability.davis_assessment.exploit_status\", lookup.vulnerability.event_change_list), concat(\"🔄 \", Exploit), else:Exploit), alias:Exploit}","timezone":"America/New_York","query":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.resolution.status==\"OPEN\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.resolution.status==\"OPEN\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n//end of filtering for the latest snapshot\n// now summarize on the vulnerability level\n| summarize  count(), by: {vulnerability.display_id}\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.group_label==\"CHANGE_EVENT\"\n| filter event.level==\"VULNERABILITY\"\n| filterOut in(\"affected_entities.count\",affected_entities.event_change_list)\n], sourceField:vulnerability.display_id, lookupField:vulnerability.display_id\n| filterOut isNull(lookup.vulnerability.id)\n| fields \nlookup.vulnerability.event_change_list,\nlookup.affected_entities.event_change_list,\n`Event date`=lookup.timestamp,\nEvent=lookup.event.name,\nStatus=lookup.vulnerability.resolution.status,\nMute=lookup.vulnerability.mute.status,\n`Davis Security Score`=round(lookup.vulnerability.davis_assessment.score,decimals:1),\n`# Affected entities`=lookup.affected_entities.count,\n`Function usage`=if(lookup.vulnerability.davis_assessment.vulnerable_function_status==\"IN_USE\",\"In use\",else:if(lookup.vulnerability.davis_assessment.vulnerable_function_status==\"NOT_IN_USE\",\"Not in use\", else:\"No data\")),\n`Internet exposure`=if(lookup.vulnerability.davis_assessment.exposure_status==\"PUBLIC_NETWORK\",\"Public\",else:\"Not exposed\"),\n`Data assets status`=if(lookup.vulnerability.davis_assessment.data_assets_status==\"REACHABLE\",\"In reach\", else:\"Not in reach\"),\n`Exploit`=if(lookup.vulnerability.davis_assessment.exploit_status==\"AVAILABLE\",\"Exists\",else:\"No data\"),\nvulnerability.display_id\n| sort `Event date`, direction:\"descending\"\n| fields \n`Event date`,\nvulnerability.display_id,\nStatus=if(in(\"vulnerability.resolution.status\",lookup.vulnerability.event_change_list),concat(\"🔄 \",Status),else:Status),\nMute=if(in(\"vulnerability.mute.status\",lookup.vulnerability.event_change_list),concat(\"🔄 \",Mute),else:Mute),\n`Davis Security Score`=if(in(\"vulnerability.davis_assessment.score\",lookup.vulnerability.event_change_list),concat(\"🔄 \",`Davis Security Score`),else:`Davis Security Score`),\n`Affected entities`=if(in(\"affected_entities.count\",lookup.affected_entities.event_change_list),concat(\"🔄 \",`# Affected entities`),else:`# Affected entities`),\n`Function usage`=if(in(\"vulnerability.davis_assessment.vulnerable_function_status\",lookup.vulnerability.event_change_list),concat(\"🔄 \",`Function usage`),else:`Function usage`),\n`Internet exposure`=if(in(\"vulnerability.davis_assessment.exposure_status\",lookup.vulnerability.event_change_list),concat(\"🔄 \",`Internet exposure`),else:`Internet exposure`),\n`Data assets status`=if(in(\"vulnerability.davis_assessment.data_assets_status\",lookup.vulnerability.event_change_list),concat(\"🔄 \",`Data assets status`),else:`Data assets status`),\n`Exploit`=if(in(\"vulnerability.davis_assessment.exploit_status\",lookup.vulnerability.event_change_list),concat(\"🔄 \",Exploit),else:Exploit)","scannedRecords":98038,"dqlVersion":"V1_0","scannedBytes":30122096,"analysisTimeframe":{"start":"2023-08-05T00:55:56.335Z","end":"2023-08-08T00:55:56.335Z"},"locale":"","executionTimeMilliseconds":1598,"notifications":[],"queryId":"8db06e3f-9ffb-4ebc-9d0f-b3f5b3403ec1","sampled":false}},"types":[]},"notifications":[],"dateTime":"2023-08-08T00:55:56.334Z","input":{"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.resolution.status==\"OPEN\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.resolution.status==\"OPEN\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n//end of filtering for the latest snapshot\n// now summarize on the vulnerability level\n| summarize  count(), by: {vulnerability.display_id}\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.group_label==\"CHANGE_EVENT\"\n| filter event.level==\"VULNERABILITY\"\n| filterOut in(\"affected_entities.count\",affected_entities.event_change_list)\n], sourceField:vulnerability.display_id, lookupField:vulnerability.display_id\n| filterOut isNull(lookup.vulnerability.id)\n| fields \nlookup.vulnerability.event_change_list,\nlookup.affected_entities.event_change_list,\n`Event date`=lookup.timestamp,\nEvent=lookup.event.name,\nStatus=lookup.vulnerability.resolution.status,\nMute=lookup.vulnerability.mute.status,\n`Davis Security Score`=round(lookup.vulnerability.davis_assessment.score,decimals:1),\n`# Affected entities`=lookup.affected_entities.count,\n`Function usage`=if(lookup.vulnerability.davis_assessment.vulnerable_function_status==\"IN_USE\",\"In use\",else:if(lookup.vulnerability.davis_assessment.vulnerable_function_status==\"NOT_IN_USE\",\"Not in use\", else:\"No data\")),\n`Internet exposure`=if(lookup.vulnerability.davis_assessment.exposure_status==\"PUBLIC_NETWORK\",\"Public\",else:\"Not exposed\"),\n`Data assets status`=if(lookup.vulnerability.davis_assessment.data_assets_status==\"REACHABLE\",\"In reach\", else:\"Not in reach\"),\n`Exploit`=if(lookup.vulnerability.davis_assessment.exploit_status==\"AVAILABLE\",\"Exists\",else:\"No data\"),\nvulnerability.display_id\n| sort `Event date`, direction:\"descending\"\n| fields \n`Event date`,\nvulnerability.display_id,\nStatus=if(in(\"vulnerability.resolution.status\",lookup.vulnerability.event_change_list),concat(\"🔄 \",Status),else:Status),\nMute=if(in(\"vulnerability.mute.status\",lookup.vulnerability.event_change_list),concat(\"🔄 \",Mute),else:Mute),\n`Davis Security Score`=if(in(\"vulnerability.davis_assessment.score\",lookup.vulnerability.event_change_list),concat(\"🔄 \",`Davis Security Score`),else:`Davis Security Score`),\n`Affected entities`=if(in(\"affected_entities.count\",lookup.affected_entities.event_change_list),concat(\"🔄 \",`# Affected entities`),else:`# Affected entities`),\n`Function usage`=if(in(\"vulnerability.davis_assessment.vulnerable_function_status\",lookup.vulnerability.event_change_list),concat(\"🔄 \",`Function usage`),else:`Function usage`),\n`Internet exposure`=if(in(\"vulnerability.davis_assessment.exposure_status\",lookup.vulnerability.event_change_list),concat(\"🔄 \",`Internet exposure`),else:`Internet exposure`),\n`Data assets status`=if(in(\"vulnerability.davis_assessment.data_assets_status\",lookup.vulnerability.event_change_list),concat(\"🔄 \",`Data assets status`),else:`Data assets status`),\n`Exploit`=if(in(\"vulnerability.davis_assessment.exploit_status\",lookup.vulnerability.event_change_list),concat(\"🔄 \",Exploit),else:Exploit)","timeframe":{"from":"now-3d","to":"now","details":{"from":{"type":"expression","normalized":"now-3d","date":"2023-07-16T17:14:45.995Z"},"to":{"type":"expression","normalized":"now","date":"2023-07-19T17:14:45.995Z"}}}}},"visualization":"table"},"davisAnalysis":{"analyzerComponentState":{"resultState":{}}},"showInput":false,"height":404,"davisAnalytics":{"analyzerComponentState":{"resultState":{}}}},{"id":"13da3ca7-154c-46da-ad82-4c1481e8ab11","type":"markdown","markdown":"## 🎯 Environment analysis\n--- \nIn-depth examination of your environment in the context of the selected vulnerability; includes a list of the most affected entities and the responsible teams."},{"id":"e139092a-c78e-4b78-b142-db0024758f2c","type":"markdown","markdown":"### Affected entities\n\nThose are directly affected entities where vulnerabilities were discovered."},{"id":"5048b22e-5091-4611-923a-2aae31c9d6a0","type":"dql","title":"Owning teams","showTitle":false,"state":{"input":{"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.resolution.status==\"OPEN\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.resolution.status==\"OPEN\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n//end of filtering for the latest snapshot\n//add ownership information\n| lookup [\nfetch dt.entity.process_group\n| fieldsAdd tags\n], sourceField:dt.entity.process_group, lookupField:id, fields:{tags}\n| parse toString(tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fieldsAdd Team=if(isNotNull(Team),Team,else:\"-\")\n| fieldsRemove lookup.id, lookup.entity.name, Tags\n// end of adding ownership info\n| summarize {\n`Entity names`=collectDistinct(affected_entity.name),\n`Component names`=arrayRemoveNulls(collectDistinct(affected_entity.vulnerable_component.name))\n}, by: {Team}\n| fields Team, `Affected entities`=arraySize(`Entity names`), `Components`=arraySize(`Component names`)\n| sort {`Affected entities`, direction:\"descending\"}, {`Components`, direction:\"descending\"}","timeframe":{"from":"now-15m","to":"now","details":{"from":{"type":"expression","normalized":"now-15m","date":"2023-08-07T08:31:55.168Z"},"to":{"type":"expression","normalized":"now","date":"2023-08-07T08:46:55.168Z"}}}},"state":"success","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute"}},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"rowDensity":"condensed","enableLineWrap":true,"enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[["Entity names"]],"firstVisibleRowIndex":0,"columnWidths":{}}},"result":{"code":200,"value":{"records":[{"Team":"-","Affected entities":"4","Components":"4"}],"metadata":{"grail":{"canonicalQuery":"fetch events\n| filter event.provider == \"Dynatrace\"\n| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level == \"ENTITY\"\n| filter vulnerability.resolution.status == \"OPEN\"\n| filter contains(affected_entity.vulnerable_component.name, \"apache\")\n| fieldsAdd \"match\", alias:matcher\n| lookup \n\t[\n\t\tfetch events\n\t\t| filter event.provider == \"Dynatrace\"\n\t\t| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n\t\t| filter event.level == \"ENTITY\"\n\t\t| filter vulnerability.resolution.status == \"OPEN\"\n\t\t| filter contains(affected_entity.vulnerable_component.name, \"apache\")\n\t\t| fields {timestamp, alias:maxTimestamp}, {\"match\", alias:matcher}\n\t\t| limit 1\n\t], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp == maxTimestamp\n| lookup \n\t[\n\t\tfetch dt.entity.process_group\n\t\t| fieldsAdd tags\n\t], sourceField:dt.entity.process_group, lookupField:id, fields:{tags}\n| parse toString(tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fieldsAdd if(isNotNull(Team), Team, else:\"-\"), alias:Team\n| fieldsRemove lookup.id, lookup.entity.name, Tags\n| summarize by:{Team}, {{collectDistinct(affected_entity.name), alias:`Entity names`}, {arrayRemoveNulls(collectDistinct(affected_entity.vulnerable_component.name)), alias:`Component names`}}\n| fields Team, {arraySize(`Entity names`), alias:`Affected entities`}, {arraySize(`Component names`), alias:Components}\n| sort {`Affected entities`, direction:\"descending\"}, {Components, direction:\"descending\"}","timezone":"America/New_York","query":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.resolution.status==\"OPEN\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.resolution.status==\"OPEN\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n//end of filtering for the latest snapshot\n//add ownership information\n| lookup [\nfetch dt.entity.process_group\n| fieldsAdd tags\n], sourceField:dt.entity.process_group, lookupField:id, fields:{tags}\n| parse toString(tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fieldsAdd Team=if(isNotNull(Team),Team,else:\"-\")\n| fieldsRemove lookup.id, lookup.entity.name, Tags\n// end of adding ownership info\n| summarize {\n`Entity names`=collectDistinct(affected_entity.name),\n`Component names`=arrayRemoveNulls(collectDistinct(affected_entity.vulnerable_component.name))\n}, by: {Team}\n| fields Team, `Affected entities`=arraySize(`Entity names`), `Components`=arraySize(`Component names`)\n| sort {`Affected entities`, direction:\"descending\"}, {`Components`, direction:\"descending\"}","scannedRecords":4729,"dqlVersion":"V1_0","scannedBytes":657850,"analysisTimeframe":{"start":"2023-08-08T00:40:56.338Z","end":"2023-08-08T00:55:56.338Z"},"locale":"","executionTimeMilliseconds":1601,"notifications":[],"queryId":"95bdddd2-afba-4d83-9a49-b89bc2ec6430","sampled":false}},"types":[{"mappings":{"Team":{"type":"string"},"Affected entities":{"type":"long"},"Components":{"type":"long"}},"indexRange":[0,0]}]},"notifications":[],"dateTime":"2023-08-08T00:55:56.337Z","input":{"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.resolution.status==\"OPEN\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.resolution.status==\"OPEN\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n//end of filtering for the latest snapshot\n//add ownership information\n| lookup [\nfetch dt.entity.process_group\n| fieldsAdd tags\n], sourceField:dt.entity.process_group, lookupField:id, fields:{tags}\n| parse toString(tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fieldsAdd Team=if(isNotNull(Team),Team,else:\"-\")\n| fieldsRemove lookup.id, lookup.entity.name, Tags\n// end of adding ownership info\n| summarize {\n`Entity names`=collectDistinct(affected_entity.name),\n`Component names`=arrayRemoveNulls(collectDistinct(affected_entity.vulnerable_component.name))\n}, by: {Team}\n| fields Team, `Affected entities`=arraySize(`Entity names`), `Components`=arraySize(`Component names`)\n| sort {`Affected entities`, direction:\"descending\"}, {`Components`, direction:\"descending\"}","timeframe":{"from":"now-15m","to":"now","details":{"from":{"type":"expression","normalized":"now-15m","date":"2023-08-07T08:31:55.168Z"},"to":{"type":"expression","normalized":"now","date":"2023-08-07T08:46:55.168Z"}}}}},"visualization":"table"},"davisAnalysis":{"analyzerComponentState":{"resultState":{}}},"showInput":false,"height":314,"davisAnalytics":{"analyzerComponentState":{"resultState":{}}}},{"id":"caa02ca3-0c43-46c2-bb77-84dc45578900","type":"dql","title":"Software components","showTitle":false,"state":{"input":{"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.resolution.status==\"OPEN\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.resolution.status==\"OPEN\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n//end of filtering for the latest snapshot\n//add ownership information\n| lookup [\nfetch dt.entity.process_group\n| fieldsAdd tags\n], sourceField:dt.entity.process_group, lookupField:id, fields:{tags}\n| parse toString(tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fieldsRemove lookup.id, lookup.entity.name, Tags\n// end of adding ownership info\n// summarize on component level\n| summarize\n{\n`# Affected entities`=arraySize(collectDistinct(affected_entity.id)),\n`Component name`=takeFirst(affected_entity.vulnerable_component.name),\n`Functions`=arrayRemoveNulls(collectDistinct(affected_entity.vulnerable_functions)),\n`# Function usages`=countIf(vulnerability.davis_assessment.vulnerable_function_status == \"IN_USE\"),\n`# Function not in use`=countIf(vulnerability.davis_assessment.vulnerable_function_status == \"NOT_IN_USE\"),\nTeams=collectDistinct(Team)\n},by: {affected_entity.vulnerable_component.id, alias:`Component id`}\n| filterOut isNull(`Component id`)\n//add component information\n| lookup [\nfetch dt.entity.software_component\n| fieldsAdd softwareComponentFileName\n], sourceField:`Component id`, lookupField:id\n| fieldsRename File=lookup.softwareComponentFileName\n| fieldsRemove lookup.id, lookup.entity.name\n// end of adding ownership info\n| fields\ndt.entity.software_component=`Component id`,\n`Component name`,\nFile=if(isNotNull(File),File,else:\"-\"),\n`Vulnerable function`=if(arraySize(Functions)>0,Functions,else:\"-\"),\n`Entities with function in use`=if(`# Function usages`>0,`# Function usages`,else:if(`# Function not in use`>0,\"Not in use\",else:\"No data\")),\nTeams=if(arraySize(arrayRemoveNulls(Teams))>0,arrayRemoveNulls(Teams),else:\"-\")\n| sort {`Entities with function in use`, direction:\"descending\"}","timeframe":{"from":"now-15m","to":"now","details":{"from":{"type":"expression","normalized":"now-15m","date":"2023-08-07T08:32:28.403Z"},"to":{"type":"expression","normalized":"now","date":"2023-08-07T08:47:28.403Z"}}}},"state":"success","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute"}},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"rowDensity":"condensed","enableLineWrap":true,"enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[],"firstVisibleRowIndex":0,"columnWidths":{}}},"result":{"code":200,"value":{"records":[{"dt.entity.software_component":"SOFTWARE_COMPONENT-90AA5AE64646E1E7","Component name":"org.apache.tomcat:tomcat-catalina:8.5.82","File":"catalina.jar","Vulnerable function":"-","Entities with function in use":"No data","Teams":"-"},{"dt.entity.software_component":"SOFTWARE_COMPONENT-A85642F3CBB14019","Component name":"org.apache.httpcomponents:httpclient:4.5.10","File":"httpclient-4.5.10.jar","Vulnerable function":"-","Entities with function in use":"No data","Teams":"-"},{"dt.entity.software_component":"SOFTWARE_COMPONENT-BDE07B51A799E362","Component name":"org.apache.tomcat:tomcat-util:8.5.82","File":"tomcat-util.jar","Vulnerable function":"-","Entities with function in use":"No data","Teams":"-"},{"dt.entity.software_component":"SOFTWARE_COMPONENT-E79B5C4EE33F6D8F","Component name":"org.apache.xmlbeans:xmlbeans:2.6.0-r1364789","File":"-","Vulnerable function":"-","Entities with function in use":"No data","Teams":"-"}],"metadata":{"grail":{"canonicalQuery":"fetch events\n| filter event.provider == \"Dynatrace\"\n| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level == \"ENTITY\"\n| filter vulnerability.resolution.status == \"OPEN\"\n| filter contains(affected_entity.vulnerable_component.name, \"apache\")\n| fieldsAdd \"match\", alias:matcher\n| lookup \n\t[\n\t\tfetch events\n\t\t| filter event.provider == \"Dynatrace\"\n\t\t| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n\t\t| filter event.level == \"ENTITY\"\n\t\t| filter vulnerability.resolution.status == \"OPEN\"\n\t\t| filter contains(affected_entity.vulnerable_component.name, \"apache\")\n\t\t| fields {timestamp, alias:maxTimestamp}, {\"match\", alias:matcher}\n\t\t| limit 1\n\t], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp == maxTimestamp\n| lookup \n\t[\n\t\tfetch dt.entity.process_group\n\t\t| fieldsAdd tags\n\t], sourceField:dt.entity.process_group, lookupField:id, fields:{tags}\n| parse toString(tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fieldsRemove lookup.id, lookup.entity.name, Tags\n| summarize by:{affected_entity.vulnerable_component.id, alias:`Component id`}, {{arraySize(collectDistinct(affected_entity.id)), alias:`# Affected entities`}, {takeFirst(affected_entity.vulnerable_component.name), alias:`Component name`}, {arrayRemoveNulls(collectDistinct(affected_entity.vulnerable_functions)), alias:Functions}, {countIf(vulnerability.davis_assessment.vulnerable_function_status == \"IN_USE\"), alias:`# Function usages`}, {countIf(vulnerability.davis_assessment.vulnerable_function_status == \"NOT_IN_USE\"), alias:`# Function not in use`}, {collectDistinct(Team), alias:Teams}}\n| filter isFalseOrNull(isNull(`Component id`))\n| lookup \n\t[\n\t\tfetch dt.entity.software_component\n\t\t| fieldsAdd softwareComponentFileName\n\t], sourceField:`Component id`, lookupField:id\n| fieldsRename lookup.softwareComponentFileName, alias:File\n| fieldsRemove lookup.id, lookup.entity.name\n| fields {`Component id`, alias:dt.entity.software_component}, `Component name`, {if(isNotNull(File), File, else:\"-\"), alias:File}, {if(arraySize(Functions) > 0, Functions, else:\"-\"), alias:`Vulnerable function`}, {if(`# Function usages` > 0, `# Function usages`, else:if(`# Function not in use` > 0, \"Not in use\", else:\"No data\")), alias:`Entities with function in use`}, {if(arraySize(arrayRemoveNulls(Teams)) > 0, arrayRemoveNulls(Teams), else:\"-\"), alias:Teams}\n| sort `Entities with function in use`, direction:\"descending\"","timezone":"America/New_York","query":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.resolution.status==\"OPEN\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.resolution.status==\"OPEN\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n//end of filtering for the latest snapshot\n//add ownership information\n| lookup [\nfetch dt.entity.process_group\n| fieldsAdd tags\n], sourceField:dt.entity.process_group, lookupField:id, fields:{tags}\n| parse toString(tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fieldsRemove lookup.id, lookup.entity.name, Tags\n// end of adding ownership info\n// summarize on component level\n| summarize\n{\n`# Affected entities`=arraySize(collectDistinct(affected_entity.id)),\n`Component name`=takeFirst(affected_entity.vulnerable_component.name),\n`Functions`=arrayRemoveNulls(collectDistinct(affected_entity.vulnerable_functions)),\n`# Function usages`=countIf(vulnerability.davis_assessment.vulnerable_function_status == \"IN_USE\"),\n`# Function not in use`=countIf(vulnerability.davis_assessment.vulnerable_function_status == \"NOT_IN_USE\"),\nTeams=collectDistinct(Team)\n},by: {affected_entity.vulnerable_component.id, alias:`Component id`}\n| filterOut isNull(`Component id`)\n//add component information\n| lookup [\nfetch dt.entity.software_component\n| fieldsAdd softwareComponentFileName\n], sourceField:`Component id`, lookupField:id\n| fieldsRename File=lookup.softwareComponentFileName\n| fieldsRemove lookup.id, lookup.entity.name\n// end of adding ownership info\n| fields\ndt.entity.software_component=`Component id`,\n`Component name`,\nFile=if(isNotNull(File),File,else:\"-\"),\n`Vulnerable function`=if(arraySize(Functions)>0,Functions,else:\"-\"),\n`Entities with function in use`=if(`# Function usages`>0,`# Function usages`,else:if(`# Function not in use`>0,\"Not in use\",else:\"No data\")),\nTeams=if(arraySize(arrayRemoveNulls(Teams))>0,arrayRemoveNulls(Teams),else:\"-\")\n| sort {`Entities with function in use`, direction:\"descending\"}","scannedRecords":5135,"dqlVersion":"V1_0","scannedBytes":718339,"analysisTimeframe":{"start":"2023-08-08T00:40:56.343Z","end":"2023-08-08T00:55:56.343Z"},"locale":"","executionTimeMilliseconds":155,"notifications":[],"queryId":"d9b1c356-ada9-4fc5-9871-03e1a7e3020f","sampled":false}},"types":[{"mappings":{"dt.entity.software_component":{"type":"string"},"Component name":{"type":"string"},"File":{"type":"string"},"Vulnerable function":{"type":"string"},"Entities with function in use":{"type":"string"},"Teams":{"type":"string"}},"indexRange":[0,3]}]},"notifications":[],"dateTime":"2023-08-08T00:55:56.342Z","input":{"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.resolution.status==\"OPEN\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.resolution.status==\"OPEN\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n//end of filtering for the latest snapshot\n//add ownership information\n| lookup [\nfetch dt.entity.process_group\n| fieldsAdd tags\n], sourceField:dt.entity.process_group, lookupField:id, fields:{tags}\n| parse toString(tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fieldsRemove lookup.id, lookup.entity.name, Tags\n// end of adding ownership info\n// summarize on component level\n| summarize\n{\n`# Affected entities`=arraySize(collectDistinct(affected_entity.id)),\n`Component name`=takeFirst(affected_entity.vulnerable_component.name),\n`Functions`=arrayRemoveNulls(collectDistinct(affected_entity.vulnerable_functions)),\n`# Function usages`=countIf(vulnerability.davis_assessment.vulnerable_function_status == \"IN_USE\"),\n`# Function not in use`=countIf(vulnerability.davis_assessment.vulnerable_function_status == \"NOT_IN_USE\"),\nTeams=collectDistinct(Team)\n},by: {affected_entity.vulnerable_component.id, alias:`Component id`}\n| filterOut isNull(`Component id`)\n//add component information\n| lookup [\nfetch dt.entity.software_component\n| fieldsAdd softwareComponentFileName\n], sourceField:`Component id`, lookupField:id\n| fieldsRename File=lookup.softwareComponentFileName\n| fieldsRemove lookup.id, lookup.entity.name\n// end of adding ownership info\n| fields\ndt.entity.software_component=`Component id`,\n`Component name`,\nFile=if(isNotNull(File),File,else:\"-\"),\n`Vulnerable function`=if(arraySize(Functions)>0,Functions,else:\"-\"),\n`Entities with function in use`=if(`# Function usages`>0,`# Function usages`,else:if(`# Function not in use`>0,\"Not in use\",else:\"No data\")),\nTeams=if(arraySize(arrayRemoveNulls(Teams))>0,arrayRemoveNulls(Teams),else:\"-\")\n| sort {`Entities with function in use`, direction:\"descending\"}","timeframe":{"from":"now-15m","to":"now","details":{"from":{"type":"expression","normalized":"now-15m","date":"2023-08-07T08:32:28.403Z"},"to":{"type":"expression","normalized":"now","date":"2023-08-07T08:47:28.403Z"}}}}},"visualization":"table"},"davisAnalysis":{"analyzerComponentState":{"resultState":{}}},"showInput":false,"height":314,"davisAnalytics":{"analyzerComponentState":{"resultState":{}}}},{"id":"a05f94a6-45c2-405f-9594-7563afb67d3f","type":"dql","showTitle":true,"height":426,"showInput":false,"title":"Affected entities Davis assessments","showSettings":false,"state":{"input":{"timeframe":{"from":"now-15m","to":"now"},"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.resolution.status==\"OPEN\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.resolution.status==\"OPEN\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n//end of filtering for the latest snapshot\n| fields\naffected_entity.id,\n`Affected entity name`=affected_entity.name,\n`Function usage`=if(vulnerability.davis_assessment.vulnerable_function_status==\"IN_USE\",concat(\"❗\",\"In use\"),else:if(vulnerability.davis_assessment.vulnerable_function_status==\"NOT_IN_USE\",\"Not in use\", else:\"No data\")),\nf=if(vulnerability.davis_assessment.vulnerable_function_status==\"IN_USE\",10,else:0),\n`Internet exposure`=if(vulnerability.davis_assessment.exposure_status==\"PUBLIC_NETWORK\",concat(\"❗\",\"Public\"),else:\"Not exposed\"),\ni=if(vulnerability.davis_assessment.exposure_status==\"PUBLIC_NETWORK\",5,else:0),\n`# Reachable data assets`=related_entities.databases.count,\nr=if(related_entities.databases.count>0,1,else:0),\n`Data assets status`=if(vulnerability.davis_assessment.data_assets_status==\"REACHABLE\",concat(\"❗\",\" In reach\"), else:\"Not in reach\"),\n`Exploit`=if(vulnerability.davis_assessment.exploit_status==\"AVAILABLE\",concat(\"❗\",\"Exists\"),else:\"None\"),\ne=if(vulnerability.davis_assessment.exploit_status==\"AVAILABLE\",3,else:0),\n`# Affected processes`=arraySize(affected_entity.affected_processes.ids),\ndt.entity.process_group=dt.entity.process_group,\ndt.entity.host=dt.entity.host,\ndt.entity.kubernetes_node=dt.entity.kubernetes_node\n| fieldsAdd\norder=f+i+r+e\n| sort {order,direction:\"descending\"}, {`# Reachable data assets`, direction:\"descending\"}, {`# Affected processes`, direction:\"descending\"}\n| fieldsRemove affected_entity.id, `# Reachable data assets`, f,i,r,e, order\n//add ownership information\n| lookup [\nfetch dt.entity.process_group\n| fieldsAdd tags\n], sourceField:dt.entity.process_group, lookupField:id, fields:{tags}\n| parse toString(tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fieldsAdd Team\n| fields \ndt.source_entity=if(isNotNull(dt.entity.process_group),dt.entity.process_group, else:if(isNotNull(dt.entity.host), dt.entity.host, else:dt.entity.kubernetes_node)),\n`Affected entity name`,\nTeam=if(isNotNull(Team),Team,else:\"-\"), `Function usage`, `Internet exposure`, `Data assets status`, Exploit, `Affected processes`=`# Affected processes`"},"visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"table":{"displayMode":"edit","lineWrapIds":[],"firstVisibleRowIndex":2,"enableLineWrap":true}},"showConsole":true,"state":"success","visualization":"table","result":{"code":200,"value":{"records":[{"dt.source_entity":"PROCESS_GROUP-FD8BFBA6A1478950","Affected entity name":"tomcat easytravel-frontend-*","Team":"-","Function usage":"No data","Internet exposure":"❗Public","Data assets status":"Not in reach","Exploit":"None","Affected processes":"2"},{"dt.source_entity":"PROCESS_GROUP-FD8BFBA6A1478950","Affected entity name":"tomcat easytravel-frontend-*","Team":"-","Function usage":"No data","Internet exposure":"❗Public","Data assets status":"Not in reach","Exploit":"None","Affected processes":"2"},{"dt.source_entity":"PROCESS_GROUP-FD8BFBA6A1478950","Affected entity name":"tomcat easytravel-frontend-*","Team":"-","Function usage":"No data","Internet exposure":"❗Public","Data assets status":"Not in reach","Exploit":"None","Affected processes":"2"},{"dt.source_entity":"PROCESS_GROUP-FD8BFBA6A1478950","Affected entity name":"tomcat easytravel-frontend-*","Team":"-","Function usage":"No data","Internet exposure":"❗Public","Data assets status":"Not in reach","Exploit":"None","Affected processes":"2"},{"dt.source_entity":"PROCESS_GROUP-FD8BFBA6A1478950","Affected entity name":"tomcat easytravel-frontend-*","Team":"-","Function usage":"No data","Internet exposure":"❗Public","Data assets status":"Not in reach","Exploit":"None","Affected processes":"2"},{"dt.source_entity":"PROCESS_GROUP-C5A3017C653E8C2F","Affected entity name":"uemload.jar easytravel-loadgen-*","Team":"-","Function usage":"No data","Internet exposure":"❗Public","Data assets status":"Not in reach","Exploit":"None","Affected processes":"1"},{"dt.source_entity":"PROCESS_GROUP-3CFF120273384B6B","Affected entity name":"tomcat easytravel-pluginservice-*","Team":"-","Function usage":"No data","Internet exposure":"❗Public","Data assets status":"Not in reach","Exploit":"None","Affected processes":"1"},{"dt.source_entity":"PROCESS_GROUP-A6BBB46BDAADE0F2","Affected entity name":"uemload.jar easytravel-headless-loadgen-*","Team":"-","Function usage":"No data","Internet exposure":"❗Public","Data assets status":"Not in reach","Exploit":"None","Affected processes":"1"},{"dt.source_entity":"PROCESS_GROUP-3CFF120273384B6B","Affected entity name":"tomcat easytravel-pluginservice-*","Team":"-","Function usage":"No data","Internet exposure":"❗Public","Data assets status":"Not in reach","Exploit":"None","Affected processes":"1"},{"dt.source_entity":"PROCESS_GROUP-3CFF120273384B6B","Affected entity name":"tomcat easytravel-pluginservice-*","Team":"-","Function usage":"No data","Internet exposure":"❗Public","Data assets status":"Not in reach","Exploit":"None","Affected processes":"1"},{"dt.source_entity":"PROCESS_GROUP-3CFF120273384B6B","Affected entity name":"tomcat easytravel-pluginservice-*","Team":"-","Function usage":"No data","Internet exposure":"❗Public","Data assets status":"Not in reach","Exploit":"None","Affected processes":"1"}],"metadata":{"grail":{"canonicalQuery":"fetch events\n| filter event.provider == \"Dynatrace\"\n| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level == \"ENTITY\"\n| filter vulnerability.resolution.status == \"OPEN\"\n| filter contains(affected_entity.vulnerable_component.name, \"apache\")\n| fieldsAdd \"match\", alias:matcher\n| lookup \n\t[\n\t\tfetch events\n\t\t| filter event.provider == \"Dynatrace\"\n\t\t| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n\t\t| filter event.level == \"ENTITY\"\n\t\t| filter vulnerability.resolution.status == \"OPEN\"\n\t\t| filter contains(affected_entity.vulnerable_component.name, \"apache\")\n\t\t| fields {timestamp, alias:maxTimestamp}, {\"match\", alias:matcher}\n\t\t| limit 1\n\t], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp == maxTimestamp\n| fields affected_entity.id, {affected_entity.name, alias:`Affected entity name`}, {if(vulnerability.davis_assessment.vulnerable_function_status == \"IN_USE\", concat(\"❗\", \"In use\"), else:if(vulnerability.davis_assessment.vulnerable_function_status == \"NOT_IN_USE\", \"Not in use\", else:\"No data\")), alias:`Function usage`}, {if(vulnerability.davis_assessment.vulnerable_function_status == \"IN_USE\", 10, else:0), alias:f}, {if(vulnerability.davis_assessment.exposure_status == \"PUBLIC_NETWORK\", concat(\"❗\", \"Public\"), else:\"Not exposed\"), alias:`Internet exposure`}, {if(vulnerability.davis_assessment.exposure_status == \"PUBLIC_NETWORK\", 5, else:0), alias:i}, {related_entities.databases.count, alias:`# Reachable data assets`}, {if(related_entities.databases.count > 0, 1, else:0), alias:r}, {if(vulnerability.davis_assessment.data_assets_status == \"REACHABLE\", concat(\"❗\", \" In reach\"), else:\"Not in reach\"), alias:`Data assets status`}, {if(vulnerability.davis_assessment.exploit_status == \"AVAILABLE\", concat(\"❗\", \"Exists\"), else:\"None\"), alias:Exploit}, {if(vulnerability.davis_assessment.exploit_status == \"AVAILABLE\", 3, else:0), alias:e}, {arraySize(affected_entity.affected_processes.ids), alias:`# Affected processes`}, {dt.entity.process_group, alias:dt.entity.process_group}, {dt.entity.host, alias:dt.entity.host}, {dt.entity.kubernetes_node, alias:dt.entity.kubernetes_node}\n| fieldsAdd f + i + r + e, alias:order\n| sort {order, direction:\"descending\"}, {`# Reachable data assets`, direction:\"descending\"}, {`# Affected processes`, direction:\"descending\"}\n| fieldsRemove affected_entity.id, `# Reachable data assets`, f, i, r, e, order\n| lookup \n\t[\n\t\tfetch dt.entity.process_group\n\t\t| fieldsAdd tags\n\t], sourceField:dt.entity.process_group, lookupField:id, fields:{tags}\n| parse toString(tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fieldsAdd Team\n| fields {if(isNotNull(dt.entity.process_group), dt.entity.process_group, else:if(isNotNull(dt.entity.host), dt.entity.host, else:dt.entity.kubernetes_node)), alias:dt.source_entity}, `Affected entity name`, {if(isNotNull(Team), Team, else:\"-\"), alias:Team}, `Function usage`, `Internet exposure`, `Data assets status`, Exploit, {`# Affected processes`, alias:`Affected processes`}","timezone":"America/New_York","query":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.resolution.status==\"OPEN\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.resolution.status==\"OPEN\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n//end of filtering for the latest snapshot\n| fields\naffected_entity.id,\n`Affected entity name`=affected_entity.name,\n`Function usage`=if(vulnerability.davis_assessment.vulnerable_function_status==\"IN_USE\",concat(\"❗\",\"In use\"),else:if(vulnerability.davis_assessment.vulnerable_function_status==\"NOT_IN_USE\",\"Not in use\", else:\"No data\")),\nf=if(vulnerability.davis_assessment.vulnerable_function_status==\"IN_USE\",10,else:0),\n`Internet exposure`=if(vulnerability.davis_assessment.exposure_status==\"PUBLIC_NETWORK\",concat(\"❗\",\"Public\"),else:\"Not exposed\"),\ni=if(vulnerability.davis_assessment.exposure_status==\"PUBLIC_NETWORK\",5,else:0),\n`# Reachable data assets`=related_entities.databases.count,\nr=if(related_entities.databases.count>0,1,else:0),\n`Data assets status`=if(vulnerability.davis_assessment.data_assets_status==\"REACHABLE\",concat(\"❗\",\" In reach\"), else:\"Not in reach\"),\n`Exploit`=if(vulnerability.davis_assessment.exploit_status==\"AVAILABLE\",concat(\"❗\",\"Exists\"),else:\"None\"),\ne=if(vulnerability.davis_assessment.exploit_status==\"AVAILABLE\",3,else:0),\n`# Affected processes`=arraySize(affected_entity.affected_processes.ids),\ndt.entity.process_group=dt.entity.process_group,\ndt.entity.host=dt.entity.host,\ndt.entity.kubernetes_node=dt.entity.kubernetes_node\n| fieldsAdd\norder=f+i+r+e\n| sort {order,direction:\"descending\"}, {`# Reachable data assets`, direction:\"descending\"}, {`# Affected processes`, direction:\"descending\"}\n| fieldsRemove affected_entity.id, `# Reachable data assets`, f,i,r,e, order\n//add ownership information\n| lookup [\nfetch dt.entity.process_group\n| fieldsAdd tags\n], sourceField:dt.entity.process_group, lookupField:id, fields:{tags}\n| parse toString(tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fieldsAdd Team\n| fields \ndt.source_entity=if(isNotNull(dt.entity.process_group),dt.entity.process_group, else:if(isNotNull(dt.entity.host), dt.entity.host, else:dt.entity.kubernetes_node)),\n`Affected entity name`,\nTeam=if(isNotNull(Team),Team,else:\"-\"), `Function usage`, `Internet exposure`, `Data assets status`, Exploit, `Affected processes`=`# Affected processes`","scannedRecords":4729,"dqlVersion":"V1_0","scannedBytes":657850,"analysisTimeframe":{"start":"2023-08-08T00:40:56.346Z","end":"2023-08-08T00:55:56.346Z"},"locale":"","executionTimeMilliseconds":1611,"notifications":[],"queryId":"f289cfdd-1bbf-4eaf-80cb-3cca3f74bd5f","sampled":false}},"types":[{"mappings":{"dt.source_entity":{"type":"string"},"Affected entity name":{"type":"string"},"Team":{"type":"string"},"Function usage":{"type":"string"},"Internet exposure":{"type":"string"},"Data assets status":{"type":"string"},"Exploit":{"type":"string"},"Affected processes":{"type":"long"}},"indexRange":[0,10]}]},"dateTime":"2023-08-08T00:55:56.345Z","input":{"timeframe":{"from":"now-15m","to":"now"},"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.resolution.status==\"OPEN\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter vulnerability.resolution.status==\"OPEN\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n//end of filtering for the latest snapshot\n| fields\naffected_entity.id,\n`Affected entity name`=affected_entity.name,\n`Function usage`=if(vulnerability.davis_assessment.vulnerable_function_status==\"IN_USE\",concat(\"❗\",\"In use\"),else:if(vulnerability.davis_assessment.vulnerable_function_status==\"NOT_IN_USE\",\"Not in use\", else:\"No data\")),\nf=if(vulnerability.davis_assessment.vulnerable_function_status==\"IN_USE\",10,else:0),\n`Internet exposure`=if(vulnerability.davis_assessment.exposure_status==\"PUBLIC_NETWORK\",concat(\"❗\",\"Public\"),else:\"Not exposed\"),\ni=if(vulnerability.davis_assessment.exposure_status==\"PUBLIC_NETWORK\",5,else:0),\n`# Reachable data assets`=related_entities.databases.count,\nr=if(related_entities.databases.count>0,1,else:0),\n`Data assets status`=if(vulnerability.davis_assessment.data_assets_status==\"REACHABLE\",concat(\"❗\",\" In reach\"), else:\"Not in reach\"),\n`Exploit`=if(vulnerability.davis_assessment.exploit_status==\"AVAILABLE\",concat(\"❗\",\"Exists\"),else:\"None\"),\ne=if(vulnerability.davis_assessment.exploit_status==\"AVAILABLE\",3,else:0),\n`# Affected processes`=arraySize(affected_entity.affected_processes.ids),\ndt.entity.process_group=dt.entity.process_group,\ndt.entity.host=dt.entity.host,\ndt.entity.kubernetes_node=dt.entity.kubernetes_node\n| fieldsAdd\norder=f+i+r+e\n| sort {order,direction:\"descending\"}, {`# Reachable data assets`, direction:\"descending\"}, {`# Affected processes`, direction:\"descending\"}\n| fieldsRemove affected_entity.id, `# Reachable data assets`, f,i,r,e, order\n//add ownership information\n| lookup [\nfetch dt.entity.process_group\n| fieldsAdd tags\n], sourceField:dt.entity.process_group, lookupField:id, fields:{tags}\n| parse toString(tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fieldsAdd Team\n| fields \ndt.source_entity=if(isNotNull(dt.entity.process_group),dt.entity.process_group, else:if(isNotNull(dt.entity.host), dt.entity.host, else:dt.entity.kubernetes_node)),\n`Affected entity name`,\nTeam=if(isNotNull(Team),Team,else:\"-\"), `Function usage`, `Internet exposure`, `Data assets status`, Exploit, `Affected processes`=`# Affected processes`"},"notifications":[]}},"davisAnalytics":{"analyzerComponentState":{"resultState":{}}},"davisAnalysis":{"analyzerComponentState":{"resultState":{}}}},{"id":"bfa8b76c-9bcf-47d9-aad5-415193a805bb","type":"markdown","markdown":"### Related entities\n\nThose are indirect entities with a direct connection to one of the affected entities."},{"id":"6019ab09-fc34-4527-8cd0-3cc9b3c71e20","type":"dql","title":"Related hosts","showTitle":false,"state":{"input":{"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n| filter related_entities.hosts.count>0\n| expand entity_id=related_entities.hosts.ids\n| summarize count(), by: {entity_id}\n//add ownership information\n| lookup [\nfetch dt.entity.host\n| fieldsAdd tags, process_groups=arraySize(runs[dt.entity.process_group])\n], sourceField:entity_id, lookupField:id\n| fieldsRename Tags=lookup.tags, `Running process groups`=lookup.process_groups\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fields \ndt.entity.host=entity_id, \n`Host name`=lookup.entity.name, \nTeam=if(isNotNull(Team),Team,else:\"-\"), \n`Running process groups`=if(`Running process groups`>=100,\">100\",else:coalesce(toLong(`Running process groups`), 0))\n| sort `Running process groups`, direction:\"descending\"","timeframe":{"from":"now-15m","to":"now","details":{"from":{"type":"expression","normalized":"now-15m","date":"2023-07-19T16:14:47.678Z"},"to":{"type":"expression","normalized":"now","date":"2023-07-19T16:29:47.678Z"}}}},"state":"success","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute"}},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"rowDensity":"condensed","enableLineWrap":true,"enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[["Host name"]],"firstVisibleRowIndex":0}},"result":{"code":200,"value":{"records":[{"dt.entity.host":"HOST-C3B506526E6BCA91","Host name":"gke-ostroskiworkshop-default-pool-183457ed-9m6r.c.sales-engineering-noram.internal","Team":"-","Running process groups":"52"},{"dt.entity.host":"HOST-12769BCBBB7E6395","Host name":"gke-ostroskiworkshop-default-pool-183457ed-z2f4.c.sales-engineering-noram.internal","Team":"-","Running process groups":"45"},{"dt.entity.host":"HOST-AC336C7F2616AE6F","Host name":"gke-ostroskiworkshop-default-pool-183457ed-w0ms.c.sales-engineering-noram.internal","Team":"-","Running process groups":"42"}],"metadata":{"grail":{"canonicalQuery":"fetch events\n| filter event.provider == \"Dynatrace\"\n| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level == \"ENTITY\"\n| filter contains(affected_entity.vulnerable_component.name, \"apache\")\n| fieldsAdd \"match\", alias:matcher\n| lookup \n\t[\n\t\tfetch events\n\t\t| filter event.provider == \"Dynatrace\"\n\t\t| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n\t\t| filter event.level == \"ENTITY\"\n\t\t| fields {timestamp, alias:maxTimestamp}, {\"match\", alias:matcher}\n\t\t| limit 1\n\t], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp == maxTimestamp\n| filter related_entities.hosts.count > 0\n| expand related_entities.hosts.ids, alias:entity_id\n| summarize by:{entity_id}, count()\n| lookup \n\t[\n\t\tfetch dt.entity.host\n\t\t| fieldsAdd tags, {arraySize(runs[dt.entity.process_group]), alias:process_groups}\n\t], sourceField:entity_id, lookupField:id\n| fieldsRename {lookup.tags, alias:Tags}, {lookup.process_groups, alias:`Running process groups`}\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fields {entity_id, alias:dt.entity.host}, {lookup.entity.name, alias:`Host name`}, {if(isNotNull(Team), Team, else:\"-\"), alias:Team}, {if(`Running process groups` >= 100, \">100\", else:coalesce(toLong(`Running process groups`), 0)), alias:`Running process groups`}\n| sort `Running process groups`, direction:\"descending\"","timezone":"America/New_York","query":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n| filter related_entities.hosts.count>0\n| expand entity_id=related_entities.hosts.ids\n| summarize count(), by: {entity_id}\n//add ownership information\n| lookup [\nfetch dt.entity.host\n| fieldsAdd tags, process_groups=arraySize(runs[dt.entity.process_group])\n], sourceField:entity_id, lookupField:id\n| fieldsRename Tags=lookup.tags, `Running process groups`=lookup.process_groups\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fields \ndt.entity.host=entity_id, \n`Host name`=lookup.entity.name, \nTeam=if(isNotNull(Team),Team,else:\"-\"), \n`Running process groups`=if(`Running process groups`>=100,\">100\",else:coalesce(toLong(`Running process groups`), 0))\n| sort `Running process groups`, direction:\"descending\"","scannedRecords":2463,"dqlVersion":"V1_0","scannedBytes":394489,"analysisTimeframe":{"start":"2023-08-08T00:40:56.349Z","end":"2023-08-08T00:55:56.349Z"},"locale":"","executionTimeMilliseconds":135,"notifications":[],"queryId":"2acaf001-02a4-4510-a932-0fa742d6ec79","sampled":false}},"types":[{"mappings":{"dt.entity.host":{"type":"string"},"Host name":{"type":"string"},"Team":{"type":"string"},"Running process groups":{"type":"long"}},"indexRange":[0,2]}]},"notifications":[],"dateTime":"2023-08-08T00:55:56.349Z","input":{"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n| filter related_entities.hosts.count>0\n| expand entity_id=related_entities.hosts.ids\n| summarize count(), by: {entity_id}\n//add ownership information\n| lookup [\nfetch dt.entity.host\n| fieldsAdd tags, process_groups=arraySize(runs[dt.entity.process_group])\n], sourceField:entity_id, lookupField:id\n| fieldsRename Tags=lookup.tags, `Running process groups`=lookup.process_groups\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fields \ndt.entity.host=entity_id, \n`Host name`=lookup.entity.name, \nTeam=if(isNotNull(Team),Team,else:\"-\"), \n`Running process groups`=if(`Running process groups`>=100,\">100\",else:coalesce(toLong(`Running process groups`), 0))\n| sort `Running process groups`, direction:\"descending\"","timeframe":{"from":"now-15m","to":"now","details":{"from":{"type":"expression","normalized":"now-15m","date":"2023-07-19T16:14:47.678Z"},"to":{"type":"expression","normalized":"now","date":"2023-07-19T16:29:47.678Z"}}}}},"visualization":"table"},"showInput":false,"height":450,"davisAnalytics":{"analyzerComponentState":{"resultState":{}}},"davisAnalysis":{"analyzerComponentState":{"resultState":{}}}},{"id":"47aef11a-aeaf-4d7f-9540-449635d6dcef","type":"dql","title":"Related services","showTitle":false,"state":{"input":{"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n| filter related_entities.services.count>0\n| expand entity_id=related_entities.services.ids\n| summarize count(), by: {entity_id}\n//add ownership information\n| lookup [\nfetch dt.entity.service\n| fieldsAdd tags, calling_services=arraySize(called_by[dt.entity.service])\n], sourceField:entity_id, lookupField:id\n| fieldsRename Tags=lookup.tags, `Calling services`=lookup.calling_services\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fields \ndt.entity.service=entity_id, \nService=lookup.entity.name, \nTeam=if(isNotNull(Team),Team,else:\"-\"), \n`Calling services`=if(`Calling services`>=100,\">100\",else:coalesce(toLong(`Calling services`), 0))\n| sort `Calling services`, direction:\"descending\"","timeframe":{"from":"now-15m","to":"now","details":{"from":{"type":"expression","normalized":"now-15m","date":"2023-07-19T16:15:31.045Z"},"to":{"type":"expression","normalized":"now","date":"2023-07-19T16:30:31.045Z"}}}},"state":"success","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute"}},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"rowDensity":"condensed","enableLineWrap":true,"enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[["Service"]],"firstVisibleRowIndex":0}},"result":{"code":200,"value":{"records":[{"dt.entity.service":"SERVICE-0139EC786D42D330","Service":"easyTravel Customer Frontend","Team":"-","Calling services":"0"},{"dt.entity.service":"SERVICE-0C04D7B43014854B","Service":"Requests executed in background threads of uemload.jar easytravel-loadgen-*","Team":"-","Calling services":"0"},{"dt.entity.service":"SERVICE-237D00F2951EEC96","Service":"Requests executed in background threads of uemload.jar easytravel-headless-loadgen-*","Team":"-","Calling services":"0"},{"dt.entity.service":"SERVICE-30E0711AC25469B6","Service":"volatile WebRequest","Team":"-","Calling services":"0"},{"dt.entity.service":"SERVICE-B74507778DBF578B","Service":"Requests executed in background threads of tomcat easytravel-frontend-*","Team":"-","Calling services":"0"},{"dt.entity.service":"SERVICE-B9C8EAFFB6B1347C","Service":"PluginService","Team":"-","Calling services":"0"},{"dt.entity.service":"SERVICE-C8EC3D5A1451D923","Team":"-","Calling services":"0"}],"metadata":{"grail":{"canonicalQuery":"fetch events\n| filter event.provider == \"Dynatrace\"\n| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level == \"ENTITY\"\n| filter contains(affected_entity.vulnerable_component.name, \"apache\")\n| fieldsAdd \"match\", alias:matcher\n| lookup \n\t[\n\t\tfetch events\n\t\t| filter event.provider == \"Dynatrace\"\n\t\t| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n\t\t| filter event.level == \"ENTITY\"\n\t\t| fields {timestamp, alias:maxTimestamp}, {\"match\", alias:matcher}\n\t\t| limit 1\n\t], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp == maxTimestamp\n| filter related_entities.services.count > 0\n| expand related_entities.services.ids, alias:entity_id\n| summarize by:{entity_id}, count()\n| lookup \n\t[\n\t\tfetch dt.entity.service\n\t\t| fieldsAdd tags, {arraySize(called_by[dt.entity.service]), alias:calling_services}\n\t], sourceField:entity_id, lookupField:id\n| fieldsRename {lookup.tags, alias:Tags}, {lookup.calling_services, alias:`Calling services`}\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fields {entity_id, alias:dt.entity.service}, {lookup.entity.name, alias:Service}, {if(isNotNull(Team), Team, else:\"-\"), alias:Team}, {if(`Calling services` >= 100, \">100\", else:coalesce(toLong(`Calling services`), 0)), alias:`Calling services`}\n| sort `Calling services`, direction:\"descending\"","timezone":"America/New_York","query":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n| filter related_entities.services.count>0\n| expand entity_id=related_entities.services.ids\n| summarize count(), by: {entity_id}\n//add ownership information\n| lookup [\nfetch dt.entity.service\n| fieldsAdd tags, calling_services=arraySize(called_by[dt.entity.service])\n], sourceField:entity_id, lookupField:id\n| fieldsRename Tags=lookup.tags, `Calling services`=lookup.calling_services\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fields \ndt.entity.service=entity_id, \nService=lookup.entity.name, \nTeam=if(isNotNull(Team),Team,else:\"-\"), \n`Calling services`=if(`Calling services`>=100,\">100\",else:coalesce(toLong(`Calling services`), 0))\n| sort `Calling services`, direction:\"descending\"","scannedRecords":2493,"dqlVersion":"V1_0","scannedBytes":387520,"analysisTimeframe":{"start":"2023-08-08T00:40:56.353Z","end":"2023-08-08T00:55:56.353Z"},"locale":"","executionTimeMilliseconds":181,"notifications":[],"queryId":"17ccf671-63b6-47d7-80e0-cfd1a107d54f","sampled":false}},"types":[{"mappings":{"dt.entity.service":{"type":"string"},"Service":{"type":"string"},"Team":{"type":"string"},"Calling services":{"type":"long"}},"indexRange":[0,6]}]},"notifications":[],"dateTime":"2023-08-08T00:55:56.352Z","input":{"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n| filter related_entities.services.count>0\n| expand entity_id=related_entities.services.ids\n| summarize count(), by: {entity_id}\n//add ownership information\n| lookup [\nfetch dt.entity.service\n| fieldsAdd tags, calling_services=arraySize(called_by[dt.entity.service])\n], sourceField:entity_id, lookupField:id\n| fieldsRename Tags=lookup.tags, `Calling services`=lookup.calling_services\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fields \ndt.entity.service=entity_id, \nService=lookup.entity.name, \nTeam=if(isNotNull(Team),Team,else:\"-\"), \n`Calling services`=if(`Calling services`>=100,\">100\",else:coalesce(toLong(`Calling services`), 0))\n| sort `Calling services`, direction:\"descending\"","timeframe":{"from":"now-15m","to":"now","details":{"from":{"type":"expression","normalized":"now-15m","date":"2023-07-19T16:15:31.045Z"},"to":{"type":"expression","normalized":"now","date":"2023-07-19T16:30:31.045Z"}}}}},"visualization":"table"},"showInput":false,"height":450,"davisAnalytics":{"analyzerComponentState":{"resultState":{}}},"davisAnalysis":{"analyzerComponentState":{"resultState":{}}}},{"id":"a397b0ee-2cfc-44b2-8411-e73c1cb25065","type":"dql","title":"Related database","showTitle":false,"state":{"input":{"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n| filter related_entities.databases.count>0\n| expand entity_id=related_entities.databases.ids\n| summarize count(), by: {entity_id}\n//add ownership information\n| lookup [\nfetch dt.entity.service\n| fieldsAdd tags, called_by_services=arraySize(called_by[dt.entity.service])\n], sourceField:entity_id, lookupField:id\n| fieldsRename Tags=lookup.tags, `Calling services`=lookup.called_by_services\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fields \ndt.entity.database=entity_id, \nDatabase=lookup.entity.name, \nTeam=if(isNotNull(Team),Team,else:\"-\"), \n`Calling services`=if(`Calling services`>=100,\">100\",else:coalesce(toLong(`Calling services`), 0))\n| sort `Calling services`, direction:\"descending\"","timeframe":{"from":"now-15m","to":"now","details":{"from":{"type":"expression","normalized":"now-15m","date":"2023-07-19T16:16:31.857Z"},"to":{"type":"expression","normalized":"now","date":"2023-07-19T16:31:31.857Z"}}}},"state":"success","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute"}},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"rowDensity":"condensed","enableLineWrap":true,"enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[],"firstVisibleRowIndex":4}},"result":{"code":200,"value":{"records":[],"metadata":{"grail":{"canonicalQuery":"fetch events\n| filter event.provider == \"Dynatrace\"\n| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level == \"ENTITY\"\n| filter contains(affected_entity.vulnerable_component.name, \"apache\")\n| fieldsAdd \"match\", alias:matcher\n| lookup \n\t[\n\t\tfetch events\n\t\t| filter event.provider == \"Dynatrace\"\n\t\t| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n\t\t| filter event.level == \"ENTITY\"\n\t\t| fields {timestamp, alias:maxTimestamp}, {\"match\", alias:matcher}\n\t\t| limit 1\n\t], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp == maxTimestamp\n| filter related_entities.databases.count > 0\n| expand related_entities.databases.ids, alias:entity_id\n| summarize by:{entity_id}, count()\n| lookup \n\t[\n\t\tfetch dt.entity.service\n\t\t| fieldsAdd tags, {arraySize(called_by[dt.entity.service]), alias:called_by_services}\n\t], sourceField:entity_id, lookupField:id\n| fieldsRename {lookup.tags, alias:Tags}, {lookup.called_by_services, alias:`Calling services`}\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fields {entity_id, alias:dt.entity.database}, {lookup.entity.name, alias:Database}, {if(isNotNull(Team), Team, else:\"-\"), alias:Team}, {if(`Calling services` >= 100, \">100\", else:coalesce(toLong(`Calling services`), 0)), alias:`Calling services`}\n| sort `Calling services`, direction:\"descending\"","timezone":"America/New_York","query":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n| filter related_entities.databases.count>0\n| expand entity_id=related_entities.databases.ids\n| summarize count(), by: {entity_id}\n//add ownership information\n| lookup [\nfetch dt.entity.service\n| fieldsAdd tags, called_by_services=arraySize(called_by[dt.entity.service])\n], sourceField:entity_id, lookupField:id\n| fieldsRename Tags=lookup.tags, `Calling services`=lookup.called_by_services\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fields \ndt.entity.database=entity_id, \nDatabase=lookup.entity.name, \nTeam=if(isNotNull(Team),Team,else:\"-\"), \n`Calling services`=if(`Calling services`>=100,\">100\",else:coalesce(toLong(`Calling services`), 0))\n| sort `Calling services`, direction:\"descending\"","scannedRecords":2493,"dqlVersion":"V1_0","scannedBytes":328870,"analysisTimeframe":{"start":"2023-08-08T00:40:56.356Z","end":"2023-08-08T00:55:56.356Z"},"locale":"","executionTimeMilliseconds":164,"notifications":[],"queryId":"5e54b3cf-26be-41c9-a6ba-7ffeb1780b14","sampled":false}},"types":[]},"notifications":[],"dateTime":"2023-08-08T00:55:56.355Z","input":{"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n| filter related_entities.databases.count>0\n| expand entity_id=related_entities.databases.ids\n| summarize count(), by: {entity_id}\n//add ownership information\n| lookup [\nfetch dt.entity.service\n| fieldsAdd tags, called_by_services=arraySize(called_by[dt.entity.service])\n], sourceField:entity_id, lookupField:id\n| fieldsRename Tags=lookup.tags, `Calling services`=lookup.called_by_services\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fields \ndt.entity.database=entity_id, \nDatabase=lookup.entity.name, \nTeam=if(isNotNull(Team),Team,else:\"-\"), \n`Calling services`=if(`Calling services`>=100,\">100\",else:coalesce(toLong(`Calling services`), 0))\n| sort `Calling services`, direction:\"descending\"","timeframe":{"from":"now-15m","to":"now","details":{"from":{"type":"expression","normalized":"now-15m","date":"2023-07-19T16:16:31.857Z"},"to":{"type":"expression","normalized":"now","date":"2023-07-19T16:31:31.857Z"}}}}},"visualization":"table"},"showInput":false,"height":450,"davisAnalytics":{"analyzerComponentState":{"resultState":{}}},"davisAnalysis":{"analyzerComponentState":{"resultState":{}}}},{"id":"f4ffb833-b4b8-4a14-a7ba-1f8dc7eb642b","type":"dql","title":"Related applications","showTitle":false,"state":{"input":{"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n| filter related_entities.applications.count>0\n| expand entity_id=related_entities.applications.ids\n| summarize count(), by: {entity_id}\n//add ownership information\n| lookup [\nfetch dt.entity.application\n| fieldsAdd tags, called_services=arraySize(calls[dt.entity.service])\n], sourceField:entity_id, lookupField:id\n| fieldsRename Tags=lookup.tags, `Called services`=lookup.called_services\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fields \ndt.entity.application=entity_id, \nApplication=lookup.entity.name, \nTeam=if(isNotNull(Team),Team,else:\"-\"), \n`Called services`=if(`Called services`>=100,\">100\",else:coalesce(toLong(`Called services`), 0))\n| sort `Called services`, direction:\"descending\"","timeframe":{"from":"now-15m","to":"now","details":{"from":{"type":"expression","normalized":"now-15m","date":"2023-07-19T16:17:14.910Z"},"to":{"type":"expression","normalized":"now","date":"2023-07-19T16:32:14.910Z"}}}},"state":"success","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute"}},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"rowDensity":"condensed","enableLineWrap":true,"enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[],"firstVisibleRowIndex":0}},"result":{"code":200,"value":{"records":[],"metadata":{"grail":{"canonicalQuery":"fetch events\n| filter event.provider == \"Dynatrace\"\n| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level == \"ENTITY\"\n| filter contains(affected_entity.vulnerable_component.name, \"apache\")\n| fieldsAdd \"match\", alias:matcher\n| lookup \n\t[\n\t\tfetch events\n\t\t| filter event.provider == \"Dynatrace\"\n\t\t| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n\t\t| filter event.level == \"ENTITY\"\n\t\t| fields {timestamp, alias:maxTimestamp}, {\"match\", alias:matcher}\n\t\t| limit 1\n\t], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp == maxTimestamp\n| filter related_entities.applications.count > 0\n| expand related_entities.applications.ids, alias:entity_id\n| summarize by:{entity_id}, count()\n| lookup \n\t[\n\t\tfetch dt.entity.application\n\t\t| fieldsAdd tags, {arraySize(calls[dt.entity.service]), alias:called_services}\n\t], sourceField:entity_id, lookupField:id\n| fieldsRename {lookup.tags, alias:Tags}, {lookup.called_services, alias:`Called services`}\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fields {entity_id, alias:dt.entity.application}, {lookup.entity.name, alias:Application}, {if(isNotNull(Team), Team, else:\"-\"), alias:Team}, {if(`Called services` >= 100, \">100\", else:coalesce(toLong(`Called services`), 0)), alias:`Called services`}\n| sort `Called services`, direction:\"descending\"","timezone":"America/New_York","query":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n| filter related_entities.applications.count>0\n| expand entity_id=related_entities.applications.ids\n| summarize count(), by: {entity_id}\n//add ownership information\n| lookup [\nfetch dt.entity.application\n| fieldsAdd tags, called_services=arraySize(calls[dt.entity.service])\n], sourceField:entity_id, lookupField:id\n| fieldsRename Tags=lookup.tags, `Called services`=lookup.called_services\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fields \ndt.entity.application=entity_id, \nApplication=lookup.entity.name, \nTeam=if(isNotNull(Team),Team,else:\"-\"), \n`Called services`=if(`Called services`>=100,\">100\",else:coalesce(toLong(`Called services`), 0))\n| sort `Called services`, direction:\"descending\"","scannedRecords":2461,"dqlVersion":"V1_0","scannedBytes":322533,"analysisTimeframe":{"start":"2023-08-08T00:40:56.360Z","end":"2023-08-08T00:55:56.360Z"},"locale":"","executionTimeMilliseconds":152,"notifications":[],"queryId":"62b11c93-698f-4d03-a517-1ca83b12ffdd","sampled":false}},"types":[]},"notifications":[],"dateTime":"2023-08-08T00:55:56.359Z","input":{"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n| filter related_entities.applications.count>0\n| expand entity_id=related_entities.applications.ids\n| summarize count(), by: {entity_id}\n//add ownership information\n| lookup [\nfetch dt.entity.application\n| fieldsAdd tags, called_services=arraySize(calls[dt.entity.service])\n], sourceField:entity_id, lookupField:id\n| fieldsRename Tags=lookup.tags, `Called services`=lookup.called_services\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fields \ndt.entity.application=entity_id, \nApplication=lookup.entity.name, \nTeam=if(isNotNull(Team),Team,else:\"-\"), \n`Called services`=if(`Called services`>=100,\">100\",else:coalesce(toLong(`Called services`), 0))\n| sort `Called services`, direction:\"descending\"","timeframe":{"from":"now-15m","to":"now","details":{"from":{"type":"expression","normalized":"now-15m","date":"2023-07-19T16:17:14.910Z"},"to":{"type":"expression","normalized":"now","date":"2023-07-19T16:32:14.910Z"}}}}},"visualization":"table"},"showInput":false,"height":198,"davisAnalytics":{"analyzerComponentState":{"resultState":{}}},"davisAnalysis":{"analyzerComponentState":{"resultState":{}}}},{"id":"c13ce199-b34c-4395-8e5b-9b1d71b71523","type":"dql","title":"Related Kubernetes workloads","showTitle":false,"state":{"input":{"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n| filter related_entities.kubernetes_workloads.count>0\n| expand entity_id=related_entities.kubernetes_workloads.ids\n| summarize count(), by: {entity_id}\n//add ownership information\n| lookup [\nfetch dt.entity.cloud_application\n| fieldsAdd tags, contained_pgs=arraySize(contains[dt.entity.process_group])\n], sourceField:entity_id, lookupField:id\n| fieldsRename Tags=lookup.tags, `Served process groups`=lookup.contained_pgs\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fields \ndt.entity.cloud_application=entity_id, \nWorkload=lookup.entity.name, \nTeam=if(isNotNull(Team),Team,else:\"-\"), \n`Served process groups`=if(`Served process groups`>=100,\">100\",else:coalesce(toLong(`Served process groups`), 0))\n| sort `Served process groups`, direction:\"descending\"","timeframe":{"from":"now-15m","to":"now","details":{"from":{"type":"expression","normalized":"now-15m","date":"2023-07-19T16:17:14.910Z"},"to":{"type":"expression","normalized":"now","date":"2023-07-19T16:32:14.910Z"}}}},"state":"success","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute"}},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"rowDensity":"condensed","enableLineWrap":true,"enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[],"firstVisibleRowIndex":0}},"result":{"code":200,"value":{"records":[{"dt.entity.cloud_application":"CLOUD_APPLICATION-1F08C2A89C29F782","Workload":"easytravel-headless-loadgen","Team":"-","Served process groups":"3"},{"dt.entity.cloud_application":"CLOUD_APPLICATION-4E0231F8F3425E03","Workload":"easytravel-loadgen","Team":"-","Served process groups":"1"},{"dt.entity.cloud_application":"CLOUD_APPLICATION-A584CBF6E9B9789B","Workload":"easytravel-frontend","Team":"-","Served process groups":"1"},{"dt.entity.cloud_application":"CLOUD_APPLICATION-C6EA027D9BDD4A75","Workload":"easytravel-pluginservice","Team":"-","Served process groups":"1"}],"metadata":{"grail":{"canonicalQuery":"fetch events\n| filter event.provider == \"Dynatrace\"\n| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level == \"ENTITY\"\n| filter contains(affected_entity.vulnerable_component.name, \"apache\")\n| fieldsAdd \"match\", alias:matcher\n| lookup \n\t[\n\t\tfetch events\n\t\t| filter event.provider == \"Dynatrace\"\n\t\t| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n\t\t| filter event.level == \"ENTITY\"\n\t\t| fields {timestamp, alias:maxTimestamp}, {\"match\", alias:matcher}\n\t\t| limit 1\n\t], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp == maxTimestamp\n| filter related_entities.kubernetes_workloads.count > 0\n| expand related_entities.kubernetes_workloads.ids, alias:entity_id\n| summarize by:{entity_id}, count()\n| lookup \n\t[\n\t\tfetch dt.entity.cloud_application\n\t\t| fieldsAdd tags, {arraySize(contains[dt.entity.process_group]), alias:contained_pgs}\n\t], sourceField:entity_id, lookupField:id\n| fieldsRename {lookup.tags, alias:Tags}, {lookup.contained_pgs, alias:`Served process groups`}\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fields {entity_id, alias:dt.entity.cloud_application}, {lookup.entity.name, alias:Workload}, {if(isNotNull(Team), Team, else:\"-\"), alias:Team}, {if(`Served process groups` >= 100, \">100\", else:coalesce(toLong(`Served process groups`), 0)), alias:`Served process groups`}\n| sort `Served process groups`, direction:\"descending\"","timezone":"America/New_York","query":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n| filter related_entities.kubernetes_workloads.count>0\n| expand entity_id=related_entities.kubernetes_workloads.ids\n| summarize count(), by: {entity_id}\n//add ownership information\n| lookup [\nfetch dt.entity.cloud_application\n| fieldsAdd tags, contained_pgs=arraySize(contains[dt.entity.process_group])\n], sourceField:entity_id, lookupField:id\n| fieldsRename Tags=lookup.tags, `Served process groups`=lookup.contained_pgs\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fields \ndt.entity.cloud_application=entity_id, \nWorkload=lookup.entity.name, \nTeam=if(isNotNull(Team),Team,else:\"-\"), \n`Served process groups`=if(`Served process groups`>=100,\">100\",else:coalesce(toLong(`Served process groups`), 0))\n| sort `Served process groups`, direction:\"descending\"","scannedRecords":2539,"dqlVersion":"V1_0","scannedBytes":409175,"analysisTimeframe":{"start":"2023-08-08T00:40:56.364Z","end":"2023-08-08T00:55:56.364Z"},"locale":"","executionTimeMilliseconds":282,"notifications":[],"queryId":"0ad90c66-47ba-41c1-98a8-efbca2368c9c","sampled":false}},"types":[{"mappings":{"dt.entity.cloud_application":{"type":"string"},"Workload":{"type":"string"},"Team":{"type":"string"},"Served process groups":{"type":"long"}},"indexRange":[0,3]}]},"notifications":[],"dateTime":"2023-08-08T00:55:56.363Z","input":{"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n| filter related_entities.kubernetes_workloads.count>0\n| expand entity_id=related_entities.kubernetes_workloads.ids\n| summarize count(), by: {entity_id}\n//add ownership information\n| lookup [\nfetch dt.entity.cloud_application\n| fieldsAdd tags, contained_pgs=arraySize(contains[dt.entity.process_group])\n], sourceField:entity_id, lookupField:id\n| fieldsRename Tags=lookup.tags, `Served process groups`=lookup.contained_pgs\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fields \ndt.entity.cloud_application=entity_id, \nWorkload=lookup.entity.name, \nTeam=if(isNotNull(Team),Team,else:\"-\"), \n`Served process groups`=if(`Served process groups`>=100,\">100\",else:coalesce(toLong(`Served process groups`), 0))\n| sort `Served process groups`, direction:\"descending\"","timeframe":{"from":"now-15m","to":"now","details":{"from":{"type":"expression","normalized":"now-15m","date":"2023-07-19T16:17:14.910Z"},"to":{"type":"expression","normalized":"now","date":"2023-07-19T16:32:14.910Z"}}}}},"visualization":"table"},"showInput":false,"height":258,"davisAnalytics":{"analyzerComponentState":{"resultState":{}}},"davisAnalysis":{"analyzerComponentState":{"resultState":{}}}},{"id":"9a1031e3-13ca-406c-b08f-2dec9fc2e5ed","type":"dql","title":"Related Kubernetes clusters","showTitle":false,"state":{"input":{"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n| filter related_entities.kubernetes_clusters.count>0\n| expand entity_id=related_entities.kubernetes_clusters.ids\n| summarize count(), by: {entity_id}\n//add ownership information\n| lookup [\nfetch dt.entity.kubernetes_cluster\n| fieldsAdd tags, workloads=arraySize(cluster_of[dt.entity.cloud_application])\n], sourceField:entity_id, lookupField:id\n| fieldsRename Tags=lookup.tags, `Kubernetes workloads`=lookup.workloads\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fields \ndt.entity.kubernetes_cluster=entity_id, \nCluster=lookup.entity.name, \nTeam=if(isNotNull(Team),Team,else:\"-\"), \n`Kubernetes workloads`=if(`Kubernetes workloads`>=100,\">100\",else:coalesce(toLong(`Kubernetes workloads`), 0))\n| sort `Kubernetes workloads`, direction:\"descending\"","timeframe":{"from":"now-15m","to":"now","details":{"from":{"type":"expression","normalized":"now-15m","date":"2023-07-19T16:17:14.910Z"},"to":{"type":"expression","normalized":"now","date":"2023-07-19T16:32:14.910Z"}}}},"state":"success","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute"}},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"rowDensity":"condensed","enableLineWrap":true,"enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[],"firstVisibleRowIndex":0}},"result":{"code":200,"value":{"records":[{"dt.entity.kubernetes_cluster":"KUBERNETES_CLUSTER-9A07EABF136EC917","Cluster":"grailworkshop","Team":"-","Kubernetes workloads":"79"}],"metadata":{"grail":{"canonicalQuery":"fetch events\n| filter event.provider == \"Dynatrace\"\n| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level == \"ENTITY\"\n| filter contains(affected_entity.vulnerable_component.name, \"apache\")\n| fieldsAdd \"match\", alias:matcher\n| lookup \n\t[\n\t\tfetch events\n\t\t| filter event.provider == \"Dynatrace\"\n\t\t| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n\t\t| filter event.level == \"ENTITY\"\n\t\t| fields {timestamp, alias:maxTimestamp}, {\"match\", alias:matcher}\n\t\t| limit 1\n\t], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp == maxTimestamp\n| filter related_entities.kubernetes_clusters.count > 0\n| expand related_entities.kubernetes_clusters.ids, alias:entity_id\n| summarize by:{entity_id}, count()\n| lookup \n\t[\n\t\tfetch dt.entity.kubernetes_cluster\n\t\t| fieldsAdd tags, {arraySize(cluster_of[dt.entity.cloud_application]), alias:workloads}\n\t], sourceField:entity_id, lookupField:id\n| fieldsRename {lookup.tags, alias:Tags}, {lookup.workloads, alias:`Kubernetes workloads`}\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fields {entity_id, alias:dt.entity.kubernetes_cluster}, {lookup.entity.name, alias:Cluster}, {if(isNotNull(Team), Team, else:\"-\"), alias:Team}, {if(`Kubernetes workloads` >= 100, \">100\", else:coalesce(toLong(`Kubernetes workloads`), 0)), alias:`Kubernetes workloads`}\n| sort `Kubernetes workloads`, direction:\"descending\"","timezone":"America/New_York","query":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n| filter related_entities.kubernetes_clusters.count>0\n| expand entity_id=related_entities.kubernetes_clusters.ids\n| summarize count(), by: {entity_id}\n//add ownership information\n| lookup [\nfetch dt.entity.kubernetes_cluster\n| fieldsAdd tags, workloads=arraySize(cluster_of[dt.entity.cloud_application])\n], sourceField:entity_id, lookupField:id\n| fieldsRename Tags=lookup.tags, `Kubernetes workloads`=lookup.workloads\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fields \ndt.entity.kubernetes_cluster=entity_id, \nCluster=lookup.entity.name, \nTeam=if(isNotNull(Team),Team,else:\"-\"), \n`Kubernetes workloads`=if(`Kubernetes workloads`>=100,\">100\",else:coalesce(toLong(`Kubernetes workloads`), 0))\n| sort `Kubernetes workloads`, direction:\"descending\"","scannedRecords":2461,"dqlVersion":"V1_0","scannedBytes":399057,"analysisTimeframe":{"start":"2023-08-08T00:40:56.367Z","end":"2023-08-08T00:55:56.367Z"},"locale":"","executionTimeMilliseconds":145,"notifications":[],"queryId":"4833a5ce-c1fe-4ede-9bf2-85c860e171a9","sampled":false}},"types":[{"mappings":{"dt.entity.kubernetes_cluster":{"type":"string"},"Cluster":{"type":"string"},"Team":{"type":"string"},"Kubernetes workloads":{"type":"long"}},"indexRange":[0,0]}]},"notifications":[],"dateTime":"2023-08-08T00:55:56.366Z","input":{"value":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter contains(affected_entity.vulnerable_component.name,\"apache\") // filter for explicit component\n//filter for the latest snapshot\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher, fields:{maxTimestamp}\n| filter timestamp==maxTimestamp\n// end of filter for the latest snapshot\n| filter related_entities.kubernetes_clusters.count>0\n| expand entity_id=related_entities.kubernetes_clusters.ids\n| summarize count(), by: {entity_id}\n//add ownership information\n| lookup [\nfetch dt.entity.kubernetes_cluster\n| fieldsAdd tags, workloads=arraySize(cluster_of[dt.entity.cloud_application])\n], sourceField:entity_id, lookupField:id\n| fieldsRename Tags=lookup.tags, `Kubernetes workloads`=lookup.workloads\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fields \ndt.entity.kubernetes_cluster=entity_id, \nCluster=lookup.entity.name, \nTeam=if(isNotNull(Team),Team,else:\"-\"), \n`Kubernetes workloads`=if(`Kubernetes workloads`>=100,\">100\",else:coalesce(toLong(`Kubernetes workloads`), 0))\n| sort `Kubernetes workloads`, direction:\"descending\"","timeframe":{"from":"now-15m","to":"now","details":{"from":{"type":"expression","normalized":"now-15m","date":"2023-07-19T16:17:14.910Z"},"to":{"type":"expression","normalized":"now","date":"2023-07-19T16:32:14.910Z"}}}}},"visualization":"table"},"showInput":false,"height":268,"davisAnalytics":{"analyzerComponentState":{"resultState":{}}},"davisAnalysis":{"analyzerComponentState":{"resultState":{}}}}]}
