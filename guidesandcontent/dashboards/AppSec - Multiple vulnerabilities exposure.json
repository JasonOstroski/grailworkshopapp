{"version":11,"variables":[{"key":"ScanGBLimit","type":"csv","input":"1000,3000,5000,10000,-1","multiple":false},{"key":"Status","type":"csv","input":"ANY,OPEN,RESOLVED,MUTED","multiple":false},{"key":"RiskLevel","type":"csv","input":"ANY,CRITICAL,HIGH,MEDIUM,LOW","multiple":true},{"key":"ComponentName","type":"csv","input":"ANY,log4j,apache,spring","multiple":false},{"key":"ManagementZone","type":"query","input":"fetch events\n| filter event.kind == \"SECURITY_EVENT\"\n| filter event.category == \"VULNERABILITY_MANAGEMENT\"\n| filter event.provider == \"Dynatrace\"\n| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"   \n| filter event.level == \"ENTITY\" \n| summarize takeLast(vulnerability.id), by: {affected_entity.management_zones.names}\n| fields values = affected_entity.management_zones.names \n| fields values = arrayRemoveNulls(array(\"ANY\", values))","multiple":false},{"key":"StackLevel","type":"query","input":"fetch events , from:now()-30m\n| filter event.level==\"ENTITY\"\n| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n| filterOut isNull(vulnerability.stack)\n| summarize stack=splitString(concat(\"ANY, \",substring(toString(collectDistinct(vulnerability.stack)),from:1,to:-1)),\", \")","multiple":false},{"key":"Type","type":"query","input":"fetch events , from:now()-30m\n| filter event.level==\"ENTITY\"\n| filter event.type == \"VULNERABILITY_STATE_REPORT_EVENT\"\n| summarize type=splitString(concat(\"ANY, \",substring(toString(collectDistinct(vulnerability.type)),from:1,to:-1)),\", \")","multiple":false}],"tiles":{"12":{"title":"","type":"markdown","content":"![](https://dt-cdn.net/images/appsec-logo-with-bg-and-rounded-corners-200-8253a2bc6e.png)\n### Dynatrace AppSec"},"14":{"title":"","type":"markdown","content":"# Third-party vulnerabilities exposure report\n\nTrack and report your organization's exposure to third-party vulnerabilities.\n\n#### Use this template to answer the following security questions:\n\n* Is your organization exposed to threat-related vulnerabilities?\n* What areas of your environment are at risk?\n* How has the exposure changed over time?\n\n*Note: Dashboard contents are calculated and displayed according to set [variable values](https://www.dynatrace.com/support/help/observe-and-explore/dashboards-new/get-started/dashboards-use#dashboard-variable-set).*"},"17":{"type":"data","title":"Vulnerability count by status","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| summarize\n`Status`=takeFirst(vulnerability.resolution.status),\n`Muted`=takeFirst(vulnerability.mute.status==\"MUTED\"),\nby: {vulnerability.display_id,alias:`Problem id`, bin(timestamp,1h),alias:timestamp}\n| summarize\n`Open`=countIf(Status==\"OPEN\" AND Muted==FALSE),\n`Resolved`=countIf(Status!=\"OPEN\" AND Muted==FALSE),\n`Muted`=countIf(Muted==TRUE),\nby: {timestamp}\n| sort timestamp, direction:\"descending\"","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","legend":{"hidden":false,"position":"right"},"seriesOverrides":[{"seriesId":"Resolved","override":{"color":{"Default":"var(--dt-colors-charts-categorical-color-03-default, #009e8c)","Hover":"var(--dt-colors-charts-categorical-color-03-hover, #008071)","Active":"var(--dt-colors-charts-categorical-color-03-active, #006156)","DefaultTransparent":"var(--dt-colors-charts-categorical-color-03-default-transparent, #008771cc)","HoverTransparent":"var(--dt-colors-charts-categorical-color-03-hover-transparent, #005e50cc)","ActiveTransparent":"var(--dt-colors-charts-categorical-color-03-active-transparent, #00322bcc)"}}},{"seriesId":"Muted","override":{"color":{"Default":"var(--dt-colors-charts-categorical-themed-blue-steel-color-04-default, #5d687e)","Hover":"var(--dt-colors-charts-categorical-themed-blue-steel-color-04-hover, #4a5164)","Active":"var(--dt-colors-charts-categorical-themed-blue-steel-color-04-active, #363d49)","DefaultTransparent":"var(--dt-colors-charts-categorical-themed-blue-steel-color-04-default-transparent, #384560cc)","HoverTransparent":"var(--dt-colors-charts-categorical-themed-blue-steel-color-04-hover-transparent, #1f293fcc)","ActiveTransparent":"var(--dt-colors-charts-categorical-themed-blue-steel-color-04-active-transparent, #070f1ecc)"}}},{"seriesId":"Open","override":{"color":{"Default":"var(--dt-colors-charts-categorical-color-12-default, #d50b34)","Hover":"var(--dt-colors-charts-categorical-color-12-hover, #b30024)","Active":"var(--dt-colors-charts-categorical-color-12-active, #7e071d)","DefaultTransparent":"var(--dt-colors-charts-categorical-color-12-default-transparent, #c5000ccc)","HoverTransparent":"var(--dt-colors-charts-categorical-color-12-hover-transparent, #83000fcc)","ActiveTransparent":"var(--dt-colors-charts-categorical-color-12-active-transparent, #140000cc)"}}}]},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]},"singleValueSettings":{"showLabel":true,"suffix":"","recordField":"Davis Security Score","autoscale":true}},"visualization":"areaChart"},"20":{"type":"data","title":"Entities with internet exposure","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| summarize\n{\n`Internet exposure`=countIf(vulnerability.davis_assessment.exposure_status==\"PUBLIC_EXPOSURE\")\n},\nby: {timestamp, affected_entity.id}\n| summarize\n{\n`Exposed`=countIf(`Internet exposure`>0),\n`Not Exposed`=countIf(`Internet exposure`==0)\n},\nby: {timestamp}\n| sort timestamp, direction:\"descending\"\n| summarize\n{\n`Exposed`=takeFirst(`Exposed`)\n//`Not Exposed`=takeFirst(`Not Exposed`)\n},\nby: {bin(timestamp, 1h),alias:timestamp}\n| sort timestamp, direction:\"descending\"","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","legend":{"hidden":false,"position":"auto"},"leftYAxisSettings":{"label":"","min":0},"seriesOverrides":[{"seriesId":"Total affected entities","override":{"color":{"Default":"var(--dt-colors-charts-categorical-themed-blue-steel-color-05-default, #638ecf)","Hover":"var(--dt-colors-charts-categorical-themed-blue-steel-color-05-hover, #4e72a6)","Active":"var(--dt-colors-charts-categorical-themed-blue-steel-color-05-active, #3b567d)"}}},{"seriesId":"Exposted entities","override":{"color":"#b3007d"}}]},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[["Affected entities"]],"firstVisibleRowIndex":0},"singleValueSettings":{"showLabel":true,"suffix":"","recordField":"Affected Entities","autoscale":true}},"visualization":"areaChart"},"31":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n//end of filtering for the latest snapshot\n| summarize\n`Status`=takeFirst(vulnerability.resolution.status),\n`Muted`=takeFirst(vulnerability.mute.status==\"MUTED\"),\nby: {vulnerability.display_id,alias:`Problem id`}\n| summarize\n`Muted`=countIf(Muted==TRUE),\n`Resolved`=countIf(Status!=\"OPEN\" AND Muted==FALSE),\n`Open`=countIf(Status==\"OPEN\" AND Muted==FALSE)\n| fields Open=if(Open>0,Open,else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]},"singleValueSettings":{"showLabel":true,"suffix":"","autoscale":true}},"visualization":"singleValue"},"32":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n//end of filtering for the latest snapshot\n| summarize\n`Status`=takeFirst(vulnerability.resolution.status),\n`Muted`=takeFirst(vulnerability.mute.status==\"MUTED\"),\nby: {vulnerability.display_id,alias:`Problem id`}\n| summarize\n`Muted`=countIf(Muted==TRUE),\n`Resolved`=countIf(Status!=\"OPEN\" AND Muted==FALSE),\n`Open`=countIf(Status==\"OPEN\" AND Muted==FALSE)\n| fields Muted=if(Muted>0,Muted,else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[],"firstVisibleRowIndex":0},"singleValueSettings":{"showLabel":true,"suffix":"","autoscale":true}},"visualization":"singleValue"},"35":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n//end of filtering for the latest snapshot\n| summarize\naffected_entity.type=takeAny(affected_entity.type),\nby: {affected_entity.id}\n| summarize\n`Process groups`=countIf(affected_entity.type==\"PROCESS_GROUP\")\n| fields `Process groups`=if(`Process groups`>0,`Process groups`,else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]}},"visualization":"singleValue"},"37":{"title":"","type":"markdown","content":"## 💥 Exposure summary\n--- \nYour environment's exposure to vulnerabilities, the affected or related entities, and the exploitation risk."},"40":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| sort timestamp, direction:\"descending\"\n| summarize entities=takeFirst(related_entities.applications.ids), \nby:{timestamp=bin(timestamp, 1h), affected_entity.id, vulnerability.id}\n| summarize entities=collectDistinct(entities), by:{timestamp}\n| expand entities\n| summarize entities=arraySize(arrayRemoveNulls(collectDistinct(entities))), by:{timestamp}\n| sort timestamp, direction:\"descending\"\n| summarize \nstart=takeLast(entities), \nend=takeFirst(entities)\n| fields delta=end-start\n| fields `Applications delta`=if(delta>0,concat(delta,\"↗️\"),else:if(delta<0,concat(delta,\"↘️\"),else:delta))","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","legend":{"hidden":true,"position":"bottom"},"leftYAxisSettings":{"label":"","min":0,"scale":"linear"}},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]},"singleValueSettings":{"showLabel":true,"suffix":"","recordField":"Affected Entities","autoscale":true}},"visualization":"singleValue"},"47":{"title":"","type":"markdown","content":"## 📃 Code analysis\n--- \nInsights into the usage of vulnerable components and functions. "},"48":{"type":"data","title":"Vulnerable components","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n//end of filtering for the latest snapshot\n| filter isNotNull(affected_entity.vulnerable_component.id)\n//add ownership information\n| lookup [\nfetch dt.entity.process_group\n| fieldsAdd tags\n], sourceField:dt.entity.process_group, lookupField:id\n| fieldsRename Tags=lookup.tags\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fieldsAdd Team=if(isNotNull(Team),Team,else:\"-\")\n| fieldsRemove lookup.id, lookup.entity.name, Tags\n// end of adding ownership info\n| summarize\n`# Affected entities`=arraySize(collectDistinct(affected_entity.id)),\n`Component name`=takeFirst(affected_entity.vulnerable_component.name),\n`# Function usages` = countIf(vulnerability.davis_assessment.vulnerable_function_status == \"IN_USE\"),\n`# Function not in use` = countIf(vulnerability.davis_assessment.vulnerable_function_status == \"NOT_IN_USE\"),\n`Teams`=takeFirst(Team),\nby: {affected_entity.vulnerable_component.id, alias:`Component id`}\n| summarize\n`Component name`=takeFirst(`Component name`),\n`# Affected entities`=takeFirst(`# Affected entities`),\n`# Function usages`=takeFirst(`# Function usages`),\n`# Function not in use`=takeFirst(`# Function not in use`),\n`Teams`=collectDistinct(`Teams`),\nby: {`Component id`}\n| fields\ndt.entity.software_component=`Component id`,\n`Component name`,\n`Dev team`=Teams,\n`Affected entities`=`# Affected entities`,\n`Function usage`=if(`# Function usages`>0,concat(\"❗\",\"In use\"),else:if(`# Function not in use`>0,\"Not in use\",else:\"No data\"))\n| sort `Function usage`, direction:\"descending\", `Affected entities`, direction:\"descending\"","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[["Affected process ids"]],"firstVisibleRowIndex":0},"singleValueSettings":{"showLabel":true,"suffix":"","recordField":"Affected Entities","autoscale":true}},"visualization":"table"},"51":{"type":"data","title":"Top 5 entities with function in use","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n//end of filtering for the latest snapshot\n// first extract the latest snapshot data per each pair (affected entity,security problem)\n| filter vulnerability.davis_assessment.vulnerable_function_status==\"IN_USE\"\n| summarize\n`Affected entity name`=takeFirst(affected_entity.name),\n`Internet exposure`=takeFirst(vulnerability.davis_assessment.exposure_status),\n`Reachable data assets`=takeFirst(vulnerability.davis_assessment.data_assets_status),\ndt.entity.process_group=takeFirst(dt.entity.process_group),\ndt.entity.host=takeFirst(dt.entity.process_group),\ndt.entity.kubernetes_node=takeFirst(dt.entity.process_group),\nby: {affected_entity.id}\n| fields \n`Affected entity name`, \ndt.entity.process_group, \n`Internet exposure`=if(`Internet exposure`==\"PUBLIC_NETWORK\",concat(\"❗\",\"Public exposure\"),else:\"Not exposed\"),\n`Reachable data assets`=if(arraySize(toArray(`Reachable data assets`))>0,concat(\"❗\",\"Reachable\"), else:\"Unreachable\")\n| sort `Internet exposure`, `Reachable data assets`, direction:\"descending\"\n//add ownership information\n| lookup [\nfetch dt.entity.process_group\n| fieldsAdd tags\n], sourceField:dt.entity.process_group, lookupField:id\n| fieldsRename Tags=lookup.tags\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fieldsAdd Team\n| fieldsRemove lookup.id, lookup.entity.name, Tags\n| fields \ndt.entity.process_group,\n`Affected entity name`,\n`Dev team`=if(isNotNull(Team),Team,else:\"-\"),\n`Internet exposure`,\n`Reachable databases`=`Reachable data assets`\n| sort `Internet exposure`, direction:\"descending\", `Reachable databases`, direction:\"descending\"","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[["Affected entity name"]]},"tableSettings":{"displayMode":"edit","lineWrapIds":[["Affected process ids"],["# Affected processes"]],"firstVisibleRowIndex":0},"singleValueSettings":{"showLabel":true,"suffix":"","recordField":"Affected Entities","autoscale":true}},"visualization":"table"},"54":{"type":"data","title":"Top 10 affected entities (by function usage, internet exposure,  data assets)","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n//end of filtering for the latest snapshot\n| summarize\n`Last status`=takeFirst(vulnerability.resolution.change_date),\n`Status`=takeFirst(vulnerability.resolution.status),\n`Muted`=takeFirst(vulnerability.mute.status==\"MUTED\"),\n`Name`=takeFirst(affected_entity.name),\n`Type`=takeFirst(affected_entity.type),\n`Internet exposure`=takeFirst(vulnerability.davis_assessment.exposure_status),\n`Function usage`=takeFirst(vulnerability.davis_assessment.vulnerable_function_status),\n`Reachable data assets`=takeFirst(vulnerability.davis_assessment.data_asset_status),\n`# Related databases`=takeFirst(related_entities.databases.count),\n`Exploit`=takeFirst(vulnerability.davis_assessment.exploit_status),\ndt.entity.process_group=takeFirst(dt.entity.process_group),\ndt.entity.host=takeFirst(dt.entity.host),\ndt.entity.kubernetes_node=takeFirst(dt.entity.kubernetes_node),\nby: {affected_entity.id}\n| fields\naffected_entity.id,\nName=Name,\nType=Type,\nStatus=if(Status==\"RESOLVED\",concat(\"✅\",\"Resolved\"),else:if(Muted, concat(\"⚫\",\" Muted(\",Status,\")\"), else:Status)),\n`Status date`=toTimestamp(`Last status`),\n`Function usage`=if(`Function usage`==\"IN_USE\",concat(\"❗\",\"In use\"),else:if(`Function usage`==\"NOT_IN_USE\",\"Not in use\", else:\"No data\")),\nf=if(`Function usage`==\"IN_USE\",10,else:0),\n`Internet exposure`=if(`Internet exposure`==\"PUBLIC_NETWORK\",concat(\"❗\",\"Public\"),else:\"Not exposed\"),\ni=if(`Internet exposure`==\"PUBLIC_NETWORK\",5,else:0),\n`# Reachable data assets`=`# Related databases`,\nr=if(`# Related databases`>0,1,else:0),\n`Data assets`=if(`Reachable data assets`==\"REACHABLE\",concat(\"❗\",\" Reachable\"), else:\"Unreachable\"),\n`Exploit`=if(`Exploit`,concat(\"❗\",\"Exists\"),else:\"None\"),\ne=if(`Exploit`,3,else:0),\ndt.entity.process_group=dt.entity.process_group,\ndt.entity.host=dt.entity.host,\ndt.entity.kubernetes_node=dt.entity.kubernetes_node\n| fieldsAdd\norder=f+i+r+e\n| sort order, direction:\"descending\", `# Reachable data assets`, direction:\"descending\"\n| fieldsRemove affected_entity.id, `# Reachable data assets`, f,i,r,e, order\n| limit 10\n//add ownership information\n| lookup [\nfetch dt.entity.process_group\n| fieldsAdd tags\n], sourceField:dt.entity.process_group, lookupField:id\n| fieldsRename Tags=lookup.tags\n| parse toString(Tags), \"LD ('owner:'|'owner\\\\\\\\:') (SPACE)? LD:Team ('\\\"')\"\n| fieldsAdd Team\n| fieldsRemove lookup.id, lookup.entity.name, Tags\n| fields \ndt.source_entity=if(isNotNull(dt.entity.process_group),dt.entity.process_group, else:if(isNotNull(dt.entity.host), dt.entity.host, else:dt.entity.kubernetes_node)),\nName, Type, Status, `Status date`,\n`Dev team`=if(isNotNull(Team),Team, else:\"-\"), `Function usage`, `Internet exposure`, `Data assets`, Exploit","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[["Affected process ids"],["Related services"],["Affected entity name"],["lookup.tags"],["Tags"]],"firstVisibleRowIndex":0},"singleValueSettings":{"showLabel":true,"suffix":"","recordField":"Affected Entities","autoscale":true}},"visualization":"table"},"55":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n//end of filtering for the latest snapshot\n| summarize\n`Status`=takeFirst(vulnerability.resolution.status),\n`Muted`=takeFirst(vulnerability.mute.status==\"MUTED\"),\nby: {vulnerability.display_id,alias:`Problem id`}\n| summarize\n`Muted`=countIf(Muted==TRUE),\n`Resolved`=countIf(Status!=\"OPEN\" AND Muted==FALSE),\n`Open`=countIf(Status==\"OPEN\" AND Muted==FALSE)\n| fields Resolved=if(Resolved>0,Resolved,else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]}},"visualization":"singleValue"},"58":{"title":"","type":"markdown","content":"## 🔍 Vulnerability details\n--- \nVulnerability counts, trends, and priority list."},"59":{"title":"","type":"markdown","content":"## 🎯 Environment analysis\n--- \nIn-depth examination of your environment in the context of selected vulnerabilities; includes a list of the most affected entities and the responsible teams."},"63":{"title":"","type":"markdown","content":"### Vulnerable functions"},"64":{"type":"data","title":"Function count by usage status","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| sort timestamp, direction:\"descending\"\n| summarize `Functions in use`=takeFirst(affected_entity.vulnerable_functions),\nby: {timestamp=bin(timestamp,1h), affected_entity.id, vulnerability.id}\n| summarize `Functions in use`=collectDistinct(`Functions in use`),\nby: {timestamp}\n| expand `Functions in use`\n| summarize `Functions in use`=collectDistinct(`Functions in use`),\nby: {timestamp}\n| fields timestamp, `Functions in use`=arraySize(arrayRemoveNulls(`Functions in use`))\n| sort timestamp, direction:\"descending\"","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","legend":{"hidden":false,"position":"auto"},"leftYAxisSettings":{"label":"","min":0,"scale":"linear","max":null}},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]},"singleValueSettings":{"showLabel":true,"suffix":"","recordField":"Affected Entities","autoscale":true}},"visualization":"areaChart"},"66":{"type":"data","title":"Software component count by vulnerable function usage","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| filter isNotNull(affected_entity.vulnerable_component.id)\n| sort timestamp, direction:\"descending\"\n| summarize \n{\naffected_entity.vulnerable_component.id=takeFirst(affected_entity.vulnerable_component.id),\nvulnerability.vulnerable_function_status=takeFirst(vulnerability.davis_assessment.vulnerable_function_status)\n},\nby: {timestamp=bin(timestamp, 1h), affected_entity.id, vulnerability.display_id}\n| summarize \n`In use`=countIf(vulnerability.vulnerable_function_status==\"IN_USE\" AND isNotNull(affected_entity.vulnerable_component.id)),\n`Not in use`=countIf(vulnerability.vulnerable_function_status==\"NOT_IN_USE\" AND isNotNull(affected_entity.vulnerable_component.id)),\n`No data`=countIf(vulnerability.vulnerable_function_status==\"NOT_AVAILABLE\" AND isNotNull(affected_entity.vulnerable_component.id)),\nby: {timestamp, affected_entity.vulnerable_component.id}\n| summarize \n{`In use`=countIf(`In use`>0),\n`Not in use`=countIf(`In use`==0 AND `Not in use`>0),\n`No data`=countIf(`In use`==0 AND `Not in use`==0 AND `No data`>0)},\nby:{timestamp}\n| sort timestamp, direction:\"descending\"","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","legend":{"hidden":false,"position":"auto"},"leftYAxisSettings":{"label":"","min":0},"seriesOverrides":[{"seriesId":["No data"],"override":{"color":{"Default":"var(--dt-colors-charts-categorical-themed-blue-steel-color-04-default, #5d687e)","Hover":"var(--dt-colors-charts-categorical-themed-blue-steel-color-04-hover, #4a5164)","Active":"var(--dt-colors-charts-categorical-themed-blue-steel-color-04-active, #363d49)","DefaultTransparent":"var(--dt-colors-charts-categorical-themed-blue-steel-color-04-default-transparent, #384560cc)","HoverTransparent":"var(--dt-colors-charts-categorical-themed-blue-steel-color-04-hover-transparent, #1f293fcc)","ActiveTransparent":"var(--dt-colors-charts-categorical-themed-blue-steel-color-04-active-transparent, #070f1ecc)"}}},{"seriesId":["Not in use"],"override":{"color":{"Default":"var(--dt-colors-charts-categorical-color-09-default, #0d9c29)","Hover":"var(--dt-colors-charts-categorical-color-09-hover, #0a7b20)","Active":"var(--dt-colors-charts-categorical-color-09-active, #075f19)","DefaultTransparent":"var(--dt-colors-charts-categorical-color-09-default-transparent, #008500cc)","HoverTransparent":"var(--dt-colors-charts-categorical-color-09-hover-transparent, #005905cc)","ActiveTransparent":"var(--dt-colors-charts-categorical-color-09-active-transparent, #003112cc)"}}},{"seriesId":["In use"],"override":{"color":{"Default":"var(--dt-colors-charts-categorical-color-12-default, #d50b34)","Hover":"var(--dt-colors-charts-categorical-color-12-hover, #b30024)","Active":"var(--dt-colors-charts-categorical-color-12-active, #7e071d)","DefaultTransparent":"var(--dt-colors-charts-categorical-color-12-default-transparent, #c5000ccc)","HoverTransparent":"var(--dt-colors-charts-categorical-color-12-hover-transparent, #83000fcc)","ActiveTransparent":"var(--dt-colors-charts-categorical-color-12-active-transparent, #140000cc)"}}}]},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[["Affected entities"]],"firstVisibleRowIndex":0},"singleValueSettings":{"showLabel":true,"suffix":"","recordField":"Affected Entities","autoscale":true}},"visualization":"areaChart"},"68":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName) \n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n//end of filtering for the latest snapshot\n| summarize\n`Status`=takeFirst(vulnerability.resolution.status),\n`Muted`=takeFirst(vulnerability.mute.status==\"MUTED\"),\nby: {vulnerability.display_id,alias:`Problem id`}\n| summarize\n`Muted`=countIf(Muted==TRUE),\n`Resolved`=countIf(Status!=\"OPEN\" AND Muted==FALSE),\n`Open`=countIf(Status==\"OPEN\" AND Muted==FALSE)\n| fields `Risk state`=if(toLong(Open)>0,concat(\"🔥\",\" \",\"Vulnerable\"),else:if(Muted<1,\"Not at risk\", else:if(Resolved<1,concat(\"⚠️\",\" \",\"All muted\"),else:\"All resolved\")))","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"singleValueSettings":{"showLabel":false,"suffix":"","autoscale":true},"tableSettings":{"displayMode":"edit","lineWrapIds":[]}},"visualization":"singleValue"},"69":{"type":"code","title":"Exploitation Risk Score (0-100)","input":"const From=$dt_timeframe_from;\nconst To=$dt_timeframe_to;\nconst ComponentName = $ComponentName;\nlet RiskLevel = $RiskLevel;\nif (RiskLevel.length>1) {\n  RiskLevel=\"\\\"\" + RiskLevel.join(\"\\\",\\\"\") + \"\\\"\";\n} else{\n  RiskLevel=\"\\\"\" + RiskLevel + \"\\\"\";\n};\nconsole.log(RiskLevel);\nconst Status = $Status;\nconst StackLevel = $StackLevel;\nconst ManagementZone = $ManagementZone;\nimport { queryExecutionClient } from '@dynatrace-sdk/client-query';\nexport default async function () {\nasync function pollQuery(requestToken, resolve) {\n\n  const poll = await queryExecutionClient.queryPoll({requestToken, requestTimeoutMilliseconds: 3000});\n  if(poll.result) {\n      resolve(poll.result);\n  } else {\n      pollQuery(requestToken, resolve);\n  }\n}\nfunction runQuery (query) {\n  return new Promise(async (resolve, reject) => {\n\n      const queryExecution = await queryExecutionClient.queryExecute({body: { query }});\n      if(queryExecution.result) {\n          resolve(queryExecution.result);\n      } else {\n          pollQuery(queryExecution.requestToken, resolve)\n      }\n\n  });\n}\n\n const commonFilterQueryPart =\n `fetch events, from:toTimestamp(\"${From}\"), to:toTimestamp(\"${To}\")\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter \"${Status}\"==\"ANY\" OR \"${Status}\"==event.status\n| filter in(\"ANY\", {${RiskLevel}}) OR in(vulnerability.risk.level,{${RiskLevel}})\n| filter \"ANY\"==\"${StackLevel}\" OR vulnerability.stack==\"${StackLevel}\"\n| filter \"${ManagementZone}\"==\"ANY\" OR in(\"${ManagementZone}\",affected_entity.management_zones.names)\n| filter \"${ComponentName}\"==\"ANY\" OR contains(affected_entity.vulnerable_component.name,\"${ComponentName}\")\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, from:toTimestamp(\"${From}\"), to:toTimestamp(\"${To}\")\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter \"${Status}\"==\"ANY\" OR \"${Status}\"==event.status\n| filter in(\"ANY\", {${RiskLevel}}) OR in(vulnerability.risk.level,{${RiskLevel}})\n| filter \"ANY\"==\"${StackLevel}\" OR vulnerability.stack==\"${StackLevel}\"\n| filter \"${ManagementZone}\"==\"ANY\" OR in(\"${ManagementZone}\",affected_entity.management_zones.names)\n| filter \"${ComponentName}\"==\"ANY\" OR contains(affected_entity.vulnerable_component.name,\"${ComponentName}\")\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n//end of filtering for the latest snapshot`;\n \n const vulnBySeverityQueryString = `${commonFilterQueryPart}\n | summarize \n   Muted=takeFirst(vulnerability.mute.status==\"MUTED\"), \n   vulnerability.risk.level=takeFirst(vulnerability.risk.level), \n   by: {vulnerability.display_id, timestamp} \n | summarize \n C=countIf(vulnerability.risk.level==\"CRITICAL\" AND Muted==FALSE), \n H=countIf(vulnerability.risk.level==\"HIGH\" AND Muted==FALSE), \n M=countIf(vulnerability.risk.level==\"MEDIUM\" AND Muted==FALSE), \n L=countIf(vulnerability.risk.level==\"LOW\" AND Muted==FALSE), \n by: {timestamp} \n | summarize  \n C=takeLast(C), \n H=takeLast(H), \n M=takeLast(M), \n L=takeLast(L)`;\n \n const avgRiskScoreQueryString = `${commonFilterQueryPart}\n | summarize \n  Risk = takeFirst(vulnerability.risk.level), \n  Muted=takeFirst(vulnerability.mute.status), \n  RiskScore=takeFirst(vulnerability.risk.score), \n  by: {vulnerability.display_id, timestamp} \n | filterOut Muted == \"MUTED\"\n | summarize \n  average=avg(RiskScore), \n  by: {risk=Risk, timestamp} \n | summarize average=takeLast(average), \n by: {risk}`;\n \n \n  // Get the counts per risk level using DQL\n  console.log(vulnBySeverityQueryString);\n  const vulnBySeverityQueryResult = await runQuery(vulnBySeverityQueryString); \n  \n  if (vulnBySeverityQueryResult.records == null || vulnBySeverityQueryResult.records.length==0){\n    return \"No Data\";\n  }\n  const vulnBySeverity=vulnBySeverityQueryResult.records[0];\n  \n    // Define data set: Number of problems per criticality level\n  \n    // Get the avg score per risk level using DQL\n  const avgRiskScoreQueryResult = await runQuery(avgRiskScoreQueryString);\n  \n  const avgRiskScore=avgRiskScoreQueryResult.records.reduce((obj,record)=>{\n      \n    if(record == null ||  obj == null || record.average == null) return;\n    if(record.risk==\"CRITICAL\"){\n      obj.C=record.average;\n    }\n    if(record.risk==\"HIGH\"){\n      obj.H=record.average;\n    }\n    if(record.risk==\"MEDIUM\"){\n      obj.M=record.average;\n    }\n    if(record.risk==\"LOW\"){\n      obj.L=record.average;\n    }\n    return obj;\n  },{\"C\":0,\"H\":0,\"M\":0,\"L\":0});\n\n  // Define weights of the criticality level. Higher weight means that the contribution in the highest criticality level is higher.\n  const weights = {\n    \"C\": 60,\n    \"H\": 20,\n    \"M\": 5,\n    \"L\": 1,\n  };\n \n  // Define ranges for the criticality levels\n  const scoreRanges = {\n      \"C\": [9, 10],\n      \"H\": [7, 9],\n      \"M\": [4, 7],\n      \"L\": [0.5, 4],\n    };\n \n \n  // Normalize the average risk score of each severity against the score range of that severity (output between 0 and 1).\n  const normalizedAvgSeverities={}\n  for(const[severity, avg] of Object.entries(avgRiskScore)){\n    const minScore=scoreRanges[severity][0];\n    const maxScore=scoreRanges[severity][1];\n    const scoreRange=maxScore-minScore;\n    normalizedAvgSeverities[severity]=(avgRiskScore[severity]-minScore)/scoreRange;\n  }\n    // Define logistic function and scale to make sense of the amount of problems in a criticality level (output is always between 0 and 1)\n    const scale=10\n    function logistic(x) {\n      return Math.tanh(x/scale)\n    }\n  \n    const severities = Object.keys(vulnBySeverity);\n   \n    let score=0;\n    let minScore=0;\n    let maxScore=0;\n   \n    const unrelevantSeverities=[];\n   \n    // Calculate min/max and the distance between min and max (the final score range) in the highest available criticality level\n    for (const severity of severities) {\n      if (vulnBySeverity[severity] >= 1) {\n        minScore=scoreRanges[severity][0];\n        maxScore=scoreRanges[severity][1];\n        break;\n      }else{\n        // Remove all severities that are above the maximum range to have a better result for lower scores\n        unrelevantSeverities.push(severity); \n      }\n    }\n    const scoreRange=maxScore-minScore;\n   \n    const relevantWeights=Object.fromEntries(Object.entries(weights).filter(([severity,weight]) => !unrelevantSeverities.includes(severity)));\n    const relevantSeverities=severities.filter((severity,weight) => !unrelevantSeverities.includes(severity));\n   \n    \n    // Convert weights into percentage based ratios\n    const weightRatios={};\n    let totalWeight = Object.values(relevantWeights).reduce((acc, number) => acc + number, 0);\n    for(const[severity, weight] of Object.entries(relevantWeights)){\n      weightRatios[severity]=weight/totalWeight;\n    }\n   \n    // Increase the min score of the highest criticality level by the score contribution of each criticality level (based on weight and count)\n    let addedScore=0;\n    for(const severity of relevantSeverities){\n      const maxAddedScore=weightRatios[severity]*scoreRange;\n      const scoreContribution=maxAddedScore*logistic(vulnBySeverity[severity])*normalizedAvgSeverities[severity];\n      addedScore+=scoreContribution\n    }\n   \n    // Calculate final score\n    const finalScore= (minScore + addedScore)*10;\n    let scoreStr=finalScore.toPrecision(2);\n    return scoreStr;\n}","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":false,"label":"","autoscale":true},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"singleValueSettings":{"showLabel":false,"suffix":"","autoscale":true}},"visualization":"singleValue"},"71":{"type":"data","title":"Vulnerability count by risk level ","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| summarize\n`Status`=takeFirst(vulnerability.resolution.status),\n`Muted`=takeFirst(vulnerability.mute.status==\"MUTED\"),\n`Risk level`=takeFirst(vulnerability.risk.level),\nby: {vulnerability.display_id, bin(timestamp,1h),alias:timestamp}\n| summarize\nCritical=countIf(`Risk level`==\"CRITICAL\" AND `Muted`==FALSE),\nHigh=countIf(`Risk level`==\"HIGH\" AND `Muted`==FALSE),\nMedium=countIf(`Risk level`==\"MEDIUM\" AND `Muted`==FALSE),\nLow=countIf(`Risk level`==\"LOW\" AND `Muted`==FALSE),\nby: {timestamp}\n| sort timestamp, direction:\"descending\"","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","legend":{"hidden":false,"position":"right"},"seriesOverrides":[{"seriesId":"Muted","override":{"color":{"Default":"var(--dt-colors-charts-categorical-themed-swamps-color-06-default, #091953)","Hover":"var(--dt-colors-charts-categorical-themed-swamps-color-06-hover, #3b4978)","Active":"var(--dt-colors-charts-categorical-themed-swamps-color-06-active, #6c7799)","DefaultTransparent":"var(--dt-colors-charts-categorical-themed-swamps-color-06-default-transparent, #000c)","HoverTransparent":"var(--dt-colors-charts-categorical-themed-swamps-color-06-hover-transparent, #0d1e58cc)","ActiveTransparent":"var(--dt-colors-charts-categorical-themed-swamps-color-06-active-transparent, #495881cc)"}}}],"colorPalette":"vulnerability-risk-level"},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[],"firstVisibleRowIndex":0},"singleValueSettings":{"showLabel":true,"suffix":"","recordField":"Davis Security Score","autoscale":true}},"visualization":"areaChart"},"72":{"type":"data","title":"Vulnerability count by risk level ","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n//end of filtering for the latest snapshot\n| filter vulnerability.resolution.status==\"OPEN\" AND vulnerability.mute.status!=\"MUTED\"\n| sort vulnerability.risk.score, direction:\"descending\"\n| summarize \ncount(),\nby: {`Risk level`=vulnerability.risk.level}","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","colorPalette":"vulnerability-risk-level","circleChartSettings":{"hideLabels":false,"groupingThresholdType":"absolute"},"legend":{"hidden":false,"position":"auto"},"categoricalBarChartSettings":{"categoryAxisLabel":"Risk level","valueAxisLabel":"","layout":"vertical","scale":"absolute","categoryAxisTickLayout":"horizontal","categoryAxis":"Risk level","valueAxis":"count()"}},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"enableLineWrap":false,"lineWrapIds":[]}},"visualization":"donutChart"},"73":{"title":"","type":"markdown","content":"<br/><br/>  \n__Exploitation Risk Score (ERS)__ is a dynamic, weighted score that leverages the Davis Security Score (DSS) of each vulnerability and the actual number of vulnerabilities per risk level. ERS represents the likelihood of a potential attacker exploiting open vulnerabilities from the filtered scope.\nHow ERS is calculated:\n1. DSS average and vulnerability counts are calculated per risk level (critical, high, etc.). \n2. A weighted function is applied per risk level to adjust the averages to the respective vulnerability counts.  \n3. All scores are aggregated in an iterative manner starting with the highest risk level to derive a single score out of 100.  \n\n__Note__: Higher scores represent higher risk. Scores above 90 involve critical vulnerabilities. "},"75":{"type":"data","title":"Vulnerabilities (by status, risk, function, exposure, exploit, data assets, entities)","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n//end of filtering for the latest snapshot\n// now summarize on the vulnerability level\n| summarize\n`Last status`=takeFirst(vulnerability.resolution.change_date),\n`Status`=takeFirst(vulnerability.resolution.status),\n`Muted`=takeFirst(vulnerability.mute.status==\"MUTED\"),\n`# Affected entities`=arraySize(collectDistinct(affected_entity.id)),\n`Component name`=takeFirst(affected_entity.vulnerable_component.name),\n`DSS`=round(takeFirst(vulnerability.risk.score),decimals:1),\n`Davis Security Level`=takeFirst(vulnerability.risk.level),\n`Problem title`=takeFirst(vulnerability.title),\n`Technology`=takeFirst(vulnerability.technology),\n`CVE list`=takeFirst(vulnerability.references.cve),\nTitle=takeFirst(vulnerability.title),\n`# Function in use`=countIf(vulnerability.davis_assessment.vulnerable_function_status==\"IN_USE\"),\n`# Function no data`=countIf(vulnerability.davis_assessment.vulnerable_function_status==\"NOT_AVAILABLE\"),\n`# Exposure to internet`=countIf(vulnerability.davis_assessment.exposure_status==\"PUBLIC_NETWORK\"),\n`# Exposure no data`=countIf(vulnerability.davis_assessment.exposure_status==\"NOT_AVAILABLE\"),\n`# Reachable databases`=takeFirst(related_entities.databases.count),\n`# Exploit`=countIf(vulnerability.davis_assessment.exploit_status==\"AVAILABLE\"),\nby: {vulnerability.display_id}\n| fieldsAdd risk_order=if(`Davis Security Level`==\"CRITICAL\",1, else:if(`Davis Security Level`==\"HIGH\",2,  else:if(`Davis Security Level`==\"MEDIUM\",3 ,else:if(`Davis Security Level`==\"LOW\",4))))\n| fields \nrisk_order,\n`Davis Security Score`=concat(`Davis Security Level`,\" (\",`DSS`,\")\"),\nDSS,\nvulnerability.display_id,\nTitle,\n`CVE`=if(arraySize(`CVE list`)>0,`CVE list`,else:\"-\"),\nStatus=if(Status==\"RESOLVED\",concat(\"✅\",\"Resolved\"),else:if(Muted, concat(\"⚫\",\" Muted(\",Status,\")\"), else:Status)),\n`Status date`=toTimestamp(`Last status`),\n`# Function in use`,\n`Function usage`=if(`# Function in use`>0,concat(\"❗\",\"In use\"),else:if(`# Function no data`>0,\"No data\",else:\"Not in use\")),\n`# Exposure to internet`,\n`Internet exposure`=if(`# Exposure to internet`>0,concat(\"❗\",\"Public\"),else:if(`# Exposure no data`>0,\"No data\",else:\"Not exposed\")),\n`# Exploit`,\n`Exploit`=if(`# Exploit`>0,concat(\"❗\",\"Exists\"),else:\"No data\"),\n`# Reachable databases`,\n`Data assets`=if(`# Reachable databases`>0,concat(\"❗\",\"Reachable\"), else:\"Unreachable\"),\n`Affected entities`=`# Affected entities`\n| sort   Status,  risk_order, `# Function in use`, direction:\"descending\", `# Exposure to internet`, direction:\"descending\", `# Exploit`, direction:\"descending\", `# Reachable databases`, direction:\"descending\", `Affected entities`, direction:\"descending\", DSS, direction:\"descending\"\n| fieldsRemove DSS, risk_order, `# Function in use`,`# Reachable databases`,`# Exposure to internet`,`# Exploit`","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[["External id"]],"firstVisibleRowIndex":0}},"visualization":"table"},"76":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n//end of filtering for the latest snapshot\n| summarize\n`Vulnerabilities`=toString(arraySize(collectDistinct(vulnerability.display_id)))\n| fields `Total vulnerabilities`=`Vulnerabilities`","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]},"singleValueSettings":{"showLabel":true,"suffix":"","autoscale":true}},"visualization":"singleValue"},"77":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n//end of filtering for the latest snapshot\n| summarize\n`Status`=takeFirst(vulnerability.resolution.status),\n`Muted`=takeFirst(vulnerability.mute.status==\"MUTED\"),\n`Risk level`=takeFirst(vulnerability.risk.level),\nby: {vulnerability.display_id,alias:`Problem id`}\n| summarize\n`# Critical`=countIf(in(`Risk level`,\"CRITICAL\") AND Status==\"OPEN\"), \n`# High`=countIf(in(`Risk level`,\"HIGH\") AND Status==\"OPEN\"), \n`# Medium`=countIf(in(`Risk level`,\"MEDIUM\") AND Status==\"OPEN\"),\n`# Low`=countIf(in(`Risk level`,\"LOW\") AND Status==\"OPEN\") \n| fields `Most severe open vulnerabilities`=if(`# Critical`>0,concat(\"❗Critical: \",`# Critical`), else: if(`# High`>0,concat(\"High: \",`# High`), else:if(`# Medium`>0,concat(\"Medium: \",`# Medium`), else:concat(\"Low: \",`# Low`))))","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]},"singleValueSettings":{"showLabel":true,"suffix":"","autoscale":true}},"visualization":"singleValue"},"89":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| sort timestamp, direction:\"descending\"\n| limit 1\n| fields\n`Latest analyzed data`=formatTimestamp(timestamp, format:\"YYYY-MM-dd\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"singleValueSettings":{"showLabel":false,"suffix":"","autoscale":true},"tableSettings":{"displayMode":"edit","lineWrapIds":[]}},"visualization":"singleValue"},"93":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n//end of filtering for the latest snapshot\n| summarize \n{\n`Internet exposure`=countIf(vulnerability.davis_assessment.exposure_status==\"PUBLIC_NETWORK\"),\n`Exploit available`=countIf(vulnerability.davis_assessment.exploit_status==\"AVAILABLE\"),\n`Function in use`=countIf(vulnerability.davis_assessment.vulnerable_function_status==\"IN_USE\"),\n`Reachable data assets`=countIf(vulnerability.davis_assessment.data_asset_status==\"REACHABLE\")\n}, by: {vulnerability.display_id}\n| summarize\n{\n`Internet exposure`=countIf(`Internet exposure`>0),\n`Exploit available`=countIf(`Exploit available`>0),\n`Function in use`=countIf(`Function in use`>0),\n`Reachable data assets`=countIf(`Reachable data assets`>0)\n}\n| fields `With internet exposure`=if(`Internet exposure`>0,`Internet exposure`,else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]}},"visualization":"singleValue"},"94":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n//end of filtering for the latest snapshot\n| summarize \n{\n`Internet exposure`=countIf(vulnerability.davis_assessment.exposure_status==\"PUBLIC_NETWORK\"),\n`Exploit available`=countIf(vulnerability.davis_assessment.exploit_status==\"AVAILABLE\"),\n`Function in use`=countIf(vulnerability.davis_assessment.vulnerable_function_status==\"IN_USE\"),\n`Reachable data assets`=countIf(vulnerability.davis_assessment.data_asset_status==\"REACHABLE\")\n}, by: {vulnerability.display_id}\n| summarize\n{\n`Internet exposure`=countIf(`Internet exposure`>0),\n`Exploit available`=countIf(`Exploit available`>0),\n`Function in use`=countIf(`Function in use`>0),\n`Reachable data assets`=countIf(`Reachable data assets`>0)\n}\n| fields `Can reach data assets`=if(`Reachable data assets`>0,`Reachable data assets`,else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]}},"visualization":"singleValue"},"95":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n//end of filtering for the latest snapshot\n| summarize \n{\n`Internet exposure`=countIf(vulnerability.davis_assessment.exposure_status==\"PUBLIC_NETWORK\"),\n`Exploit available`=countIf(vulnerability.davis_assessment.exploit_status==\"AVAILABLE\"),\n`Function in use`=countIf(vulnerability.davis_assessment.vulnerable_function_status==\"IN_USE\"),\n`Reachable data assets`=countIf(vulnerability.davis_assessment.data_asset_status==\"REACHABLE\")\n}, by: {vulnerability.display_id}\n| summarize\n{\n`Internet exposure`=countIf(`Internet exposure`>0),\n`Exploit available`=countIf(`Exploit available`>0),\n`Function in use`=countIf(`Function in use`>0),\n`Reachable data assets`=countIf(`Reachable data assets`>0)\n}\n| fields `With confirmed exploit`=if(`Exploit available`>0,`Exploit available`,else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"singleValueSettings":{"showLabel":true,"suffix":"","autoscale":true}},"visualization":"singleValue"},"96":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n//end of filtering for the latest snapshot\n| summarize \n{\n`Internet exposure`=countIf(vulnerability.davis_assessment.exposure_status==\"PUBLIC_NETWORK\"),\n`Exploit available`=countIf(vulnerability.davis_assessment.exploit_status==\"AVAILABLE\"),\n`Function in use`=countIf(vulnerability.davis_assessment.vulnerable_function_status==\"IN_USE\"),\n`Reachable data assets`=countIf(vulnerability.davis_assessment.data_asset_status==\"REACHABLE\")\n}, by: {vulnerability.display_id}\n| summarize\n{\n`Internet exposure`=countIf(`Internet exposure`>0),\n`Exploit available`=countIf(`Exploit available`>0),\n`Function in use`=countIf(`Function in use`>0),\n`Reachable data assets`=countIf(`Reachable data assets`>0)\n}\n| fields `With function in use`=if(`Function in use`>0,`Function in use`,else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[],"firstVisibleRowIndex":0},"singleValueSettings":{"showLabel":true,"suffix":"","autoscale":true}},"visualization":"singleValue"},"97":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n//end of filtering for the latest snapshot\n| sort timestamp, direction:\"descending\"\n| summarize\n`Davis Security Score`=takeFirst(vulnerability.risk.score),\n`Davis Security Level`=takeFirst(vulnerability.risk.level),\nby: {vulnerability.display_id}\n| summarize\n`max Davis Security Score`=round(max(`Davis Security Score`),decimals:1)\n| fields `Highest Davis Security Score`=if(`max Davis Security Score`>9,concat(\"🚨\",\" CRITICAL(\",`max Davis Security Score`,\")\"),\nelse:if(`max Davis Security Score`>7,concat(\"❗\",\" HIGH(\",`max Davis Security Score`,\")\"),\nelse:if(`max Davis Security Score`>4,concat(\"MEDIUM(\",`max Davis Security Score`,\")\"),\nelse:concat(\"LOW(\",`max Davis Security Score`,\")\"))))","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]},"singleValueSettings":{"showLabel":true,"suffix":"","recordField":"Highest Davis Security Score","autoscale":true}},"visualization":"singleValue"},"99":{"title":"","type":"markdown","content":"### Types"},"102":{"title":"","type":"markdown","content":"### Risk"},"104":{"type":"data","title":"Vulnerability count by type","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n//end of filtering for the latest snapshot\n| sort timestamp, direction:\"descending\"\n| summarize \n{\nvulnerability.type=takeFirst(vulnerability.type)\n},\nby: {vulnerability.display_id}\n| summarize \nvulnerabilities=count(), by:{vulnerability.type}\n| sort vulnerabilities,direction:\"descending\"\n|limit 5","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","colorPalette":"categorical","circleChartSettings":{"hideLabels":false,"groupingThresholdType":"relative"},"legend":{"hidden":false,"position":"auto"},"categoricalBarChartSettings":{"categoryAxisLabel":"vulnerability.type","valueAxisLabel":"Number","layout":"vertical","categoryAxisTickLayout":"horizontal","categoryAxis":"vulnerability.type","valueAxis":"vulnerabilities"}},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"rowDensity":"condensed","enableLineWrap":false,"enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[]}},"visualization":"categoricalBarChart"},"105":{"title":"","type":"markdown","content":"<br/><br/>"},"106":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n//end of filtering for the latest snapshot\n| summarize\n`Status`=takeFirst(vulnerability.resolution.status),\n`Muted`=takeFirst(vulnerability.mute.status==\"MUTED\"),\nby: {vulnerability.display_id,alias:`Problem id`}\n| summarize\n`Muted`=countIf(Muted==TRUE),\n`Resolved`=countIf(Status!=\"OPEN\" AND Muted==FALSE),\n`Open`=countIf(Status==\"OPEN\" AND Muted==FALSE)\n| fields Open=if(Open>0,Open,else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]},"singleValueSettings":{"showLabel":true,"suffix":"","autoscale":true}},"visualization":"singleValue"},"107":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n//end of filtering for the latest snapshot\n| summarize\n`Status`=takeFirst(vulnerability.resolution.status),\n`Muted`=takeFirst(vulnerability.mute.status==\"MUTED\"),\nby: {vulnerability.display_id,alias:`Problem id`}\n| summarize\n`Muted`=countIf(Muted==TRUE),\n`Resolved`=countIf(Status!=\"OPEN\" AND Muted==FALSE),\n`Open`=countIf(Status==\"OPEN\" AND Muted==FALSE)\n| fields Resolved=if(Resolved>0,Resolved,else:\"-\")\n","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]}},"visualization":"singleValue"},"108":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n//end of filtering for the latest snapshot\n| summarize\n`Status`=takeFirst(vulnerability.resolution.status),\n`Muted`=takeFirst(vulnerability.mute.status==\"MUTED\"),\nby: {vulnerability.display_id,alias:`Problem id`}\n| summarize\n`Muted`=countIf(Muted==TRUE),\n`Resolved`=countIf(Status!=\"OPEN\" AND Muted==FALSE),\n`Open`=countIf(Status==\"OPEN\" AND Muted==FALSE)\n| fields Muted=if(Muted>0,Muted,else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[],"firstVisibleRowIndex":0},"singleValueSettings":{"showLabel":true,"suffix":"","autoscale":true}},"visualization":"singleValue"},"111":{"title":"","type":"markdown","content":"### Status trends"},"113":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n//end of filtering for the latest snapshot\n// first summarize on the entity level\n| summarize\n`# Function usages`=countIf(vulnerability.davis_assessment.vulnerable_function_status==\"IN_USE\"),\n`# Function not in use`=countIf(vulnerability.davis_assessment.vulnerable_function_status==\"NOT_IN_USE\"),\nby: {affected_entity.id}\n// now count the entities\n| summarize\n`Entities with function in use`=countIf(`# Function usages`>0)\n| fields `Entities with function in use`=if(`Entities with function in use`>0,`Entities with function in use`,else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]}},"visualization":"singleValue"},"114":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n//end of filtering for the latest snapshot\n| summarize entities=collectDistinct(related_entities.hosts.ids)\n| expand entities\n| summarize entities=arraySize(arrayRemoveNulls(collectDistinct(entities)))\n| fields `Related hosts`=if(entities>0, entities,  else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[],"firstVisibleRowIndex":0}},"visualization":"singleValue"},"115":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n//end of filtering for the latest snapshot\n| summarize entities=collectDistinct(related_entities.services.ids)\n| expand entities\n| summarize entities=arraySize(arrayRemoveNulls(collectDistinct(entities)))\n| fields `Related services`=if(entities>0, entities,  else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[["Related services"]]}},"visualization":"singleValue"},"116":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n//end of filtering for the latest snapshot\n| summarize `Software components`=arrayRemoveNulls(collectDistinct(affected_entity.vulnerable_component.id))\n| fields `Software components`=arraySize(`Software components`)\n| fields `Software components`=if(`Software components`>0,`Software components`,else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]}},"visualization":"singleValue"},"117":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n//end of filtering for the latest snapshot\n| summarize entities=collectDistinct(related_entities.databases.ids)\n| expand entities\n| summarize entities=arraySize(arrayRemoveNulls(collectDistinct(entities)))\n| fields `Related databases`=if(entities>0, entities,  else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]}},"visualization":"singleValue"},"118":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n//end of filtering for the latest snapshot\n| summarize entities=collectDistinct(related_entities.kubernetes_workloads.ids)\n| expand entities\n| summarize entities=arraySize(arrayRemoveNulls(collectDistinct(entities)))\n| fields `Related Kubernetes workloads`=if(entities>0, entities,  else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[],"firstVisibleRowIndex":0}},"visualization":"singleValue"},"119":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n//end of filtering for the latest snapshot\n| summarize `Functions in use`=collectDistinct(affected_entity.vulnerable_functions)\n| expand `Functions in use`\n| summarize `Functions in use`=collectDistinct(`Functions in use`)\n| fields `Functions in use`=arraySize(arrayRemoveNulls(`Functions in use`))\n| fields `Functions in use`=if(`Functions in use`>0,`Functions in use`,else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]}},"visualization":"singleValue"},"120":{"title":"","type":"markdown","content":"### Vulnerabilities"},"121":{"title":"","type":"markdown","content":"### Impact on environment"},"123":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n//end of filtering for the latest snapshot\n| summarize entities=collectDistinct(related_entities.applications.ids)\n| expand entities\n| summarize entities=arraySize(arrayRemoveNulls(collectDistinct(entities)))\n| fields `Related applications`=if(entities>0, entities,  else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[["Related services"]]}},"visualization":"singleValue"},"124":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| fields vulnerability.resolution.change_date=toTimestamp(vulnerability.resolution.change_date)\n| sort vulnerability.resolution.change_date, direction:\"descending\"\n| limit 1\n| fields `Latest status change`=formatTimestamp(vulnerability.resolution.change_date, format:\"YYYY-MM-dd\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"singleValueSettings":{"showLabel":false,"suffix":"","autoscale":true},"tableSettings":{"displayMode":"edit","lineWrapIds":[]}},"visualization":"singleValue"},"126":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| summarize\n`Status`=takeFirst(vulnerability.resolution.status),\n`Muted`=takeFirst(vulnerability.mute.status==\"MUTED\"),\nby: {vulnerability.display_id,alias:`Problem id`, bin(timestamp,1h),alias:timestamp}\n| summarize\n`Open`=countIf(Status==\"OPEN\" AND Muted==FALSE),\n`Resolved`=countIf(Status!=\"OPEN\" AND Muted==FALSE),\n`Muted`=countIf(Muted==TRUE),\nby: {timestamp}\n| sort timestamp, direction:\"descending\"\n| summarize start = takeLast(Open), end = takeFirst(Open)\n| fields delta=end-start\n| fields `Open delta`=if(delta>0,concat(delta,\"↗️\"),else:if(delta<0,concat(delta,\"↘️\"),else:delta))","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]},"singleValueSettings":{"showLabel":true,"suffix":"","autoscale":true}},"visualization":"singleValue"},"127":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| summarize\n`Status`=takeFirst(vulnerability.resolution.status),\n`Muted`=takeFirst(vulnerability.mute.status==\"MUTED\"),\nby: {vulnerability.display_id,alias:`Problem id`, bin(timestamp,1h),alias:timestamp}\n| summarize\n`Open`=countIf(Status==\"OPEN\" AND Muted==FALSE),\n`Resolved`=countIf(Status!=\"OPEN\" AND Muted==FALSE),\n`Muted`=countIf(Muted==TRUE),\nby: {timestamp}\n| sort timestamp, direction:\"descending\"\n| summarize start = takeLast(Muted), end = takeFirst(Muted)\n| fields delta=end-start\n| fields `Mute delta`=if(delta>0,concat(delta,\"↗️\"),else:if(delta<0,concat(delta,\"↘️\"),else:delta))","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]},"singleValueSettings":{"showLabel":true,"suffix":"","autoscale":true}},"visualization":"singleValue"},"128":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| summarize\n`Status`=takeFirst(vulnerability.resolution.status),\n`Muted`=takeFirst(vulnerability.mute.status==\"MUTED\"),\nby: {vulnerability.display_id,alias:`Problem id`, bin(timestamp,1h),alias:timestamp}\n| summarize\n`Open`=countIf(Status==\"OPEN\" AND Muted==FALSE),\n`Resolved`=countIf(Status!=\"OPEN\" AND Muted==FALSE),\n`Muted`=countIf(Muted==TRUE),\nby: {timestamp}\n| sort timestamp, direction:\"descending\"\n| summarize start = takeLast(Resolved), end = takeFirst(Resolved)\n| fields delta=end-start\n| fields `Resolved delta`=if(delta>0,concat(delta,\"↗️\"),else:if(delta<0,concat(delta,\"↘️\"),else:delta))","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]},"singleValueSettings":{"showLabel":true,"suffix":"","autoscale":true}},"visualization":"singleValue"},"130":{"title":"","type":"markdown","content":"## 📈 Risk analysis\n--- \nVulnerability counts and trends based on the Davis risk and impact assessment."},"131":{"type":"data","title":"Vulnerability count by assessment","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| sort timestamp, direction:\"descending\"\n| summarize \n{\nvulnerability.exposure_status=takeFirst(vulnerability.davis_assessment.exposure_status),\nvulnerability.exploit_status=takeFirst(vulnerability.davis_assessment.exploit_status),\nvulnerability.vulnerable_function_status=takeFirst(vulnerability.davis_assessment.vulnerable_function_status),\nvulnerability.data_asset_status=takeFirst(vulnerability.davis_assessment.data_asset_status)\n}, by: {timestamp=bin(timestamp,1h), vulnerability.display_id}\n| summarize\n{\n`Internet exposure`=countIf(vulnerability.exposure_status==\"PUBLIC_NETWORK\"),\n`Exploit available`=countIf(vulnerability.exploit_status==\"AVAILABLE\"),\n`Function in use`=countIf(vulnerability.vulnerable_function_status==\"IN_USE\"),\n`Reachable data assets`=countIf(vulnerability.data_asset_status==\"REACHABLE\")\n},\nby: {timestamp}\n| sort timestamp, direction:\"descending\"","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[],"firstVisibleRowIndex":0},"singleValueSettings":{"showLabel":true,"suffix":"","autoscale":true}},"visualization":"areaChart"},"132":{"title":"","type":"markdown","content":"<br/><br/>"},"133":{"title":"","type":"markdown","content":"<br/><br/>"},"134":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n//end of filtering for the latest snapshot\n| summarize\naffected_entity.type=takeAny(affected_entity.type),\nby: {affected_entity.id}\n| summarize \n`Affected process groups`=countIf(affected_entity.type==\"PROCESS_GROUP\")\n| fields `Affected process groups`=if(`Affected process groups`>0,`Affected process groups`,else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[],"firstVisibleRowIndex":0}},"visualization":"singleValue"},"135":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n//end of filtering for the latest snapshot\n| summarize\naffected_entity.type=takeAny(affected_entity.type),\nby: {affected_entity.id}\n| summarize \n`Affected hosts`=countIf(affected_entity.type==\"HOST\")\n| fields `Affected hosts`=if(`Affected hosts`>0,`Affected hosts`,else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[],"firstVisibleRowIndex":0}},"visualization":"singleValue"},"136":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| sort timestamp, direction:\"descending\"\n| summarize \n{\naffected_entity.type=takeFirst(affected_entity.type)\n},\nby: {timestamp=bin(timestamp, 1h), affected_entity.id}\n// end of latest snapshot fetch\n| summarize {\n`Process groups`=countIf(affected_entity.type==\"PROCESS_GROUP\"),\n`Hosts`=countIf(affected_entity.type==\"HOST\")\n}, \nby: {timestamp}\n| sort timestamp, direction:\"descending\"\n| summarize \nstart=takeLast(`Process groups`), \nend=takeFirst(`Process groups`)\n| fields delta=end-start\n| fields `Process groups delta`=if(delta>0,concat(delta,\"↗️\"),else:if(delta<0,concat(delta,\"↘️\"),else:delta))","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]}},"visualization":"singleValue"},"137":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n//end of filtering for the latest snapshot\n| sort timestamp, direction:\"descending\"\n| summarize\n`Risk level`=takeFirst(vulnerability.risk.level),\nby: {vulnerability.display_id}\n| summarize\n`Critical`=countIf(`Risk level`==\"CRITICAL\")\n| fields Critical=if(Critical>0,Critical,else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]},"singleValueSettings":{"showLabel":true,"suffix":"","recordField":"Highest Davis Security Score","autoscale":true}},"visualization":"singleValue"},"138":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n//end of filtering for the latest snapshot\n| sort timestamp, direction:\"descending\"\n| summarize\n`Risk level`=takeFirst(vulnerability.risk.level),\nby: {vulnerability.display_id}\n| summarize\n`High`=countIf(`Risk level`==\"HIGH\")\n| fields High=if(High>0,High,else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]},"singleValueSettings":{"showLabel":true,"suffix":"","recordField":"Highest Davis Security Score","autoscale":true}},"visualization":"singleValue"},"139":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n//end of filtering for the latest snapshot\n| sort timestamp, direction:\"descending\"\n| summarize\n`Risk level`=takeFirst(vulnerability.risk.level),\nby: {vulnerability.display_id}\n| summarize\n`Medium`=countIf(`Risk level`==\"MEDIUM\")\n| fields Medium=if(Medium>0,Medium,else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]},"singleValueSettings":{"showLabel":true,"suffix":"","recordField":"Highest Davis Security Score","autoscale":true}},"visualization":"singleValue"},"140":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n//end of filtering for the latest snapshot\n| sort timestamp, direction:\"descending\"\n| summarize\n`Risk level`=takeFirst(vulnerability.risk.level),\nby: {vulnerability.display_id}\n| summarize\n`Low`=countIf(`Risk level`==\"LOW\")\n| fields Low=if(Low>0,Low,else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]},"singleValueSettings":{"showLabel":true,"suffix":"","recordField":"Highest Davis Security Score","autoscale":true}},"visualization":"singleValue"},"141":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| sort timestamp, direction:\"descending\"\n| summarize\n`Risk level`=takeFirst(vulnerability.risk.level),\nby: {vulnerability.display_id, bin(timestamp,1h),alias:timestamp}\n| summarize\nCritical=countIf(`Risk level`==\"CRITICAL\"),\nby: {timestamp}\n| sort timestamp, direction:\"descending\"\n| summarize start = takeLast(Critical), end = takeFirst(Critical)\n| fields delta=end-start\n| fields `Critical delta`=if(delta>0,concat(delta,\"↗️\"),else:if(delta<0,concat(delta,\"↘️\"),else:delta))","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]},"singleValueSettings":{"showLabel":true,"suffix":"","autoscale":true}},"visualization":"singleValue"},"142":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| sort timestamp, direction:\"descending\"\n| summarize\n`Risk level`=takeFirst(vulnerability.risk.level),\nby: {vulnerability.display_id, bin(timestamp,1h),alias:timestamp}\n| summarize\nHigh=countIf(`Risk level`==\"HIGH\"),\nby: {timestamp}\n| sort timestamp, direction:\"descending\"\n| summarize start = takeLast(High), end = takeFirst(High)\n| fields delta=end-start\n| fields `High delta`=if(delta>0,concat(delta,\"↗️\"),else:if(delta<0,concat(delta,\"↘️\"),else:delta))","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]},"singleValueSettings":{"showLabel":true,"suffix":"","autoscale":true}},"visualization":"singleValue"},"143":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| sort timestamp, direction:\"descending\"\n| summarize\n`Risk level`=takeFirst(vulnerability.risk.level),\nby: {vulnerability.display_id, bin(timestamp,1h),alias:timestamp}\n| summarize\nMedium=countIf(`Risk level`==\"MEDIUM\"),\nby: {timestamp}\n| sort timestamp, direction:\"descending\"\n| summarize start = takeLast(Medium), end = takeFirst(Medium)\n| fields delta=end-start\n| fields `Medium delta`=if(delta>0,concat(delta,\"↗️\"),else:if(delta<0,concat(delta,\"↘️\"),else:delta))","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]},"singleValueSettings":{"showLabel":true,"suffix":"","autoscale":true}},"visualization":"singleValue"},"144":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| sort timestamp, direction:\"descending\"\n| summarize\n`Risk level`=takeFirst(vulnerability.risk.level),\nby: {vulnerability.display_id, bin(timestamp,1h),alias:timestamp}\n| summarize\nLow=countIf(`Risk level`==\"LOW\"),\nby: {timestamp}\n| sort timestamp, direction:\"descending\"\n| summarize start = takeLast(Low), end = takeFirst(Low)\n| fields delta=end-start\n| fields `Low delta`=if(delta>0,concat(delta,\"↗️\"),else:if(delta<0,concat(delta,\"↘️\"),else:delta))","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]},"singleValueSettings":{"showLabel":true,"suffix":"","autoscale":true}},"visualization":"singleValue"},"145":{"title":"","type":"markdown","content":"### Assessment"},"146":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| sort timestamp, direction:\"descending\"\n| summarize \n{\nvulnerability.exposure_status=takeFirst(vulnerability.davis_assessment.exposure_status),\nvulnerability.exploit_status=takeFirst(vulnerability.davis_assessment.exploit_status),\nvulnerability.vulnerable_function_status=takeFirst(vulnerability.davis_assessment.vulnerable_function_status),\nvulnerability.data_asset_status=takeFirst(vulnerability.davis_assessment.data_asset_status)\n}, by: {timestamp=bin(timestamp,1h), vulnerability.display_id}\n| summarize\n{\n`Internet exposure`=countIf(vulnerability.exposure_status==\"PUBLIC_NETWORK\"),\n`Exploit available`=countIf(vulnerability.exploit_status==\"AVAILABLE\"),\n`Function in use`=countIf(vulnerability.vulnerable_function_status==\"IN_USE\"),\n`Reachable data assets`=countIf(vulnerability.data_asset_status==\"REACHABLE\")\n},\nby: {timestamp}\n| sort timestamp, direction:\"descending\"\n| summarize start = takeLast(`Function in use`), end = takeFirst(`Function in use`)\n| fields delta=end-start\n| fields `Function usage delta`=if(delta>0,concat(delta,\"↗️\"),else:if(delta<0,concat(delta,\"↘️\"),else:delta))","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[],"firstVisibleRowIndex":0},"singleValueSettings":{"showLabel":true,"suffix":"","autoscale":true}},"visualization":"singleValue"},"147":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| sort timestamp, direction:\"descending\"\n| summarize \n{\nvulnerability.exposure_status=takeFirst(vulnerability.davis_assessment.exposure_status),\nvulnerability.exploit_status=takeFirst(vulnerability.davis_assessment.exploit_status),\nvulnerability.vulnerable_function_status=takeFirst(vulnerability.davis_assessment.vulnerable_function_status),\nvulnerability.data_asset_status=takeFirst(vulnerability.davis_assessment.data_asset_status)\n}, by: {timestamp=bin(timestamp,1h), vulnerability.display_id}\n| summarize\n{\n`Internet exposure`=countIf(vulnerability.exposure_status==\"PUBLIC_NETWORK\"),\n`Exploit available`=countIf(vulnerability.exploit_status==\"AVAILABLE\"),\n`Function in use`=countIf(vulnerability.vulnerable_function_status==\"IN_USE\"),\n`Reachable data assets`=countIf(vulnerability.data_asset_status==\"REACHABLE\")\n},\nby: {timestamp}\n| sort timestamp, direction:\"descending\"\n| summarize \nstart = takeLast(`Internet exposure`), \nend = takeFirst(`Internet exposure`)\n| fields delta=end-start\n| fields `Internet exposure delta`=if(delta>0,concat(delta,\"↗️\"),else:if(delta<0,concat(delta,\"↘️\"),else:delta))","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[],"firstVisibleRowIndex":0},"singleValueSettings":{"showLabel":true,"suffix":"","autoscale":true}},"visualization":"singleValue"},"148":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| sort timestamp, direction:\"descending\"\n| summarize \n{\nvulnerability.exposure_status=takeFirst(vulnerability.davis_assessment.exposure_status),\nvulnerability.exploit_status=takeFirst(vulnerability.davis_assessment.exploit_status),\nvulnerability.vulnerable_function_status=takeFirst(vulnerability.davis_assessment.vulnerable_function_status),\nvulnerability.data_asset_status=takeFirst(vulnerability.davis_assessment.data_asset_status)\n}, by: {timestamp=bin(timestamp,1h), vulnerability.display_id}\n| summarize\n{\n`Internet exposure`=countIf(vulnerability.exposure_status==\"PUBLIC_NETWORK\"),\n`Exploit available`=countIf(vulnerability.exploit_status==\"AVAILABLE\"),\n`Function in use`=countIf(vulnerability.vulnerable_function_status==\"IN_USE\"),\n`Reachable data assets`=countIf(vulnerability.data_asset_status==\"REACHABLE\")\n},\nby: {timestamp}\n| sort timestamp, direction:\"descending\"\n| summarize \nstart = takeLast(`Exploit available`), \nend = takeFirst(`Exploit available`)\n| fields delta=end-start\n| fields `Exploit available delta`=if(delta>0,concat(delta,\"↗️\"),else:if(delta<0,concat(delta,\"↘️\"),else:delta))","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[],"firstVisibleRowIndex":0},"singleValueSettings":{"showLabel":true,"suffix":"","autoscale":true}},"visualization":"singleValue"},"149":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| sort timestamp, direction:\"descending\"\n| summarize \n{\nvulnerability.exposure_status=takeFirst(vulnerability.davis_assessment.exposure_status),\nvulnerability.exploit_status=takeFirst(vulnerability.davis_assessment.exploit_status),\nvulnerability.vulnerable_function_status=takeFirst(vulnerability.davis_assessment.vulnerable_function_status),\nvulnerability.data_asset_status=takeFirst(vulnerability.davis_assessment.data_asset_status)\n}, by: {timestamp=bin(timestamp,1h), vulnerability.display_id}\n| summarize\n{\n`Internet exposure`=countIf(vulnerability.exposure_status==\"PUBLIC_NETWORK\"),\n`Exploit available`=countIf(vulnerability.exploit_status==\"AVAILABLE\"),\n`Function in use`=countIf(vulnerability.vulnerable_function_status==\"IN_USE\"),\n`Reachable data assets`=countIf(vulnerability.data_asset_status==\"REACHABLE\")\n},\nby: {timestamp}\n| sort timestamp, direction:\"descending\"\n| summarize \nstart = takeLast(`Reachable data assets`), \nend = takeFirst(`Reachable data assets`)\n| fields delta=end-start\n| fields `Data assets exposure delta`=if(delta>0,concat(delta,\"↗️\"),else:if(delta<0,concat(delta,\"↘️\"),else:delta))","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[],"firstVisibleRowIndex":0},"singleValueSettings":{"showLabel":true,"suffix":"","autoscale":true}},"visualization":"singleValue"},"150":{"type":"data","title":"Affected entities count by type","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| sort timestamp, direction:\"descending\"\n| summarize \n{\naffected_entity.type=takeFirst(affected_entity.type)\n},\nby: {timestamp=bin(timestamp, 1h), affected_entity.id}\n// end of latest snapshot fetch\n| summarize {\n`Process groups`=countIf(affected_entity.type==\"PROCESS_GROUP\"),\n`Hosts`=countIf(affected_entity.type==\"HOST\")\n}, \nby: {timestamp}","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","legend":{"hidden":false,"position":"auto"},"leftYAxisSettings":{"label":"","min":0},"seriesOverrides":[{"seriesId":"Total affected entities","override":{"color":{"Default":"var(--dt-colors-charts-categorical-themed-blue-steel-color-05-default, #638ecf)","Hover":"var(--dt-colors-charts-categorical-themed-blue-steel-color-05-hover, #4e72a6)","Active":"var(--dt-colors-charts-categorical-themed-blue-steel-color-05-active, #3b567d)"}}},{"seriesId":"Exposted entities","override":{"color":"#b3007d"}}]},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[["Affected entities"]],"firstVisibleRowIndex":0},"singleValueSettings":{"showLabel":true,"suffix":"","recordField":"Affected Entities","autoscale":true}},"visualization":"areaChart"},"151":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n//end of filtering for the latest snapshot\n| summarize\naffected_entity.type=takeAny(affected_entity.type),\nby: {affected_entity.id}\n| summarize\n`Hosts`=countIf(affected_entity.type==\"HOST\")\n| fields Hosts=if(Hosts>0,Hosts,else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]}},"visualization":"singleValue"},"152":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| sort timestamp, direction:\"descending\"\n| summarize \n{\naffected_entity.type=takeFirst(affected_entity.type)\n},\nby: {timestamp=bin(timestamp, 1h), affected_entity.id}\n// end of latest snapshot fetch\n| summarize {\n`Process groups`=countIf(affected_entity.type==\"PROCESS_GROUP\"),\n`Hosts`=countIf(affected_entity.type==\"HOST\")\n}, \nby: {timestamp}\n| sort timestamp, direction:\"descending\"\n| summarize \nstart=takeLast(`Hosts`), \nend=takeFirst(`Hosts`)\n| fields delta=end-start\n| fields `Hosts delta`=if(delta>0,concat(delta,\"↗️\"),else:if(delta<0,concat(delta,\"↘️\"),else:delta))","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]}},"visualization":"singleValue"},"153":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n//end of filtering for the latest snapshot\n| summarize\n`Affected processes`=replaceString(substring(toString(arrayDistinct(arrayRemoveNulls(collectArray(affected_entity.affected_processes.ids)))),from:2,to:-2),\"[\",\"\")\n| fields \n`Affected processes`= arrayDistinct(splitString(toString(replaceString(toString(`Affected processes`),\"], \",\",\")),\",\"))\n| fields \n`Affected processes`=if(not(in(\"\",`Affected processes`)),arraySize(`Affected processes`), else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[],"firstVisibleRowIndex":0}},"visualization":"singleValue"},"154":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| summarize\n{\n`Internet exposure`=countIf(vulnerability.davis_assessment.exposure_status==\"PUBLIC_EXPOSURE\")\n},\nby: {timestamp, affected_entity.id}\n| summarize\n{\n`Exposed`=countIf(`Internet exposure`>0),\n`Not Exposed`=countIf(`Internet exposure`==0)\n},\nby: {timestamp}\n| sort timestamp, direction:\"descending\"\n| summarize\n{\n`Exposed`=takeFirst(`Exposed`),\n`Not Exposed`=takeFirst(`Not Exposed`)\n},\nby: {bin(timestamp, 1h),alias:timestamp}\n| sort timestamp, direction:\"descending\"\n| summarize \nstart=takeLast(`Exposed`), \nend=takeFirst(`Exposed`)\n| fields delta=end-start\n| fields `Exposed delta`=if(delta>0,concat(delta,\"↗️\"),else:if(delta<0,concat(delta,\"↘️\"),else:delta))","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]}},"visualization":"singleValue"},"155":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n//end of filtering for the latest snapshot\n| summarize\n{\n`Internet exposure`=countIf(vulnerability.davis_assessment.exposure_status==\"PUBLIC_EXPOSURE\")\n},\nby: {affected_entity.id}\n| summarize\n`Internet-exposed`=countIf(`Internet exposure`>0)\n| fields `Internet-exposed`=if(`Internet-exposed`>0,`Internet-exposed`,else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]}},"visualization":"singleValue"},"158":{"title":"","type":"markdown","content":"<br/><br/>"},"159":{"title":"","type":"markdown","content":"### Affected entities"},"160":{"type":"data","title":"Vulnerability count by stack level","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n//end of filtering for the latest snapshot\n| sort timestamp, direction:\"descending\"\n| summarize \n{vulnerability.stack=takeFirst(vulnerability.stack)},\nby: {vulnerability.display_id}\n//end of filtering for the latest snapshot\n| fields\nvulnerability.stack=if(vulnerability.stack==\"CODE_LIBRARY\",\"Library\",\n                else:if(vulnerability.stack==\"SOFTWARE\",\"Software runtime\",\n                else:if(vulnerability.stack==\"CONTAINER_ORCHESTRATION\", \"Container runtime\")))\n| summarize count(), by:{vulnerability.stack}","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","colorPalette":"categorical","circleChartSettings":{"hideLabels":false,"groupingThresholdType":"relative"},"legend":{"hidden":false,"position":"auto"},"categoricalBarChartSettings":{"categoryAxisLabel":"","valueAxisLabel":"","layout":"horizontal"}},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[],"firstVisibleRowIndex":0}},"visualization":"pieChart"},"161":{"title":"","type":"markdown","content":"### Related infrastructure"},"162":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n//end of filtering for the latest snapshot\n| summarize entities=collectDistinct(related_entities.applications.ids)\n| expand entities\n| summarize entities=arraySize(arrayRemoveNulls(collectDistinct(entities)))\n| fields `Related applications`=if(entities>0, entities,  else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[["Related services"]]}},"visualization":"singleValue"},"163":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n//end of filtering for the latest snapshot\n| summarize entities=collectDistinct(related_entities.services.ids)\n| expand entities\n| summarize entities=arraySize(arrayRemoveNulls(collectDistinct(entities)))\n| fields `Related services`=if(entities>0, entities,  else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[["Related services"]]}},"visualization":"singleValue"},"164":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n//end of filtering for the latest snapshot\n| summarize entities=collectDistinct(related_entities.kubernetes_workloads.ids)\n| expand entities\n| summarize entities=arraySize(arrayRemoveNulls(collectDistinct(entities)))\n| fields `Related Kubernetes workloads`=if(entities>0, entities,  else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[],"firstVisibleRowIndex":0}},"visualization":"singleValue"},"165":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n//end of filtering for the latest snapshot\n| summarize entities=collectDistinct(related_entities.kubernetes_clusters.ids)\n| expand entities\n| summarize entities=arraySize(arrayRemoveNulls(collectDistinct(entities)))\n| fields `Related Kubernetes clusters`=if(entities>0, entities,  else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[],"firstVisibleRowIndex":0}},"visualization":"singleValue"},"166":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n//end of filtering for the latest snapshot\n| summarize entities=collectDistinct(related_entities.hosts.ids)\n| expand entities\n| summarize entities=arraySize(arrayRemoveNulls(collectDistinct(entities)))\n| fields `Related hosts`=if(entities>0, entities,  else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[],"firstVisibleRowIndex":0}},"visualization":"singleValue"},"167":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| sort timestamp, direction:\"descending\"\n| summarize entities=takeFirst(related_entities.kubernetes_workloads.ids), \nby:{timestamp=bin(timestamp, 1h), affected_entity.id, vulnerability.id}\n| summarize entities=collectDistinct(entities), by:{timestamp}\n| expand entities\n| summarize entities=arraySize(arrayRemoveNulls(collectDistinct(entities))), by:{timestamp}\n| sort timestamp, direction:\"descending\"\n| summarize \nstart=takeLast(entities), \nend=takeFirst(entities)\n| fields delta=end-start\n| fields `Workloads delta`=if(delta>0,concat(delta,\"↗️\"),else:if(delta<0,concat(delta,\"↘️\"),else:delta))","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","legend":{"hidden":true,"position":"bottom"},"leftYAxisSettings":{"label":"","min":0,"scale":"linear"}},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]},"singleValueSettings":{"showLabel":true,"suffix":"","recordField":"Affected Entities","autoscale":true}},"visualization":"singleValue"},"168":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| sort timestamp, direction:\"descending\"\n| summarize entities=takeFirst(related_entities.services.ids), \nby:{timestamp=bin(timestamp, 1h), affected_entity.id, vulnerability.id}\n| summarize entities=collectDistinct(entities), by:{timestamp}\n| expand entities\n| summarize entities=arraySize(arrayRemoveNulls(collectDistinct(entities))), by:{timestamp}\n| sort timestamp, direction:\"descending\"\n| summarize \nstart=takeLast(entities), \nend=takeFirst(entities)\n| fields delta=end-start\n| fields `Services delta`=if(delta>0,concat(delta,\"↗️\"),else:if(delta<0,concat(delta,\"↘️\"),else:delta))","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","legend":{"hidden":true,"position":"bottom"},"leftYAxisSettings":{"label":"","min":0,"scale":"linear"}},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]},"singleValueSettings":{"showLabel":true,"suffix":"","recordField":"Affected Entities","autoscale":true}},"visualization":"singleValue"},"169":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| sort timestamp, direction:\"descending\"\n| summarize entities=takeFirst(related_entities.hosts.ids), \nby:{timestamp=bin(timestamp, 1h), affected_entity.id, vulnerability.id}\n| summarize entities=collectDistinct(entities), by:{timestamp}\n| expand entities\n| summarize entities=arraySize(arrayRemoveNulls(collectDistinct(entities))), by:{timestamp}\n| sort timestamp, direction:\"descending\"\n| summarize \nstart=takeLast(entities), \nend=takeFirst(entities)\n| fields delta=end-start\n| fields `Hosts delta`=if(delta>0,concat(delta,\"↗️\"),else:if(delta<0,concat(delta,\"↘️\"),else:delta))","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","legend":{"hidden":true,"position":"bottom"},"leftYAxisSettings":{"label":"","min":0,"scale":"linear"}},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]},"singleValueSettings":{"showLabel":true,"suffix":"","recordField":"Affected Entities","autoscale":true}},"visualization":"singleValue"},"170":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| sort timestamp, direction:\"descending\"\n| summarize entities=takeFirst(related_entities.kubernetes_clusters.ids), \nby:{timestamp=bin(timestamp, 1h), affected_entity.id, vulnerability.id}\n| summarize entities=collectDistinct(entities), by:{timestamp}\n| expand entities\n| summarize entities=arraySize(arrayRemoveNulls(collectDistinct(entities))), by:{timestamp}\n| sort timestamp, direction:\"descending\"\n| summarize \nstart=takeLast(entities), \nend=takeFirst(entities)\n| fields delta=end-start\n| fields `Clusters delta`=if(delta>0,concat(delta,\"↗️\"),else:if(delta<0,concat(delta,\"↘️\"),else:delta))","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","legend":{"hidden":true,"position":"bottom"},"leftYAxisSettings":{"label":"","min":0,"scale":"linear"}},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]},"singleValueSettings":{"showLabel":true,"suffix":"","recordField":"Affected Entities","autoscale":true}},"visualization":"singleValue"},"171":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n//end of filtering for the latest snapshot\n| summarize \nComponents=countIf(isNotNull(affected_entity.vulnerable_component.id)),\nby: {affected_entity.vulnerable_component.id}\n| summarize \n`Software components`=countIf(Components>0)\n| fields `Software components`=if(`Software components`>0,`Software components`,else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]}},"visualization":"singleValue"},"172":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n//end of filtering for the latest snapshot\n| summarize `Functions in use`=collectDistinct(affected_entity.vulnerable_functions)\n| expand `Functions in use`\n| summarize `Functions in use`=collectDistinct(`Functions in use`)\n| fields `Functions in use`=arraySize(arrayRemoveNulls(`Functions in use`))\n| fields `Functions in use`=if(`Functions in use`>0,`Functions in use`,else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]}},"visualization":"singleValue"},"174":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n//end of filtering for the latest snapshot\n| summarize entities=collectDistinct(related_entities.databases.ids)\n| expand entities\n| summarize entities=arraySize(arrayRemoveNulls(collectDistinct(entities)))\n| fields `Related databases`=if(entities>0, entities,  else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]}},"visualization":"singleValue"},"175":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| sort timestamp, direction:\"descending\"\n| summarize entities=takeFirst(related_entities.databases.ids), \nby:{timestamp=bin(timestamp, 1h), affected_entity.id, vulnerability.id}\n| summarize entities=collectDistinct(entities), by:{timestamp}\n| expand entities\n| summarize entities=arraySize(arrayRemoveNulls(collectDistinct(entities))), by:{timestamp}\n| sort timestamp, direction:\"descending\"\n| summarize \nstart=takeLast(entities), \nend=takeFirst(entities)\n| fields delta=end-start\n| fields `Databases delta`=if(delta>0,concat(delta,\"↗️\"),else:if(delta<0,concat(delta,\"↘️\"),else:delta))","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","legend":{"hidden":true,"position":"bottom"},"leftYAxisSettings":{"label":"","min":0,"scale":"linear"}},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]},"singleValueSettings":{"showLabel":true,"suffix":"","recordField":"Affected Entities","autoscale":true}},"visualization":"singleValue"},"176":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| sort timestamp, direction:\"descending\"\n| summarize entities=takeFirst(related_entities.databases.ids), \nby:{timestamp=bin(timestamp, 1h), affected_entity.id, vulnerability.id}\n| summarize entities=collectDistinct(entities), by:{timestamp}\n| expand entities\n| summarize entities=arraySize(arrayRemoveNulls(collectDistinct(entities))), by:{timestamp}\n| sort timestamp, direction:\"descending\"","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","legend":{"hidden":true}},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[["Related databases"]]}},"visualization":"areaChart"},"177":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| sort timestamp, direction:\"descending\"\n| summarize entities=takeFirst(related_entities.applications.ids), \nby:{timestamp=bin(timestamp, 1h), affected_entity.id, vulnerability.id}\n| summarize entities=collectDistinct(entities), by:{timestamp}\n| expand entities\n| summarize entities=arraySize(arrayRemoveNulls(collectDistinct(entities))), by:{timestamp}\n| sort timestamp, direction:\"descending\"","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","legend":{"hidden":true}},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[["Related databases"]]}},"visualization":"areaChart"},"178":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| sort timestamp, direction:\"descending\"\n| summarize entities=takeFirst(related_entities.services.ids), \nby:{timestamp=bin(timestamp, 1h), affected_entity.id, vulnerability.id}\n| summarize entities=collectDistinct(entities), by:{timestamp}\n| expand entities\n| summarize entities=arraySize(arrayRemoveNulls(collectDistinct(entities))), by:{timestamp}\n| sort timestamp, direction:\"descending\"","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","legend":{"hidden":true}},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[["Related services"]]}},"visualization":"areaChart"},"179":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| sort timestamp, direction:\"descending\"\n| summarize entities=takeFirst(related_entities.hosts.ids), \nby:{timestamp=bin(timestamp, 1h), affected_entity.id, vulnerability.id}\n| summarize entities=collectDistinct(entities), by:{timestamp}\n| expand entities\n| summarize entities=arraySize(arrayRemoveNulls(collectDistinct(entities))), by:{timestamp}\n| sort timestamp, direction:\"descending\"","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","legend":{"hidden":true}},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[["Related processes"]]}},"visualization":"areaChart"},"180":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| sort timestamp, direction:\"descending\"\n| summarize entities=takeFirst(related_entities.kubernetes_workloads.ids), \nby:{timestamp=bin(timestamp, 1h), affected_entity.id, vulnerability.id}\n| summarize entities=collectDistinct(entities), by:{timestamp}\n| expand entities\n| summarize entities=arraySize(arrayRemoveNulls(collectDistinct(entities))), by:{timestamp}\n| sort timestamp, direction:\"descending\"","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","legend":{"hidden":true}},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[["Related hosts"]]}},"visualization":"areaChart"},"181":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| sort timestamp, direction:\"descending\"\n| summarize entities=takeFirst(related_entities.kubernetes_clusters.ids), \nby:{timestamp=bin(timestamp, 1h), affected_entity.id, vulnerability.id}\n| summarize entities=collectDistinct(entities), by:{timestamp}\n| expand entities\n| summarize entities=arraySize(arrayRemoveNulls(collectDistinct(entities))), by:{timestamp}\n| sort timestamp, direction:\"descending\"","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","legend":{"hidden":true}},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[["Related Kubernetes workloads"]]}},"visualization":"areaChart"},"182":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| sort timestamp, direction:\"descending\"\n| summarize \n{\naffected_entity.vulnerable_component.id=takeFirst(affected_entity.vulnerable_component.id),\nvulnerability.davis_assessment.vulnerable_function_status=takeFirst(vulnerability.davis_assessment.vulnerable_function_status)\n},\nby: {timestamp=bin(timestamp, 1h), affected_entity.id, vulnerability.display_id}\n| summarize \nComponents=countIf(isNotNull(affected_entity.vulnerable_component.id)),\nby: {timestamp, affected_entity.vulnerable_component.id}\n| summarize \nComponents=countIf(Components>0),\nby:{timestamp}\n| sort timestamp, direction:\"descending\"\n| summarize \nstart=takeLast(Components), \nend=takeFirst(Components)\n| fields delta=end-start\n| fields `Components delta`=if(delta>0,concat(delta,\"↗️\"),else:if(delta<0,concat(delta,\"↘️\"),else:delta))","visualizationSettings":{"chartSettings":{"gapPolicy":"connect","legend":{"hidden":true,"position":"bottom"},"leftYAxisSettings":{"label":"","min":0,"scale":"linear"}},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]},"singleValueSettings":{"showLabel":true,"suffix":"","recordField":"Affected Entities","autoscale":true}},"visualization":"singleValue"},"183":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n//end of filtering for the latest snapshot\n| summarize \nComponents=countIf(vulnerability.davis_assessment.vulnerable_function_status==\"IN_USE\" AND isNotNull(affected_entity.vulnerable_component.id)),\nby: {affected_entity.vulnerable_component.id}\n| summarize \n`with function usage`=countIf(Components>0)\n| fields `with function usage`=if(`with function usage`>0,`with function usage`,else:\"-\")","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]}},"visualization":"singleValue"},"184":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| sort timestamp, direction:\"descending\"\n| summarize \n{\naffected_entity.vulnerable_component.id=takeFirst(affected_entity.vulnerable_component.id),\nvulnerability.vulnerable_function_status=takeFirst(vulnerability.davis_assessment.vulnerable_function_status)\n},\nby: {timestamp=bin(timestamp, 1h), affected_entity.id, vulnerability.display_id}\n| summarize \nComponents=countIf(vulnerability.vulnerable_function_status==\"IN_USE\" AND isNotNull(affected_entity.vulnerable_component.id)),\nby: {timestamp, affected_entity.vulnerable_component.id}\n| summarize \nComponents=countIf(Components>0),\nby:{timestamp}\n| sort timestamp, direction:\"descending\"\n| summarize \nstart=takeLast(Components), \nend=takeFirst(Components)\n| fields delta=end-start\n| fields `Function usage delta`=if(delta>0,concat(delta,\"↗️\"),else:if(delta<0,concat(delta,\"↘️\"),else:delta))","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]}},"visualization":"singleValue"},"185":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| summarize `Functions in use`=collectDistinct(affected_entity.vulnerable_functions),\nby: {timestamp}\n| expand `Functions in use`\n| summarize `Functions in use`=collectDistinct(`Functions in use`),\nby: {timestamp}\n| fields timestamp, `Functions in use`=arraySize(arrayRemoveNulls(`Functions in use`))\n| sort timestamp, direction:\"descending\"\n| summarize `Functions in use`=takeFirst(`Functions in use`),\nby:{{timestamp=bin(timestamp,1h)}}\n| sort timestamp, direction:\"descending\"\n| summarize \nstart=takeLast(`Functions in use`), \nend=takeFirst(`Functions in use`)\n| fields delta=end-start\n| fields `Function delta`=if(delta>0,concat(delta,\"↗️\"),else:if(delta<0,concat(delta,\"↘️\"),else:delta))","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]}},"visualization":"singleValue"},"186":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n// first summarize on the entity level\n| sort timestamp, direction:\"descending\"\n| summarize \n{\nvulnerability.vulnerable_function_status=takeFirst(vulnerability.davis_assessment.vulnerable_function_status)\n},\nby: {timestamp=bin(timestamp, 1h), affected_entity.id, vulnerability.display_id}\n| summarize \n`Function in use`=countIf(vulnerability.vulnerable_function_status == \"IN_USE\"), \nby: {timestamp, affected_entity.id}\n| summarize \n`With functions in use`=countIf(`Function in use`>0),\nby: {timestamp}\n| sort timestamp, direction:\"descending\"\n| summarize \nstart=takeLast(`With functions in use`), \nend=takeFirst(`With functions in use`)\n| fields delta=end-start\n| fields `Entities delta`=if(delta>0,concat(delta,\"↗️\"),else:if(delta<0,concat(delta,\"↘️\"),else:delta))","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":false},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]}},"visualization":"singleValue"},"187":{"title":"","type":"markdown","content":"### Risk level"},"188":{"title":"","type":"markdown","content":"### Software components"},"189":{"type":"data","title":"","query":"fetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n// filter only the latest snapshot data\n| fieldsAdd matcher=\"match\"\n| lookup [\nfetch events, scanLimitGBytes:$ScanGBLimit\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n| filter ($Status==\"ANY\" OR ($Status==vulnerability.resolution.status AND vulnerability.mute.status==\"NOT_MUTED\" ) OR (vulnerability.mute_status==\"MUTED\" AND $Status==\"MUTED\"))\n| filter in(\"ANY\", $RiskLevel) OR in(vulnerability.risk.level,$RiskLevel)\n| filter \"ANY\"==$StackLevel OR vulnerability.stack==$StackLevel\n| filter \"ANY\"==$Type OR vulnerability.type==$Type\n| filter $ManagementZone==\"ANY\" OR in($ManagementZone,affected_entity.management_zones.names)\n| filter $ComponentName==\"ANY\" OR contains(affected_entity.vulnerable_component.name,$ComponentName)\n| fields \nmaxTimestamp=timestamp,\nmatcher=\"match\"\n| limit 1\n], sourceField:matcher, lookupField:matcher\n| filter timestamp==lookup.maxTimestamp\n//end of filtering for the latest snapshot\n| summarize\n`Vulnerabilities`=toString(arraySize(collectDistinct(vulnerability.display_id)))\n| fields `Total vulnerabilities`=`Vulnerabilities`","visualizationSettings":{"chartSettings":{"gapPolicy":"connect"},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"enableLineWrap":true,"hiddenColumns":[],"lineWrapIds":[]},"tableSettings":{"displayMode":"edit","lineWrapIds":[]},"singleValueSettings":{"showLabel":true,"suffix":"","autoscale":true}},"visualization":"singleValue"}},"layouts":{"12":{"x":19,"y":0,"w":4,"h":6},"14":{"x":5,"y":0,"w":14,"h":6},"17":{"x":8,"y":50,"w":15,"h":8},"20":{"x":8,"y":85,"w":15,"h":2},"31":{"x":1,"y":52,"w":4,"h":2},"32":{"x":1,"y":56,"w":4,"h":2},"35":{"x":1,"y":81,"w":4,"h":2},"37":{"x":0,"y":6,"w":24,"h":2},"40":{"x":5,"y":96,"w":3,"h":2},"47":{"x":0,"y":109,"w":24,"h":2},"48":{"x":1,"y":116,"w":22,"h":7},"51":{"x":1,"y":128,"w":22,"h":7},"54":{"x":1,"y":87,"w":22,"h":8},"55":{"x":1,"y":54,"w":4,"h":2},"58":{"x":0,"y":47,"w":24,"h":2},"59":{"x":0,"y":78,"w":24,"h":2},"63":{"x":1,"y":123,"w":22,"h":1},"64":{"x":8,"y":124,"w":15,"h":4},"66":{"x":8,"y":112,"w":15,"h":4},"68":{"x":1,"y":9,"w":6,"h":2},"69":{"x":1,"y":11,"w":6,"h":4},"71":{"x":8,"y":29,"w":15,"h":8},"72":{"x":8,"y":13,"w":8,"h":10},"73":{"x":1,"y":15,"w":6,"h":8},"75":{"x":1,"y":66,"w":22,"h":11},"76":{"x":1,"y":50,"w":7,"h":2},"77":{"x":8,"y":9,"w":8,"h":2},"89":{"x":1,"y":2,"w":4,"h":2},"93":{"x":1,"y":40,"w":4,"h":2},"94":{"x":1,"y":44,"w":4,"h":2},"95":{"x":1,"y":42,"w":4,"h":2},"96":{"x":1,"y":38,"w":4,"h":2},"97":{"x":1,"y":27,"w":22,"h":2},"99":{"x":1,"y":58,"w":22,"h":1},"102":{"x":1,"y":8,"w":6,"h":1},"104":{"x":8,"y":59,"w":15,"h":7},"105":{"x":1,"y":23,"w":22,"h":1},"106":{"x":8,"y":11,"w":4,"h":2},"107":{"x":12,"y":11,"w":2,"h":2},"108":{"x":14,"y":11,"w":2,"h":2},"111":{"x":1,"y":49,"w":22,"h":1},"113":{"x":1,"y":126,"w":4,"h":2},"114":{"x":17,"y":19,"w":3,"h":2},"115":{"x":17,"y":11,"w":3,"h":2},"116":{"x":17,"y":13,"w":3,"h":2},"117":{"x":20,"y":11,"w":3,"h":2},"118":{"x":17,"y":21,"w":6,"h":2},"119":{"x":20,"y":13,"w":3,"h":2},"120":{"x":8,"y":8,"w":7,"h":1},"121":{"x":17,"y":8,"w":6,"h":1},"123":{"x":17,"y":9,"w":6,"h":2},"124":{"x":1,"y":4,"w":4,"h":2},"126":{"x":5,"y":52,"w":3,"h":2},"127":{"x":5,"y":56,"w":3,"h":2},"128":{"x":5,"y":54,"w":3,"h":2},"130":{"x":0,"y":24,"w":24,"h":2},"131":{"x":8,"y":38,"w":15,"h":8},"132":{"x":1,"y":46,"w":22,"h":1},"133":{"x":1,"y":77,"w":22,"h":1},"134":{"x":17,"y":17,"w":6,"h":2},"135":{"x":20,"y":19,"w":3,"h":2},"136":{"x":5,"y":81,"w":3,"h":2},"137":{"x":1,"y":29,"w":4,"h":2},"138":{"x":1,"y":31,"w":4,"h":2},"139":{"x":1,"y":33,"w":4,"h":2},"140":{"x":1,"y":35,"w":4,"h":2},"141":{"x":5,"y":29,"w":3,"h":2},"142":{"x":5,"y":31,"w":3,"h":2},"143":{"x":5,"y":33,"w":3,"h":2},"144":{"x":5,"y":35,"w":3,"h":2},"145":{"x":1,"y":37,"w":22,"h":1},"146":{"x":5,"y":38,"w":3,"h":2},"147":{"x":5,"y":40,"w":3,"h":2},"148":{"x":5,"y":42,"w":3,"h":2},"149":{"x":5,"y":44,"w":3,"h":2},"150":{"x":8,"y":81,"w":15,"h":4},"151":{"x":1,"y":83,"w":4,"h":2},"152":{"x":5,"y":83,"w":3,"h":2},"153":{"x":17,"y":15,"w":6,"h":2},"154":{"x":5,"y":85,"w":3,"h":2},"155":{"x":1,"y":85,"w":4,"h":2},"158":{"x":1,"y":108,"w":22,"h":1},"159":{"x":1,"y":80,"w":22,"h":1},"160":{"x":1,"y":59,"w":7,"h":7},"161":{"x":1,"y":95,"w":22,"h":1},"162":{"x":1,"y":96,"w":4,"h":2},"163":{"x":1,"y":100,"w":4,"h":2},"164":{"x":1,"y":104,"w":4,"h":2},"165":{"x":1,"y":106,"w":4,"h":2},"166":{"x":1,"y":102,"w":4,"h":2},"167":{"x":5,"y":104,"w":3,"h":2},"168":{"x":5,"y":100,"w":3,"h":2},"169":{"x":5,"y":102,"w":3,"h":2},"170":{"x":5,"y":106,"w":3,"h":2},"171":{"x":1,"y":112,"w":4,"h":2},"172":{"x":1,"y":124,"w":4,"h":2},"174":{"x":1,"y":98,"w":4,"h":2},"175":{"x":5,"y":98,"w":3,"h":2},"176":{"x":8,"y":98,"w":15,"h":2},"177":{"x":8,"y":96,"w":15,"h":2},"178":{"x":8,"y":100,"w":15,"h":2},"179":{"x":8,"y":102,"w":15,"h":2},"180":{"x":8,"y":104,"w":15,"h":2},"181":{"x":8,"y":106,"w":15,"h":2},"182":{"x":5,"y":112,"w":3,"h":2},"183":{"x":1,"y":114,"w":4,"h":2},"184":{"x":5,"y":114,"w":3,"h":2},"185":{"x":5,"y":124,"w":3,"h":2},"186":{"x":5,"y":126,"w":3,"h":2},"187":{"x":1,"y":26,"w":22,"h":1},"188":{"x":1,"y":111,"w":22,"h":1},"189":{"x":1,"y":0,"w":4,"h":2}}}
